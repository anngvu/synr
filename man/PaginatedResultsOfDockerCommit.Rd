% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/paginated_results_of_docker_commit.R
\docType{class}
\name{PaginatedResultsOfDockerCommit}
\alias{PaginatedResultsOfDockerCommit}
\title{PaginatedResultsOfDockerCommit}
\format{
An \code{R6Class} generator object
}
\description{
PaginatedResultsOfDockerCommit Class

PaginatedResultsOfDockerCommit Class
}
\details{
Create a new PaginatedResultsOfDockerCommit
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{totalNumberOfResults}}{integer [optional]}

\item{\code{results}}{list(\link{OrgSagebionetworksRepoModelDockerDockerCommit}) [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-PaginatedResultsOfDockerCommit-new}{\code{PaginatedResultsOfDockerCommit$new()}}
\item \href{#method-PaginatedResultsOfDockerCommit-toJSON}{\code{PaginatedResultsOfDockerCommit$toJSON()}}
\item \href{#method-PaginatedResultsOfDockerCommit-fromJSON}{\code{PaginatedResultsOfDockerCommit$fromJSON()}}
\item \href{#method-PaginatedResultsOfDockerCommit-toJSONString}{\code{PaginatedResultsOfDockerCommit$toJSONString()}}
\item \href{#method-PaginatedResultsOfDockerCommit-fromJSONString}{\code{PaginatedResultsOfDockerCommit$fromJSONString()}}
\item \href{#method-PaginatedResultsOfDockerCommit-validateJSON}{\code{PaginatedResultsOfDockerCommit$validateJSON()}}
\item \href{#method-PaginatedResultsOfDockerCommit-toString}{\code{PaginatedResultsOfDockerCommit$toString()}}
\item \href{#method-PaginatedResultsOfDockerCommit-isValid}{\code{PaginatedResultsOfDockerCommit$isValid()}}
\item \href{#method-PaginatedResultsOfDockerCommit-getInvalidFields}{\code{PaginatedResultsOfDockerCommit$getInvalidFields()}}
\item \href{#method-PaginatedResultsOfDockerCommit-print}{\code{PaginatedResultsOfDockerCommit$print()}}
\item \href{#method-PaginatedResultsOfDockerCommit-clone}{\code{PaginatedResultsOfDockerCommit$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfDockerCommit-new"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfDockerCommit-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new PaginatedResultsOfDockerCommit class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfDockerCommit$new(
  totalNumberOfResults = NULL,
  results = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{totalNumberOfResults}}{totalNumberOfResults}

\item{\code{results}}{results}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfDockerCommit-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfDockerCommit-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfDockerCommit$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
PaginatedResultsOfDockerCommit in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfDockerCommit-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfDockerCommit-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of PaginatedResultsOfDockerCommit
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfDockerCommit$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of PaginatedResultsOfDockerCommit
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfDockerCommit-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfDockerCommit-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfDockerCommit$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
PaginatedResultsOfDockerCommit in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfDockerCommit-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfDockerCommit-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of PaginatedResultsOfDockerCommit
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfDockerCommit$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of PaginatedResultsOfDockerCommit
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfDockerCommit-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfDockerCommit-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to PaginatedResultsOfDockerCommit and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfDockerCommit$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfDockerCommit-toString"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfDockerCommit-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfDockerCommit$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of PaginatedResultsOfDockerCommit
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfDockerCommit-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfDockerCommit-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfDockerCommit$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfDockerCommit-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfDockerCommit-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfDockerCommit$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfDockerCommit-print"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfDockerCommit-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfDockerCommit$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfDockerCommit-clone"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfDockerCommit-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfDockerCommit$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
