% Generated by roxygen2: do not edit by hand
% Please edit documentation in
%   R/org_sagebionetworks_evaluation_model_evaluation_round_limit.R
\docType{class}
\name{OrgSagebionetworksEvaluationModelEvaluationRoundLimit}
\alias{OrgSagebionetworksEvaluationModelEvaluationRoundLimit}
\title{OrgSagebionetworksEvaluationModelEvaluationRoundLimit}
\format{
An \code{R6Class} generator object
}
\description{
Sets limits for maximum submissions in a SubmissionRound. Each limitType may only appear once in an EvaluationRound's list of limits

OrgSagebionetworksEvaluationModelEvaluationRoundLimit Class
}
\details{
Create a new OrgSagebionetworksEvaluationModelEvaluationRoundLimit
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{limitType}}{character}

\item{\code{maximumSubmissions}}{integer}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-OrgSagebionetworksEvaluationModelEvaluationRoundLimit-new}{\code{OrgSagebionetworksEvaluationModelEvaluationRoundLimit$new()}}
\item \href{#method-OrgSagebionetworksEvaluationModelEvaluationRoundLimit-toJSON}{\code{OrgSagebionetworksEvaluationModelEvaluationRoundLimit$toJSON()}}
\item \href{#method-OrgSagebionetworksEvaluationModelEvaluationRoundLimit-fromJSON}{\code{OrgSagebionetworksEvaluationModelEvaluationRoundLimit$fromJSON()}}
\item \href{#method-OrgSagebionetworksEvaluationModelEvaluationRoundLimit-toJSONString}{\code{OrgSagebionetworksEvaluationModelEvaluationRoundLimit$toJSONString()}}
\item \href{#method-OrgSagebionetworksEvaluationModelEvaluationRoundLimit-fromJSONString}{\code{OrgSagebionetworksEvaluationModelEvaluationRoundLimit$fromJSONString()}}
\item \href{#method-OrgSagebionetworksEvaluationModelEvaluationRoundLimit-validateJSON}{\code{OrgSagebionetworksEvaluationModelEvaluationRoundLimit$validateJSON()}}
\item \href{#method-OrgSagebionetworksEvaluationModelEvaluationRoundLimit-toString}{\code{OrgSagebionetworksEvaluationModelEvaluationRoundLimit$toString()}}
\item \href{#method-OrgSagebionetworksEvaluationModelEvaluationRoundLimit-isValid}{\code{OrgSagebionetworksEvaluationModelEvaluationRoundLimit$isValid()}}
\item \href{#method-OrgSagebionetworksEvaluationModelEvaluationRoundLimit-getInvalidFields}{\code{OrgSagebionetworksEvaluationModelEvaluationRoundLimit$getInvalidFields()}}
\item \href{#method-OrgSagebionetworksEvaluationModelEvaluationRoundLimit-print}{\code{OrgSagebionetworksEvaluationModelEvaluationRoundLimit$print()}}
\item \href{#method-OrgSagebionetworksEvaluationModelEvaluationRoundLimit-clone}{\code{OrgSagebionetworksEvaluationModelEvaluationRoundLimit$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksEvaluationModelEvaluationRoundLimit-new"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksEvaluationModelEvaluationRoundLimit-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new OrgSagebionetworksEvaluationModelEvaluationRoundLimit class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksEvaluationModelEvaluationRoundLimit$new(
  limitType,
  maximumSubmissions,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{limitType}}{limitType}

\item{\code{maximumSubmissions}}{maximumSubmissions}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksEvaluationModelEvaluationRoundLimit-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksEvaluationModelEvaluationRoundLimit-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksEvaluationModelEvaluationRoundLimit$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
OrgSagebionetworksEvaluationModelEvaluationRoundLimit in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksEvaluationModelEvaluationRoundLimit-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksEvaluationModelEvaluationRoundLimit-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of OrgSagebionetworksEvaluationModelEvaluationRoundLimit
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksEvaluationModelEvaluationRoundLimit$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of OrgSagebionetworksEvaluationModelEvaluationRoundLimit
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksEvaluationModelEvaluationRoundLimit-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksEvaluationModelEvaluationRoundLimit-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksEvaluationModelEvaluationRoundLimit$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
OrgSagebionetworksEvaluationModelEvaluationRoundLimit in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksEvaluationModelEvaluationRoundLimit-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksEvaluationModelEvaluationRoundLimit-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of OrgSagebionetworksEvaluationModelEvaluationRoundLimit
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksEvaluationModelEvaluationRoundLimit$fromJSONString(
  input_json
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of OrgSagebionetworksEvaluationModelEvaluationRoundLimit
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksEvaluationModelEvaluationRoundLimit-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksEvaluationModelEvaluationRoundLimit-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to OrgSagebionetworksEvaluationModelEvaluationRoundLimit and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksEvaluationModelEvaluationRoundLimit$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksEvaluationModelEvaluationRoundLimit-toString"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksEvaluationModelEvaluationRoundLimit-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksEvaluationModelEvaluationRoundLimit$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of OrgSagebionetworksEvaluationModelEvaluationRoundLimit
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksEvaluationModelEvaluationRoundLimit-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksEvaluationModelEvaluationRoundLimit-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksEvaluationModelEvaluationRoundLimit$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksEvaluationModelEvaluationRoundLimit-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksEvaluationModelEvaluationRoundLimit-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksEvaluationModelEvaluationRoundLimit$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksEvaluationModelEvaluationRoundLimit-print"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksEvaluationModelEvaluationRoundLimit-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksEvaluationModelEvaluationRoundLimit$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksEvaluationModelEvaluationRoundLimit-clone"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksEvaluationModelEvaluationRoundLimit-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksEvaluationModelEvaluationRoundLimit$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
