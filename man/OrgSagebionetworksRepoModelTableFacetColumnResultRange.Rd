% Generated by roxygen2: do not edit by hand
% Please edit documentation in
%   R/org_sagebionetworks_repo_model_table_facet_column_result_range.R
\docType{class}
\name{OrgSagebionetworksRepoModelTableFacetColumnResultRange}
\alias{OrgSagebionetworksRepoModelTableFacetColumnResultRange}
\title{OrgSagebionetworksRepoModelTableFacetColumnResultRange}
\format{
An \code{R6Class} generator object
}
\description{
Includes the minimum and maximum values of a range facet column and selected ranges applied to the filter.

OrgSagebionetworksRepoModelTableFacetColumnResultRange Class
}
\details{
Create a new OrgSagebionetworksRepoModelTableFacetColumnResultRange
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{concreteType}}{character}

\item{\code{columnName}}{character [optional]}

\item{\code{facetType}}{character [optional]}

\item{\code{jsonPath}}{character [optional]}

\item{\code{columnMin}}{character [optional]}

\item{\code{columnMax}}{character [optional]}

\item{\code{selectedMin}}{character [optional]}

\item{\code{selectedMax}}{character [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-OrgSagebionetworksRepoModelTableFacetColumnResultRange-new}{\code{OrgSagebionetworksRepoModelTableFacetColumnResultRange$new()}}
\item \href{#method-OrgSagebionetworksRepoModelTableFacetColumnResultRange-toJSON}{\code{OrgSagebionetworksRepoModelTableFacetColumnResultRange$toJSON()}}
\item \href{#method-OrgSagebionetworksRepoModelTableFacetColumnResultRange-fromJSON}{\code{OrgSagebionetworksRepoModelTableFacetColumnResultRange$fromJSON()}}
\item \href{#method-OrgSagebionetworksRepoModelTableFacetColumnResultRange-toJSONString}{\code{OrgSagebionetworksRepoModelTableFacetColumnResultRange$toJSONString()}}
\item \href{#method-OrgSagebionetworksRepoModelTableFacetColumnResultRange-fromJSONString}{\code{OrgSagebionetworksRepoModelTableFacetColumnResultRange$fromJSONString()}}
\item \href{#method-OrgSagebionetworksRepoModelTableFacetColumnResultRange-validateJSON}{\code{OrgSagebionetworksRepoModelTableFacetColumnResultRange$validateJSON()}}
\item \href{#method-OrgSagebionetworksRepoModelTableFacetColumnResultRange-toString}{\code{OrgSagebionetworksRepoModelTableFacetColumnResultRange$toString()}}
\item \href{#method-OrgSagebionetworksRepoModelTableFacetColumnResultRange-isValid}{\code{OrgSagebionetworksRepoModelTableFacetColumnResultRange$isValid()}}
\item \href{#method-OrgSagebionetworksRepoModelTableFacetColumnResultRange-getInvalidFields}{\code{OrgSagebionetworksRepoModelTableFacetColumnResultRange$getInvalidFields()}}
\item \href{#method-OrgSagebionetworksRepoModelTableFacetColumnResultRange-print}{\code{OrgSagebionetworksRepoModelTableFacetColumnResultRange$print()}}
\item \href{#method-OrgSagebionetworksRepoModelTableFacetColumnResultRange-clone}{\code{OrgSagebionetworksRepoModelTableFacetColumnResultRange$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableFacetColumnResultRange-new"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableFacetColumnResultRange-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new OrgSagebionetworksRepoModelTableFacetColumnResultRange class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableFacetColumnResultRange$new(
  concreteType,
  columnName = NULL,
  facetType = NULL,
  jsonPath = NULL,
  columnMin = NULL,
  columnMax = NULL,
  selectedMin = NULL,
  selectedMax = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{concreteType}}{concreteType}

\item{\code{columnName}}{columnName}

\item{\code{facetType}}{facetType}

\item{\code{jsonPath}}{jsonPath}

\item{\code{columnMin}}{columnMin}

\item{\code{columnMax}}{columnMax}

\item{\code{selectedMin}}{selectedMin}

\item{\code{selectedMax}}{selectedMax}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableFacetColumnResultRange-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableFacetColumnResultRange-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableFacetColumnResultRange$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
OrgSagebionetworksRepoModelTableFacetColumnResultRange in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableFacetColumnResultRange-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableFacetColumnResultRange-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of OrgSagebionetworksRepoModelTableFacetColumnResultRange
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableFacetColumnResultRange$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of OrgSagebionetworksRepoModelTableFacetColumnResultRange
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableFacetColumnResultRange-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableFacetColumnResultRange-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableFacetColumnResultRange$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
OrgSagebionetworksRepoModelTableFacetColumnResultRange in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableFacetColumnResultRange-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableFacetColumnResultRange-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of OrgSagebionetworksRepoModelTableFacetColumnResultRange
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableFacetColumnResultRange$fromJSONString(
  input_json
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of OrgSagebionetworksRepoModelTableFacetColumnResultRange
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableFacetColumnResultRange-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableFacetColumnResultRange-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to OrgSagebionetworksRepoModelTableFacetColumnResultRange and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableFacetColumnResultRange$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableFacetColumnResultRange-toString"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableFacetColumnResultRange-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableFacetColumnResultRange$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of OrgSagebionetworksRepoModelTableFacetColumnResultRange
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableFacetColumnResultRange-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableFacetColumnResultRange-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableFacetColumnResultRange$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableFacetColumnResultRange-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableFacetColumnResultRange-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableFacetColumnResultRange$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableFacetColumnResultRange-print"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableFacetColumnResultRange-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableFacetColumnResultRange$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableFacetColumnResultRange-clone"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableFacetColumnResultRange-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableFacetColumnResultRange$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
