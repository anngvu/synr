% Generated by roxygen2: do not edit by hand
% Please edit documentation in
%   R/org_sagebionetworks_repo_model_audit_node_record.R
\docType{class}
\name{OrgSagebionetworksRepoModelAuditNodeRecord}
\alias{OrgSagebionetworksRepoModelAuditNodeRecord}
\title{OrgSagebionetworksRepoModelAuditNodeRecord}
\format{
An \code{R6Class} generator object
}
\description{
Data record from a node object.

OrgSagebionetworksRepoModelAuditNodeRecord Class
}
\details{
Create a new OrgSagebionetworksRepoModelAuditNodeRecord
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{isPublic}}{character [optional]}

\item{\code{isRestricted}}{character [optional]}

\item{\code{isControlled}}{character [optional]}

\item{\code{benefactorId}}{character [optional]}

\item{\code{projectId}}{character [optional]}

\item{\code{effectiveArs}}{list(integer) [optional]}

\item{\code{annotations}}{\link{OrgSagebionetworksRepoModelAnnotationV2Annotations} [optional]}

\item{\code{derivedAnnotations}}{\link{OrgSagebionetworksRepoModelAnnotationV2Annotations} [optional]}

\item{\code{id}}{character [optional]}

\item{\code{name}}{character [optional]}

\item{\code{description}}{character [optional]}

\item{\code{parentId}}{character [optional]}

\item{\code{createdByPrincipalId}}{integer [optional]}

\item{\code{createdOn}}{character [optional]}

\item{\code{modifiedByPrincipalId}}{integer [optional]}

\item{\code{modifiedOn}}{character [optional]}

\item{\code{nodeType}}{character [optional]}

\item{\code{eTag}}{character [optional]}

\item{\code{versionNumber}}{integer [optional]}

\item{\code{versionComment}}{character [optional]}

\item{\code{versionLabel}}{character [optional]}

\item{\code{isLatestVersion}}{character [optional]}

\item{\code{activityId}}{character [optional]}

\item{\code{fileHandleId}}{character [optional]}

\item{\code{columnModelIds}}{list(character) [optional]}

\item{\code{scopeIds}}{For FileVeiws, the list of IDs the define the scope of the view. list(character) [optional]}

\item{\code{items}}{For Datasets and Dataset Collections, the list of entity references the define the view. list(\link{OrgSagebionetworksRepoModelEntityRef}) [optional]}

\item{\code{reference}}{\link{OrgSagebionetworksRepoModelReference} [optional]}

\item{\code{alias}}{character [optional]}

\item{\code{isSearchEnabled}}{character [optional]}

\item{\code{definingSQL}}{character [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-OrgSagebionetworksRepoModelAuditNodeRecord-new}{\code{OrgSagebionetworksRepoModelAuditNodeRecord$new()}}
\item \href{#method-OrgSagebionetworksRepoModelAuditNodeRecord-toJSON}{\code{OrgSagebionetworksRepoModelAuditNodeRecord$toJSON()}}
\item \href{#method-OrgSagebionetworksRepoModelAuditNodeRecord-fromJSON}{\code{OrgSagebionetworksRepoModelAuditNodeRecord$fromJSON()}}
\item \href{#method-OrgSagebionetworksRepoModelAuditNodeRecord-toJSONString}{\code{OrgSagebionetworksRepoModelAuditNodeRecord$toJSONString()}}
\item \href{#method-OrgSagebionetworksRepoModelAuditNodeRecord-fromJSONString}{\code{OrgSagebionetworksRepoModelAuditNodeRecord$fromJSONString()}}
\item \href{#method-OrgSagebionetworksRepoModelAuditNodeRecord-validateJSON}{\code{OrgSagebionetworksRepoModelAuditNodeRecord$validateJSON()}}
\item \href{#method-OrgSagebionetworksRepoModelAuditNodeRecord-toString}{\code{OrgSagebionetworksRepoModelAuditNodeRecord$toString()}}
\item \href{#method-OrgSagebionetworksRepoModelAuditNodeRecord-isValid}{\code{OrgSagebionetworksRepoModelAuditNodeRecord$isValid()}}
\item \href{#method-OrgSagebionetworksRepoModelAuditNodeRecord-getInvalidFields}{\code{OrgSagebionetworksRepoModelAuditNodeRecord$getInvalidFields()}}
\item \href{#method-OrgSagebionetworksRepoModelAuditNodeRecord-print}{\code{OrgSagebionetworksRepoModelAuditNodeRecord$print()}}
\item \href{#method-OrgSagebionetworksRepoModelAuditNodeRecord-clone}{\code{OrgSagebionetworksRepoModelAuditNodeRecord$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelAuditNodeRecord-new"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelAuditNodeRecord-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new OrgSagebionetworksRepoModelAuditNodeRecord class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelAuditNodeRecord$new(
  isPublic = NULL,
  isRestricted = NULL,
  isControlled = NULL,
  benefactorId = NULL,
  projectId = NULL,
  effectiveArs = NULL,
  annotations = NULL,
  derivedAnnotations = NULL,
  id = NULL,
  name = NULL,
  description = NULL,
  parentId = NULL,
  createdByPrincipalId = NULL,
  createdOn = NULL,
  modifiedByPrincipalId = NULL,
  modifiedOn = NULL,
  nodeType = NULL,
  eTag = NULL,
  versionNumber = NULL,
  versionComment = NULL,
  versionLabel = NULL,
  isLatestVersion = NULL,
  activityId = NULL,
  fileHandleId = NULL,
  columnModelIds = NULL,
  scopeIds = NULL,
  items = NULL,
  reference = NULL,
  alias = NULL,
  isSearchEnabled = NULL,
  definingSQL = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{isPublic}}{isPublic}

\item{\code{isRestricted}}{isRestricted}

\item{\code{isControlled}}{isControlled}

\item{\code{benefactorId}}{benefactorId}

\item{\code{projectId}}{projectId}

\item{\code{effectiveArs}}{effectiveArs}

\item{\code{annotations}}{annotations}

\item{\code{derivedAnnotations}}{derivedAnnotations}

\item{\code{id}}{id}

\item{\code{name}}{name}

\item{\code{description}}{description}

\item{\code{parentId}}{parentId}

\item{\code{createdByPrincipalId}}{createdByPrincipalId}

\item{\code{createdOn}}{createdOn}

\item{\code{modifiedByPrincipalId}}{modifiedByPrincipalId}

\item{\code{modifiedOn}}{modifiedOn}

\item{\code{nodeType}}{nodeType}

\item{\code{eTag}}{eTag}

\item{\code{versionNumber}}{versionNumber}

\item{\code{versionComment}}{versionComment}

\item{\code{versionLabel}}{versionLabel}

\item{\code{isLatestVersion}}{isLatestVersion}

\item{\code{activityId}}{activityId}

\item{\code{fileHandleId}}{fileHandleId}

\item{\code{columnModelIds}}{columnModelIds}

\item{\code{scopeIds}}{For FileVeiws, the list of IDs the define the scope of the view.}

\item{\code{items}}{For Datasets and Dataset Collections, the list of entity references the define the view.}

\item{\code{reference}}{reference}

\item{\code{alias}}{alias}

\item{\code{isSearchEnabled}}{isSearchEnabled}

\item{\code{definingSQL}}{definingSQL}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelAuditNodeRecord-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelAuditNodeRecord-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelAuditNodeRecord$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
OrgSagebionetworksRepoModelAuditNodeRecord in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelAuditNodeRecord-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelAuditNodeRecord-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of OrgSagebionetworksRepoModelAuditNodeRecord
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelAuditNodeRecord$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of OrgSagebionetworksRepoModelAuditNodeRecord
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelAuditNodeRecord-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelAuditNodeRecord-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelAuditNodeRecord$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
OrgSagebionetworksRepoModelAuditNodeRecord in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelAuditNodeRecord-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelAuditNodeRecord-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of OrgSagebionetworksRepoModelAuditNodeRecord
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelAuditNodeRecord$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of OrgSagebionetworksRepoModelAuditNodeRecord
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelAuditNodeRecord-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelAuditNodeRecord-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to OrgSagebionetworksRepoModelAuditNodeRecord and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelAuditNodeRecord$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelAuditNodeRecord-toString"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelAuditNodeRecord-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelAuditNodeRecord$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of OrgSagebionetworksRepoModelAuditNodeRecord
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelAuditNodeRecord-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelAuditNodeRecord-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelAuditNodeRecord$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelAuditNodeRecord-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelAuditNodeRecord-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelAuditNodeRecord$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelAuditNodeRecord-print"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelAuditNodeRecord-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelAuditNodeRecord$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelAuditNodeRecord-clone"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelAuditNodeRecord-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelAuditNodeRecord$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
