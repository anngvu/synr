% Generated by roxygen2: do not edit by hand
% Please edit documentation in
%   R/org_sagebionetworks_repo_model_file_external_file_handle.R
\docType{class}
\name{OrgSagebionetworksRepoModelFileExternalFileHandle}
\alias{OrgSagebionetworksRepoModelFileExternalFileHandle}
\title{OrgSagebionetworksRepoModelFileExternalFileHandle}
\format{
An \code{R6Class} generator object
}
\description{
An ExternalFileHandle represents a file that is not stored in Synapse.  Instead, ExternalFileHandles reside somewhere accessible via a URL. Synapse will attempt to generate a preview for any external URL that can be publicly read.

OrgSagebionetworksRepoModelFileExternalFileHandle Class
}
\details{
Create a new OrgSagebionetworksRepoModelFileExternalFileHandle
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{id}}{character [optional]}

\item{\code{etag}}{character [optional]}

\item{\code{createdBy}}{character [optional]}

\item{\code{createdOn}}{character [optional]}

\item{\code{modifiedOn}}{character [optional]}

\item{\code{concreteType}}{character}

\item{\code{contentType}}{character [optional]}

\item{\code{contentMd5}}{character [optional]}

\item{\code{fileName}}{character [optional]}

\item{\code{storageLocationId}}{integer [optional]}

\item{\code{contentSize}}{integer [optional]}

\item{\code{status}}{character [optional]}

\item{\code{externalURL}}{character [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-OrgSagebionetworksRepoModelFileExternalFileHandle-new}{\code{OrgSagebionetworksRepoModelFileExternalFileHandle$new()}}
\item \href{#method-OrgSagebionetworksRepoModelFileExternalFileHandle-toJSON}{\code{OrgSagebionetworksRepoModelFileExternalFileHandle$toJSON()}}
\item \href{#method-OrgSagebionetworksRepoModelFileExternalFileHandle-fromJSON}{\code{OrgSagebionetworksRepoModelFileExternalFileHandle$fromJSON()}}
\item \href{#method-OrgSagebionetworksRepoModelFileExternalFileHandle-toJSONString}{\code{OrgSagebionetworksRepoModelFileExternalFileHandle$toJSONString()}}
\item \href{#method-OrgSagebionetworksRepoModelFileExternalFileHandle-fromJSONString}{\code{OrgSagebionetworksRepoModelFileExternalFileHandle$fromJSONString()}}
\item \href{#method-OrgSagebionetworksRepoModelFileExternalFileHandle-validateJSON}{\code{OrgSagebionetworksRepoModelFileExternalFileHandle$validateJSON()}}
\item \href{#method-OrgSagebionetworksRepoModelFileExternalFileHandle-toString}{\code{OrgSagebionetworksRepoModelFileExternalFileHandle$toString()}}
\item \href{#method-OrgSagebionetworksRepoModelFileExternalFileHandle-isValid}{\code{OrgSagebionetworksRepoModelFileExternalFileHandle$isValid()}}
\item \href{#method-OrgSagebionetworksRepoModelFileExternalFileHandle-getInvalidFields}{\code{OrgSagebionetworksRepoModelFileExternalFileHandle$getInvalidFields()}}
\item \href{#method-OrgSagebionetworksRepoModelFileExternalFileHandle-print}{\code{OrgSagebionetworksRepoModelFileExternalFileHandle$print()}}
\item \href{#method-OrgSagebionetworksRepoModelFileExternalFileHandle-clone}{\code{OrgSagebionetworksRepoModelFileExternalFileHandle$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelFileExternalFileHandle-new"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelFileExternalFileHandle-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new OrgSagebionetworksRepoModelFileExternalFileHandle class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelFileExternalFileHandle$new(
  concreteType,
  id = NULL,
  etag = NULL,
  createdBy = NULL,
  createdOn = NULL,
  modifiedOn = NULL,
  contentType = NULL,
  contentMd5 = NULL,
  fileName = NULL,
  storageLocationId = NULL,
  contentSize = NULL,
  status = NULL,
  externalURL = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{concreteType}}{concreteType}

\item{\code{id}}{id}

\item{\code{etag}}{etag}

\item{\code{createdBy}}{createdBy}

\item{\code{createdOn}}{createdOn}

\item{\code{modifiedOn}}{modifiedOn}

\item{\code{contentType}}{contentType}

\item{\code{contentMd5}}{contentMd5}

\item{\code{fileName}}{fileName}

\item{\code{storageLocationId}}{storageLocationId}

\item{\code{contentSize}}{contentSize}

\item{\code{status}}{status}

\item{\code{externalURL}}{externalURL}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelFileExternalFileHandle-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelFileExternalFileHandle-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelFileExternalFileHandle$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
OrgSagebionetworksRepoModelFileExternalFileHandle in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelFileExternalFileHandle-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelFileExternalFileHandle-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of OrgSagebionetworksRepoModelFileExternalFileHandle
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelFileExternalFileHandle$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of OrgSagebionetworksRepoModelFileExternalFileHandle
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelFileExternalFileHandle-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelFileExternalFileHandle-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelFileExternalFileHandle$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
OrgSagebionetworksRepoModelFileExternalFileHandle in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelFileExternalFileHandle-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelFileExternalFileHandle-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of OrgSagebionetworksRepoModelFileExternalFileHandle
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelFileExternalFileHandle$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of OrgSagebionetworksRepoModelFileExternalFileHandle
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelFileExternalFileHandle-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelFileExternalFileHandle-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to OrgSagebionetworksRepoModelFileExternalFileHandle and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelFileExternalFileHandle$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelFileExternalFileHandle-toString"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelFileExternalFileHandle-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelFileExternalFileHandle$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of OrgSagebionetworksRepoModelFileExternalFileHandle
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelFileExternalFileHandle-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelFileExternalFileHandle-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelFileExternalFileHandle$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelFileExternalFileHandle-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelFileExternalFileHandle-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelFileExternalFileHandle$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelFileExternalFileHandle-print"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelFileExternalFileHandle-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelFileExternalFileHandle$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelFileExternalFileHandle-clone"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelFileExternalFileHandle-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelFileExternalFileHandle$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
