% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/wiki_page_services2_api.R
\docType{class}
\name{WikiPageServices2Api}
\alias{WikiPageServices2Api}
\title{WikiPageServices2 operations}
\format{
An \code{R6Class} generator object
}
\description{
WikiPageServices2Api
}
\details{
Synapse REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: v1
Generated by: https://openapi-generator.tech
}
\section{Methods}{

\describe{
\strong{ deleteRepoV1AccessRequirementOwnerIdWiki2WikiId } \emph{  }

\itemize{
\item \emph{ @param } owner_id character
\item \emph{ @param } wiki_id character


\item status code : 200 | Void


\item response headers :

\tabular{ll}{
}
}

\strong{ deleteRepoV1EntityOwnerIdWiki2WikiId } \emph{  }

\itemize{
\item \emph{ @param } owner_id character
\item \emph{ @param } wiki_id character


\item status code : 200 | Void


\item response headers :

\tabular{ll}{
}
}

\strong{ deleteRepoV1EvaluationOwnerIdWiki2WikiId } \emph{  }

\itemize{
\item \emph{ @param } owner_id character
\item \emph{ @param } wiki_id character


\item status code : 200 | Void


\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1AccessRequirementOwnerIdWiki2 } \emph{  }

\itemize{
\item \emph{ @param } owner_id character
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelV2WikiV2WikiPage} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelV2WikiV2WikiPage
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1AccessRequirementOwnerIdWiki2WikiId } \emph{  }

\itemize{
\item \emph{ @param } owner_id character
\item \emph{ @param } wiki_id character
\item \emph{ @param } wiki_version numeric
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelV2WikiV2WikiPage} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelV2WikiV2WikiPage
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1AccessRequirementOwnerIdWiki2WikiIdAttachment } \emph{  }

\itemize{
\item \emph{ @param } owner_id character
\item \emph{ @param } wiki_id character
\item \emph{ @param } file_name character
\item \emph{ @param } redirect character
\item \emph{ @param } wiki_version numeric
\item \emph{ @returnType } \link{AnyType} \cr


\item status code : 200 | Status 200 will be returned if the 'redirect' boolean param is false

\item return type : AnyType
\item response headers :

\tabular{ll}{
}
\item status code : 307 | Status 307 will be returned if the 'redirect' boolean param is true or null


\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1AccessRequirementOwnerIdWiki2WikiIdAttachmenthandles } \emph{  }

\itemize{
\item \emph{ @param } owner_id character
\item \emph{ @param } wiki_id character
\item \emph{ @param } wiki_version numeric
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelFileFileHandleResults} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelFileFileHandleResults
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1AccessRequirementOwnerIdWiki2WikiIdAttachmentpreview } \emph{  }

\itemize{
\item \emph{ @param } owner_id character
\item \emph{ @param } wiki_id character
\item \emph{ @param } file_name character
\item \emph{ @param } redirect character
\item \emph{ @param } wiki_version numeric
\item \emph{ @returnType } \link{AnyType} \cr


\item status code : 200 | Status 200 will be returned if the 'redirect' boolean param is false

\item return type : AnyType
\item response headers :

\tabular{ll}{
}
\item status code : 307 | Status 307 will be returned if the 'redirect' boolean param is true or null


\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1AccessRequirementOwnerIdWiki2WikiIdMarkdown } \emph{  }

\itemize{
\item \emph{ @param } owner_id character
\item \emph{ @param } wiki_id character
\item \emph{ @param } redirect character
\item \emph{ @param } wiki_version numeric
\item \emph{ @returnType } \link{AnyType} \cr


\item status code : 200 | Status 200 will be returned if the 'redirect' boolean param is false

\item return type : AnyType
\item response headers :

\tabular{ll}{
}
\item status code : 307 | Status 307 will be returned if the 'redirect' boolean param is true or null


\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1AccessRequirementOwnerIdWiki2WikiIdWikihistory } \emph{  }

\itemize{
\item \emph{ @param } offset numeric
\item \emph{ @param } limit numeric
\item \emph{ @param } wiki_id character
\item \emph{ @param } owner_id character
\item \emph{ @returnType } \link{PaginatedResultsOfV2WikiHistorySnapshot} \cr


\item status code : 200 | Auto-generated description

\item return type : PaginatedResultsOfV2WikiHistorySnapshot
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1AccessRequirementOwnerIdWikiheadertree2 } \emph{  }

\itemize{
\item \emph{ @param } owner_id character
\item \emph{ @param } offset numeric
\item \emph{ @param } limit numeric
\item \emph{ @returnType } \link{PaginatedResultsOfV2WikiHeader} \cr


\item status code : 200 | Auto-generated description

\item return type : PaginatedResultsOfV2WikiHeader
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1EntityOwnerIdWiki2 } \emph{  }

\itemize{
\item \emph{ @param } owner_id character
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelV2WikiV2WikiPage} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelV2WikiV2WikiPage
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1EntityOwnerIdWiki2WikiId } \emph{  }

\itemize{
\item \emph{ @param } owner_id character
\item \emph{ @param } wiki_id character
\item \emph{ @param } wiki_version numeric
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelV2WikiV2WikiPage} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelV2WikiV2WikiPage
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1EntityOwnerIdWiki2WikiIdAttachment } \emph{  }

\itemize{
\item \emph{ @param } owner_id character
\item \emph{ @param } wiki_id character
\item \emph{ @param } file_name character
\item \emph{ @param } redirect character
\item \emph{ @param } wiki_version numeric
\item \emph{ @returnType } \link{AnyType} \cr


\item status code : 200 | Status 200 will be returned if the 'redirect' boolean param is false

\item return type : AnyType
\item response headers :

\tabular{ll}{
}
\item status code : 307 | Status 307 will be returned if the 'redirect' boolean param is true or null


\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1EntityOwnerIdWiki2WikiIdAttachmenthandles } \emph{  }

\itemize{
\item \emph{ @param } owner_id character
\item \emph{ @param } wiki_id character
\item \emph{ @param } wiki_version numeric
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelFileFileHandleResults} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelFileFileHandleResults
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1EntityOwnerIdWiki2WikiIdAttachmentpreview } \emph{  }

\itemize{
\item \emph{ @param } owner_id character
\item \emph{ @param } wiki_id character
\item \emph{ @param } file_name character
\item \emph{ @param } redirect character
\item \emph{ @param } wiki_version numeric
\item \emph{ @returnType } \link{AnyType} \cr


\item status code : 200 | Status 200 will be returned if the 'redirect' boolean param is false

\item return type : AnyType
\item response headers :

\tabular{ll}{
}
\item status code : 307 | Status 307 will be returned if the 'redirect' boolean param is true or null


\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1EntityOwnerIdWiki2WikiIdMarkdown } \emph{  }

\itemize{
\item \emph{ @param } owner_id character
\item \emph{ @param } wiki_id character
\item \emph{ @param } redirect character
\item \emph{ @param } wiki_version numeric
\item \emph{ @returnType } \link{AnyType} \cr


\item status code : 200 | Status 200 will be returned if the 'redirect' boolean param is false

\item return type : AnyType
\item response headers :

\tabular{ll}{
}
\item status code : 307 | Status 307 will be returned if the 'redirect' boolean param is true or null


\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1EntityOwnerIdWiki2WikiIdWikihistory } \emph{  }

\itemize{
\item \emph{ @param } offset numeric
\item \emph{ @param } limit numeric
\item \emph{ @param } wiki_id character
\item \emph{ @param } owner_id character
\item \emph{ @returnType } \link{PaginatedResultsOfV2WikiHistorySnapshot} \cr


\item status code : 200 | Auto-generated description

\item return type : PaginatedResultsOfV2WikiHistorySnapshot
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1EntityOwnerIdWiki2orderhint } \emph{  }

\itemize{
\item \emph{ @param } owner_id character
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelV2WikiV2WikiOrderHint} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelV2WikiV2WikiOrderHint
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1EntityOwnerIdWikiheadertree2 } \emph{  }

\itemize{
\item \emph{ @param } owner_id character
\item \emph{ @param } offset numeric
\item \emph{ @param } limit numeric
\item \emph{ @returnType } \link{PaginatedResultsOfV2WikiHeader} \cr


\item status code : 200 | Auto-generated description

\item return type : PaginatedResultsOfV2WikiHeader
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1EvaluationOwnerIdWiki2 } \emph{  }

\itemize{
\item \emph{ @param } owner_id character
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelV2WikiV2WikiPage} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelV2WikiV2WikiPage
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1EvaluationOwnerIdWiki2WikiId } \emph{  }

\itemize{
\item \emph{ @param } owner_id character
\item \emph{ @param } wiki_id character
\item \emph{ @param } wiki_version numeric
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelV2WikiV2WikiPage} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelV2WikiV2WikiPage
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1EvaluationOwnerIdWiki2WikiIdAttachment } \emph{  }

\itemize{
\item \emph{ @param } owner_id character
\item \emph{ @param } wiki_id character
\item \emph{ @param } file_name character
\item \emph{ @param } redirect character
\item \emph{ @param } wiki_version numeric
\item \emph{ @returnType } \link{AnyType} \cr


\item status code : 200 | Status 200 will be returned if the 'redirect' boolean param is false

\item return type : AnyType
\item response headers :

\tabular{ll}{
}
\item status code : 307 | Status 307 will be returned if the 'redirect' boolean param is true or null


\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1EvaluationOwnerIdWiki2WikiIdAttachmenthandles } \emph{  }

\itemize{
\item \emph{ @param } owner_id character
\item \emph{ @param } wiki_id character
\item \emph{ @param } wiki_version numeric
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelFileFileHandleResults} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelFileFileHandleResults
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1EvaluationOwnerIdWiki2WikiIdAttachmentpreview } \emph{  }

\itemize{
\item \emph{ @param } owner_id character
\item \emph{ @param } wiki_id character
\item \emph{ @param } file_name character
\item \emph{ @param } redirect character
\item \emph{ @param } wiki_version numeric
\item \emph{ @returnType } \link{AnyType} \cr


\item status code : 200 | Status 200 will be returned if the 'redirect' boolean param is false

\item return type : AnyType
\item response headers :

\tabular{ll}{
}
\item status code : 307 | Status 307 will be returned if the 'redirect' boolean param is true or null


\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1EvaluationOwnerIdWiki2WikiIdMarkdown } \emph{  }

\itemize{
\item \emph{ @param } owner_id character
\item \emph{ @param } wiki_id character
\item \emph{ @param } redirect character
\item \emph{ @param } wiki_version numeric
\item \emph{ @returnType } \link{AnyType} \cr


\item status code : 200 | Status 200 will be returned if the 'redirect' boolean param is false

\item return type : AnyType
\item response headers :

\tabular{ll}{
}
\item status code : 307 | Status 307 will be returned if the 'redirect' boolean param is true or null


\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1EvaluationOwnerIdWiki2WikiIdWikihistory } \emph{  }

\itemize{
\item \emph{ @param } offset numeric
\item \emph{ @param } limit numeric
\item \emph{ @param } wiki_id character
\item \emph{ @param } owner_id character
\item \emph{ @returnType } \link{PaginatedResultsOfV2WikiHistorySnapshot} \cr


\item status code : 200 | Auto-generated description

\item return type : PaginatedResultsOfV2WikiHistorySnapshot
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1EvaluationOwnerIdWikiheadertree2 } \emph{  }

\itemize{
\item \emph{ @param } owner_id character
\item \emph{ @param } offset numeric
\item \emph{ @param } limit numeric
\item \emph{ @returnType } \link{PaginatedResultsOfV2WikiHeader} \cr


\item status code : 200 | Auto-generated description

\item return type : PaginatedResultsOfV2WikiHeader
\item response headers :

\tabular{ll}{
}
}

\strong{ postRepoV1AccessRequirementOwnerIdWiki2 } \emph{  }

\itemize{
\item \emph{ @param } owner_id character
\item \emph{ @param } org_sagebionetworks_repo_model_v2_wiki_v2_wiki_page \link{OrgSagebionetworksRepoModelV2WikiV2WikiPage}
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelV2WikiV2WikiPage} \cr


\item status code : 201 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelV2WikiV2WikiPage
\item response headers :

\tabular{ll}{
}
}

\strong{ postRepoV1EntityOwnerIdWiki2 } \emph{  }

\itemize{
\item \emph{ @param } owner_id character
\item \emph{ @param } org_sagebionetworks_repo_model_v2_wiki_v2_wiki_page \link{OrgSagebionetworksRepoModelV2WikiV2WikiPage}
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelV2WikiV2WikiPage} \cr


\item status code : 201 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelV2WikiV2WikiPage
\item response headers :

\tabular{ll}{
}
}

\strong{ postRepoV1EvaluationOwnerIdWiki2 } \emph{  }

\itemize{
\item \emph{ @param } owner_id character
\item \emph{ @param } org_sagebionetworks_repo_model_v2_wiki_v2_wiki_page \link{OrgSagebionetworksRepoModelV2WikiV2WikiPage}
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelV2WikiV2WikiPage} \cr


\item status code : 201 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelV2WikiV2WikiPage
\item response headers :

\tabular{ll}{
}
}

\strong{ putRepoV1AccessRequirementOwnerIdWiki2WikiId } \emph{  }

\itemize{
\item \emph{ @param } owner_id character
\item \emph{ @param } wiki_id character
\item \emph{ @param } org_sagebionetworks_repo_model_v2_wiki_v2_wiki_page \link{OrgSagebionetworksRepoModelV2WikiV2WikiPage}
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelV2WikiV2WikiPage} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelV2WikiV2WikiPage
\item response headers :

\tabular{ll}{
}
}

\strong{ putRepoV1AccessRequirementOwnerIdWiki2WikiIdWikiVersion } \emph{  }

\itemize{
\item \emph{ @param } wiki_version numeric
\item \emph{ @param } owner_id character
\item \emph{ @param } wiki_id character
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelV2WikiV2WikiPage} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelV2WikiV2WikiPage
\item response headers :

\tabular{ll}{
}
}

\strong{ putRepoV1EntityOwnerIdWiki2WikiId } \emph{  }

\itemize{
\item \emph{ @param } owner_id character
\item \emph{ @param } wiki_id character
\item \emph{ @param } org_sagebionetworks_repo_model_v2_wiki_v2_wiki_page \link{OrgSagebionetworksRepoModelV2WikiV2WikiPage}
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelV2WikiV2WikiPage} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelV2WikiV2WikiPage
\item response headers :

\tabular{ll}{
}
}

\strong{ putRepoV1EntityOwnerIdWiki2WikiIdWikiVersion } \emph{  }

\itemize{
\item \emph{ @param } wiki_version numeric
\item \emph{ @param } owner_id character
\item \emph{ @param } wiki_id character
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelV2WikiV2WikiPage} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelV2WikiV2WikiPage
\item response headers :

\tabular{ll}{
}
}

\strong{ putRepoV1EntityOwnerIdWiki2orderhint } \emph{  }

\itemize{
\item \emph{ @param } owner_id character
\item \emph{ @param } org_sagebionetworks_repo_model_v2_wiki_v2_wiki_order_hint \link{OrgSagebionetworksRepoModelV2WikiV2WikiOrderHint}
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelV2WikiV2WikiOrderHint} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelV2WikiV2WikiOrderHint
\item response headers :

\tabular{ll}{
}
}

\strong{ putRepoV1EvaluationOwnerIdWiki2WikiId } \emph{  }

\itemize{
\item \emph{ @param } owner_id character
\item \emph{ @param } wiki_id character
\item \emph{ @param } org_sagebionetworks_repo_model_v2_wiki_v2_wiki_page \link{OrgSagebionetworksRepoModelV2WikiV2WikiPage}
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelV2WikiV2WikiPage} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelV2WikiV2WikiPage
\item response headers :

\tabular{ll}{
}
}

\strong{ putRepoV1EvaluationOwnerIdWiki2WikiIdWikiVersion } \emph{  }

\itemize{
\item \emph{ @param } wiki_version numeric
\item \emph{ @param } owner_id character
\item \emph{ @param } wiki_id character
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelV2WikiV2WikiPage} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelV2WikiV2WikiPage
\item response headers :

\tabular{ll}{
}
}

}
}

\examples{
\dontrun{
####################  deleteRepoV1AccessRequirementOwnerIdWiki2WikiId  ####################

library(synr)
var_owner_id <- "owner_id_example" # character | The ID of the owning Access Requirement.
var_wiki_id <- "wiki_id_example" # character | The ID of the WikiPage to delete.

api_instance <- WikiPageServices2Api$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

api_instance$deleteRepoV1AccessRequirementOwnerIdWiki2WikiId(var_owner_id, var_wiki_id)


####################  deleteRepoV1EntityOwnerIdWiki2WikiId  ####################

library(synr)
var_owner_id <- "owner_id_example" # character | The ID of the owning Entity.
var_wiki_id <- "wiki_id_example" # character | The ID of the WikiPage to delete.

api_instance <- WikiPageServices2Api$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

api_instance$deleteRepoV1EntityOwnerIdWiki2WikiId(var_owner_id, var_wiki_id)


####################  deleteRepoV1EvaluationOwnerIdWiki2WikiId  ####################

library(synr)
var_owner_id <- "owner_id_example" # character | The ID of the owning Evaluations.
var_wiki_id <- "wiki_id_example" # character | The ID of the WikiPage to delete.

api_instance <- WikiPageServices2Api$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

api_instance$deleteRepoV1EvaluationOwnerIdWiki2WikiId(var_owner_id, var_wiki_id)


####################  getRepoV1AccessRequirementOwnerIdWiki2  ####################

library(synr)
var_owner_id <- "owner_id_example" # character | The ID of the owning AccessRequirement.

api_instance <- WikiPageServices2Api$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1AccessRequirementOwnerIdWiki2(var_owner_iddata_file = "result.txt")
result <- api_instance$getRepoV1AccessRequirementOwnerIdWiki2(var_owner_id)
dput(result)


####################  getRepoV1AccessRequirementOwnerIdWiki2WikiId  ####################

library(synr)
var_owner_id <- "owner_id_example" # character | The ID of the owning Access Requirement.
var_wiki_id <- "wiki_id_example" # character | The ID of the WikiPage to get.
var_wiki_version <- 3.4 # numeric |  (Optional)

api_instance <- WikiPageServices2Api$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1AccessRequirementOwnerIdWiki2WikiId(var_owner_id, var_wiki_id, wiki_version = var_wiki_versiondata_file = "result.txt")
result <- api_instance$getRepoV1AccessRequirementOwnerIdWiki2WikiId(var_owner_id, var_wiki_id, wiki_version = var_wiki_version)
dput(result)


####################  getRepoV1AccessRequirementOwnerIdWiki2WikiIdAttachment  ####################

library(synr)
var_owner_id <- "owner_id_example" # character | The ID of the owning Access Requirement
var_wiki_id <- "wiki_id_example" # character | The ID of the WikiPage
var_file_name <- "file_name_example" # character | The name of the file to get. The file names can be found in             the FileHandles from the ,<a href=\"${GET.entity.ownerId.wiki.wikiId.attachmenthandles}\">,GET             /accessRequirement/{ownerId}/wiki/{wikiId}/attachmenthandles,</a>, method.
var_redirect <- "redirect_example" # character | When set to false, the URL will be returned as text/plain             instead of redirecting. (Optional)
var_wiki_version <- 3.4 # numeric |  (Optional)

api_instance <- WikiPageServices2Api$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1AccessRequirementOwnerIdWiki2WikiIdAttachment(var_owner_id, var_wiki_id, var_file_name, redirect = var_redirect, wiki_version = var_wiki_versiondata_file = "result.txt")
result <- api_instance$getRepoV1AccessRequirementOwnerIdWiki2WikiIdAttachment(var_owner_id, var_wiki_id, var_file_name, redirect = var_redirect, wiki_version = var_wiki_version)
dput(result)


####################  getRepoV1AccessRequirementOwnerIdWiki2WikiIdAttachmenthandles  ####################

library(synr)
var_owner_id <- "owner_id_example" # character | The ID of the owning Access Requirement.
var_wiki_id <- "wiki_id_example" # character | The ID of the WikiPage.
var_wiki_version <- 3.4 # numeric |  (Optional)

api_instance <- WikiPageServices2Api$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1AccessRequirementOwnerIdWiki2WikiIdAttachmenthandles(var_owner_id, var_wiki_id, wiki_version = var_wiki_versiondata_file = "result.txt")
result <- api_instance$getRepoV1AccessRequirementOwnerIdWiki2WikiIdAttachmenthandles(var_owner_id, var_wiki_id, wiki_version = var_wiki_version)
dput(result)


####################  getRepoV1AccessRequirementOwnerIdWiki2WikiIdAttachmentpreview  ####################

library(synr)
var_owner_id <- "owner_id_example" # character | The ID of the owning Access Requirement
var_wiki_id <- "wiki_id_example" # character | The ID of the WikiPage
var_file_name <- "file_name_example" # character | The name of the file to get. The file names can be found in             the FileHandles from the ,<a href=\"${GET.entity.ownerId.wiki.wikiId.attachmenthandles}\">,GET             /accessRequirement/{ownerId}/wiki/{wikiId}/attachmenthandles,</a>, method.
var_redirect <- "redirect_example" # character | When set to false, the URL will be returned as text/plain             instead of redirecting. (Optional)
var_wiki_version <- 3.4 # numeric |  (Optional)

api_instance <- WikiPageServices2Api$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1AccessRequirementOwnerIdWiki2WikiIdAttachmentpreview(var_owner_id, var_wiki_id, var_file_name, redirect = var_redirect, wiki_version = var_wiki_versiondata_file = "result.txt")
result <- api_instance$getRepoV1AccessRequirementOwnerIdWiki2WikiIdAttachmentpreview(var_owner_id, var_wiki_id, var_file_name, redirect = var_redirect, wiki_version = var_wiki_version)
dput(result)


####################  getRepoV1AccessRequirementOwnerIdWiki2WikiIdMarkdown  ####################

library(synr)
var_owner_id <- "owner_id_example" # character | 
var_wiki_id <- "wiki_id_example" # character | 
var_redirect <- "redirect_example" # character |  (Optional)
var_wiki_version <- 3.4 # numeric |  (Optional)

api_instance <- WikiPageServices2Api$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1AccessRequirementOwnerIdWiki2WikiIdMarkdown(var_owner_id, var_wiki_id, redirect = var_redirect, wiki_version = var_wiki_versiondata_file = "result.txt")
result <- api_instance$getRepoV1AccessRequirementOwnerIdWiki2WikiIdMarkdown(var_owner_id, var_wiki_id, redirect = var_redirect, wiki_version = var_wiki_version)
dput(result)


####################  getRepoV1AccessRequirementOwnerIdWiki2WikiIdWikihistory  ####################

library(synr)
var_offset <- 3.4 # numeric | The index of the pagination offset. For a page size of 10, the             first page would be at offset = 0, and the second page would             be at offset = 10.
var_limit <- 3.4 # numeric | Limits the size of the page returned. For example, a page size             of 10 require limit = 10.
var_wiki_id <- "wiki_id_example" # character | The ID of the WikiPage.
var_owner_id <- "owner_id_example" # character | The ID of the owning Access Requirement.

api_instance <- WikiPageServices2Api$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1AccessRequirementOwnerIdWiki2WikiIdWikihistory(var_offset, var_limit, var_wiki_id, var_owner_iddata_file = "result.txt")
result <- api_instance$getRepoV1AccessRequirementOwnerIdWiki2WikiIdWikihistory(var_offset, var_limit, var_wiki_id, var_owner_id)
dput(result)


####################  getRepoV1AccessRequirementOwnerIdWikiheadertree2  ####################

library(synr)
var_owner_id <- "owner_id_example" # character | The ID of the owning Access Requirement.
var_offset <- 3.4 # numeric | The index of the pagination offset. For a page size of 10, the             first page would be at offset = 0, and the second page would             be at offset = 10. (Optional)
var_limit <- 3.4 # numeric | Limits the size of the page returned. For example, a page size             of 10 require limit = 10. (Optional)

api_instance <- WikiPageServices2Api$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1AccessRequirementOwnerIdWikiheadertree2(var_owner_id, offset = var_offset, limit = var_limitdata_file = "result.txt")
result <- api_instance$getRepoV1AccessRequirementOwnerIdWikiheadertree2(var_owner_id, offset = var_offset, limit = var_limit)
dput(result)


####################  getRepoV1EntityOwnerIdWiki2  ####################

library(synr)
var_owner_id <- "owner_id_example" # character | The ID of the owning Entity.

api_instance <- WikiPageServices2Api$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1EntityOwnerIdWiki2(var_owner_iddata_file = "result.txt")
result <- api_instance$getRepoV1EntityOwnerIdWiki2(var_owner_id)
dput(result)


####################  getRepoV1EntityOwnerIdWiki2WikiId  ####################

library(synr)
var_owner_id <- "owner_id_example" # character | The ID of the owning Entity.
var_wiki_id <- "wiki_id_example" # character | The ID of the WikiPage to get.
var_wiki_version <- 3.4 # numeric | When included returns a specific version of a wiki. (Optional)

api_instance <- WikiPageServices2Api$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1EntityOwnerIdWiki2WikiId(var_owner_id, var_wiki_id, wiki_version = var_wiki_versiondata_file = "result.txt")
result <- api_instance$getRepoV1EntityOwnerIdWiki2WikiId(var_owner_id, var_wiki_id, wiki_version = var_wiki_version)
dput(result)


####################  getRepoV1EntityOwnerIdWiki2WikiIdAttachment  ####################

library(synr)
var_owner_id <- "owner_id_example" # character | The ID of the owning Entity
var_wiki_id <- "wiki_id_example" # character | The ID of the WikiPage
var_file_name <- "file_name_example" # character | The name of the file to get. The file names can be found in             the FileHandles from the ,<a href=\"${GET.entity.ownerId.wiki.wikiId.attachmenthandles}\">,GET             /entity/{ownerId}/wiki/{wikiId}/attachmenthandles,</a>, method.
var_redirect <- "redirect_example" # character | When set to false, the URL will be returned as text/plain             instead of redirecting. (Optional)
var_wiki_version <- 3.4 # numeric |  (Optional)

api_instance <- WikiPageServices2Api$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1EntityOwnerIdWiki2WikiIdAttachment(var_owner_id, var_wiki_id, var_file_name, redirect = var_redirect, wiki_version = var_wiki_versiondata_file = "result.txt")
result <- api_instance$getRepoV1EntityOwnerIdWiki2WikiIdAttachment(var_owner_id, var_wiki_id, var_file_name, redirect = var_redirect, wiki_version = var_wiki_version)
dput(result)


####################  getRepoV1EntityOwnerIdWiki2WikiIdAttachmenthandles  ####################

library(synr)
var_owner_id <- "owner_id_example" # character | The ID of the owning Entity.
var_wiki_id <- "wiki_id_example" # character | The ID of the WikiPage.
var_wiki_version <- 3.4 # numeric |  (Optional)

api_instance <- WikiPageServices2Api$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1EntityOwnerIdWiki2WikiIdAttachmenthandles(var_owner_id, var_wiki_id, wiki_version = var_wiki_versiondata_file = "result.txt")
result <- api_instance$getRepoV1EntityOwnerIdWiki2WikiIdAttachmenthandles(var_owner_id, var_wiki_id, wiki_version = var_wiki_version)
dput(result)


####################  getRepoV1EntityOwnerIdWiki2WikiIdAttachmentpreview  ####################

library(synr)
var_owner_id <- "owner_id_example" # character | The ID of the owning Entity
var_wiki_id <- "wiki_id_example" # character | The ID of the WikiPage
var_file_name <- "file_name_example" # character | The name of the file to get. The file names can be found in             the FileHandles from the ,<a href=\"${GET.entity.ownerId.wiki.wikiId.attachmenthandles}\">,GET             /entity/{ownerId}/wiki/{wikiId}/attachmenthandles,</a>, method.
var_redirect <- "redirect_example" # character | When set to false, the URL will be returned as text/plain             instead of redirecting. (Optional)
var_wiki_version <- 3.4 # numeric |  (Optional)

api_instance <- WikiPageServices2Api$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1EntityOwnerIdWiki2WikiIdAttachmentpreview(var_owner_id, var_wiki_id, var_file_name, redirect = var_redirect, wiki_version = var_wiki_versiondata_file = "result.txt")
result <- api_instance$getRepoV1EntityOwnerIdWiki2WikiIdAttachmentpreview(var_owner_id, var_wiki_id, var_file_name, redirect = var_redirect, wiki_version = var_wiki_version)
dput(result)


####################  getRepoV1EntityOwnerIdWiki2WikiIdMarkdown  ####################

library(synr)
var_owner_id <- "owner_id_example" # character | 
var_wiki_id <- "wiki_id_example" # character | 
var_redirect <- "redirect_example" # character |  (Optional)
var_wiki_version <- 3.4 # numeric |  (Optional)

api_instance <- WikiPageServices2Api$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1EntityOwnerIdWiki2WikiIdMarkdown(var_owner_id, var_wiki_id, redirect = var_redirect, wiki_version = var_wiki_versiondata_file = "result.txt")
result <- api_instance$getRepoV1EntityOwnerIdWiki2WikiIdMarkdown(var_owner_id, var_wiki_id, redirect = var_redirect, wiki_version = var_wiki_version)
dput(result)


####################  getRepoV1EntityOwnerIdWiki2WikiIdWikihistory  ####################

library(synr)
var_offset <- 3.4 # numeric | The index of the pagination offset. For a page size of 10, the             first page would be at offset = 0, and the second page would             be at offset = 10.
var_limit <- 3.4 # numeric | Limits the size of the page returned. For example, a page size             of 10 require limit = 10. Limit must be 50 or less.
var_wiki_id <- "wiki_id_example" # character | The ID of the WikiPage.
var_owner_id <- "owner_id_example" # character | The ID of the owning Entity.

api_instance <- WikiPageServices2Api$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1EntityOwnerIdWiki2WikiIdWikihistory(var_offset, var_limit, var_wiki_id, var_owner_iddata_file = "result.txt")
result <- api_instance$getRepoV1EntityOwnerIdWiki2WikiIdWikihistory(var_offset, var_limit, var_wiki_id, var_owner_id)
dput(result)


####################  getRepoV1EntityOwnerIdWiki2orderhint  ####################

library(synr)
var_owner_id <- "owner_id_example" # character | The ID of the owning Entity.

api_instance <- WikiPageServices2Api$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1EntityOwnerIdWiki2orderhint(var_owner_iddata_file = "result.txt")
result <- api_instance$getRepoV1EntityOwnerIdWiki2orderhint(var_owner_id)
dput(result)


####################  getRepoV1EntityOwnerIdWikiheadertree2  ####################

library(synr)
var_owner_id <- "owner_id_example" # character | The ID of the owning Entity.
var_offset <- 3.4 # numeric | The index of the pagination offset. For a page size of 10, the             first page would be at offset = 0, and the second page would             be at offset = 10. (Optional)
var_limit <- 3.4 # numeric | Limits the size of the page returned. For example, a page size             of 10 require limit = 10. Limit must be 50 or less. (Optional)

api_instance <- WikiPageServices2Api$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1EntityOwnerIdWikiheadertree2(var_owner_id, offset = var_offset, limit = var_limitdata_file = "result.txt")
result <- api_instance$getRepoV1EntityOwnerIdWikiheadertree2(var_owner_id, offset = var_offset, limit = var_limit)
dput(result)


####################  getRepoV1EvaluationOwnerIdWiki2  ####################

library(synr)
var_owner_id <- "owner_id_example" # character | The ID of the owning Evaluation.

api_instance <- WikiPageServices2Api$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1EvaluationOwnerIdWiki2(var_owner_iddata_file = "result.txt")
result <- api_instance$getRepoV1EvaluationOwnerIdWiki2(var_owner_id)
dput(result)


####################  getRepoV1EvaluationOwnerIdWiki2WikiId  ####################

library(synr)
var_owner_id <- "owner_id_example" # character | The ID of the owning Evaluation.
var_wiki_id <- "wiki_id_example" # character | The ID of the WikiPage to get.
var_wiki_version <- 3.4 # numeric |  (Optional)

api_instance <- WikiPageServices2Api$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1EvaluationOwnerIdWiki2WikiId(var_owner_id, var_wiki_id, wiki_version = var_wiki_versiondata_file = "result.txt")
result <- api_instance$getRepoV1EvaluationOwnerIdWiki2WikiId(var_owner_id, var_wiki_id, wiki_version = var_wiki_version)
dput(result)


####################  getRepoV1EvaluationOwnerIdWiki2WikiIdAttachment  ####################

library(synr)
var_owner_id <- "owner_id_example" # character | The ID of the owning Evaluation
var_wiki_id <- "wiki_id_example" # character | The ID of the WikiPage
var_file_name <- "file_name_example" # character | The name of the file to get. The file names can be found in             the FileHandles from the ,<a href=\"${GET.evaluation.ownerId.wiki.wikiId.attachmenthandles}\">,GET /evaluation/{ownerId}/wiki/{wikiId}/attachmenthandles,</a>,             method.
var_redirect <- "redirect_example" # character | When set to false, the URL will be returned as text/plain             instead of redirecting. (Optional)
var_wiki_version <- 3.4 # numeric |  (Optional)

api_instance <- WikiPageServices2Api$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1EvaluationOwnerIdWiki2WikiIdAttachment(var_owner_id, var_wiki_id, var_file_name, redirect = var_redirect, wiki_version = var_wiki_versiondata_file = "result.txt")
result <- api_instance$getRepoV1EvaluationOwnerIdWiki2WikiIdAttachment(var_owner_id, var_wiki_id, var_file_name, redirect = var_redirect, wiki_version = var_wiki_version)
dput(result)


####################  getRepoV1EvaluationOwnerIdWiki2WikiIdAttachmenthandles  ####################

library(synr)
var_owner_id <- "owner_id_example" # character | The ID of the owning Evaluation.
var_wiki_id <- "wiki_id_example" # character | The ID of the WikiPage.
var_wiki_version <- 3.4 # numeric |  (Optional)

api_instance <- WikiPageServices2Api$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1EvaluationOwnerIdWiki2WikiIdAttachmenthandles(var_owner_id, var_wiki_id, wiki_version = var_wiki_versiondata_file = "result.txt")
result <- api_instance$getRepoV1EvaluationOwnerIdWiki2WikiIdAttachmenthandles(var_owner_id, var_wiki_id, wiki_version = var_wiki_version)
dput(result)


####################  getRepoV1EvaluationOwnerIdWiki2WikiIdAttachmentpreview  ####################

library(synr)
var_owner_id <- "owner_id_example" # character | The ID of the owning Evaluation
var_wiki_id <- "wiki_id_example" # character | The ID of the WikiPage
var_file_name <- "file_name_example" # character | The name of the file to get. The file names can be found in             the FileHandles from the ,<a href=\"${GET.evaluation.ownerId.wiki.wikiId.attachmenthandles}\">,GET /evaluation/{ownerId}/wiki/{wikiId}/attachmenthandles,</a>,             method.
var_redirect <- "redirect_example" # character | When set to false, the URL will be returned as text/plain             instead of redirecting. (Optional)
var_wiki_version <- 3.4 # numeric |  (Optional)

api_instance <- WikiPageServices2Api$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1EvaluationOwnerIdWiki2WikiIdAttachmentpreview(var_owner_id, var_wiki_id, var_file_name, redirect = var_redirect, wiki_version = var_wiki_versiondata_file = "result.txt")
result <- api_instance$getRepoV1EvaluationOwnerIdWiki2WikiIdAttachmentpreview(var_owner_id, var_wiki_id, var_file_name, redirect = var_redirect, wiki_version = var_wiki_version)
dput(result)


####################  getRepoV1EvaluationOwnerIdWiki2WikiIdMarkdown  ####################

library(synr)
var_owner_id <- "owner_id_example" # character | 
var_wiki_id <- "wiki_id_example" # character | 
var_redirect <- "redirect_example" # character |  (Optional)
var_wiki_version <- 3.4 # numeric |  (Optional)

api_instance <- WikiPageServices2Api$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1EvaluationOwnerIdWiki2WikiIdMarkdown(var_owner_id, var_wiki_id, redirect = var_redirect, wiki_version = var_wiki_versiondata_file = "result.txt")
result <- api_instance$getRepoV1EvaluationOwnerIdWiki2WikiIdMarkdown(var_owner_id, var_wiki_id, redirect = var_redirect, wiki_version = var_wiki_version)
dput(result)


####################  getRepoV1EvaluationOwnerIdWiki2WikiIdWikihistory  ####################

library(synr)
var_offset <- 3.4 # numeric | The index of the pagination offset. For a page size of 10, the             first page would be at offset = 0, and the second page would             be at offset = 10.
var_limit <- 3.4 # numeric | Limits the size of the page returned. For example, a page size             of 10 require limit = 10.
var_wiki_id <- "wiki_id_example" # character | The ID of the WikiPage.
var_owner_id <- "owner_id_example" # character | The ID of the owning Entity.

api_instance <- WikiPageServices2Api$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1EvaluationOwnerIdWiki2WikiIdWikihistory(var_offset, var_limit, var_wiki_id, var_owner_iddata_file = "result.txt")
result <- api_instance$getRepoV1EvaluationOwnerIdWiki2WikiIdWikihistory(var_offset, var_limit, var_wiki_id, var_owner_id)
dput(result)


####################  getRepoV1EvaluationOwnerIdWikiheadertree2  ####################

library(synr)
var_owner_id <- "owner_id_example" # character | The ID of the owning Evaluation.
var_offset <- 3.4 # numeric | The index of the pagination offset. For a page size of 10, the             first page would be at offset = 0, and the second page would             be at offset = 10. (Optional)
var_limit <- 3.4 # numeric | Limits the size of the page returned. For example, a page size             of 10 require limit = 10. (Optional)

api_instance <- WikiPageServices2Api$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1EvaluationOwnerIdWikiheadertree2(var_owner_id, offset = var_offset, limit = var_limitdata_file = "result.txt")
result <- api_instance$getRepoV1EvaluationOwnerIdWikiheadertree2(var_owner_id, offset = var_offset, limit = var_limit)
dput(result)


####################  postRepoV1AccessRequirementOwnerIdWiki2  ####################

library(synr)
var_owner_id <- "owner_id_example" # character | The ID of the owner AccessRequirement.
var_org_sagebionetworks_repo_model_v2_wiki_v2_wiki_page <- org.sagebionetworks.repo.model.v2.wiki.V2WikiPage$new("id_example", "etag_example", "createdOn_example", "createdBy_example", "modifiedOn_example", "modifiedBy_example", "parentWikiId_example", "title_example", "markdownFileHandleId_example", c("attachmentFileHandleIds_example")) # OrgSagebionetworksRepoModelV2WikiV2WikiPage | 

api_instance <- WikiPageServices2Api$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$postRepoV1AccessRequirementOwnerIdWiki2(var_owner_id, var_org_sagebionetworks_repo_model_v2_wiki_v2_wiki_pagedata_file = "result.txt")
result <- api_instance$postRepoV1AccessRequirementOwnerIdWiki2(var_owner_id, var_org_sagebionetworks_repo_model_v2_wiki_v2_wiki_page)
dput(result)


####################  postRepoV1EntityOwnerIdWiki2  ####################

library(synr)
var_owner_id <- "owner_id_example" # character | The ID of the owner Entity.
var_org_sagebionetworks_repo_model_v2_wiki_v2_wiki_page <- org.sagebionetworks.repo.model.v2.wiki.V2WikiPage$new("id_example", "etag_example", "createdOn_example", "createdBy_example", "modifiedOn_example", "modifiedBy_example", "parentWikiId_example", "title_example", "markdownFileHandleId_example", c("attachmentFileHandleIds_example")) # OrgSagebionetworksRepoModelV2WikiV2WikiPage | 

api_instance <- WikiPageServices2Api$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$postRepoV1EntityOwnerIdWiki2(var_owner_id, var_org_sagebionetworks_repo_model_v2_wiki_v2_wiki_pagedata_file = "result.txt")
result <- api_instance$postRepoV1EntityOwnerIdWiki2(var_owner_id, var_org_sagebionetworks_repo_model_v2_wiki_v2_wiki_page)
dput(result)


####################  postRepoV1EvaluationOwnerIdWiki2  ####################

library(synr)
var_owner_id <- "owner_id_example" # character | The ID of the owner Evaluation.
var_org_sagebionetworks_repo_model_v2_wiki_v2_wiki_page <- org.sagebionetworks.repo.model.v2.wiki.V2WikiPage$new("id_example", "etag_example", "createdOn_example", "createdBy_example", "modifiedOn_example", "modifiedBy_example", "parentWikiId_example", "title_example", "markdownFileHandleId_example", c("attachmentFileHandleIds_example")) # OrgSagebionetworksRepoModelV2WikiV2WikiPage | 

api_instance <- WikiPageServices2Api$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$postRepoV1EvaluationOwnerIdWiki2(var_owner_id, var_org_sagebionetworks_repo_model_v2_wiki_v2_wiki_pagedata_file = "result.txt")
result <- api_instance$postRepoV1EvaluationOwnerIdWiki2(var_owner_id, var_org_sagebionetworks_repo_model_v2_wiki_v2_wiki_page)
dput(result)


####################  putRepoV1AccessRequirementOwnerIdWiki2WikiId  ####################

library(synr)
var_owner_id <- "owner_id_example" # character | The ID of the owning Access Requirement.
var_wiki_id <- "wiki_id_example" # character | The ID of the WikiPage to update.
var_org_sagebionetworks_repo_model_v2_wiki_v2_wiki_page <- org.sagebionetworks.repo.model.v2.wiki.V2WikiPage$new("id_example", "etag_example", "createdOn_example", "createdBy_example", "modifiedOn_example", "modifiedBy_example", "parentWikiId_example", "title_example", "markdownFileHandleId_example", c("attachmentFileHandleIds_example")) # OrgSagebionetworksRepoModelV2WikiV2WikiPage | 

api_instance <- WikiPageServices2Api$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$putRepoV1AccessRequirementOwnerIdWiki2WikiId(var_owner_id, var_wiki_id, var_org_sagebionetworks_repo_model_v2_wiki_v2_wiki_pagedata_file = "result.txt")
result <- api_instance$putRepoV1AccessRequirementOwnerIdWiki2WikiId(var_owner_id, var_wiki_id, var_org_sagebionetworks_repo_model_v2_wiki_v2_wiki_page)
dput(result)


####################  putRepoV1AccessRequirementOwnerIdWiki2WikiIdWikiVersion  ####################

library(synr)
var_wiki_version <- 3.4 # numeric | 
var_owner_id <- "owner_id_example" # character | The ID of the owning Access Requirement.
var_wiki_id <- "wiki_id_example" # character | The ID of the WikiPage to update.

api_instance <- WikiPageServices2Api$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$putRepoV1AccessRequirementOwnerIdWiki2WikiIdWikiVersion(var_wiki_version, var_owner_id, var_wiki_iddata_file = "result.txt")
result <- api_instance$putRepoV1AccessRequirementOwnerIdWiki2WikiIdWikiVersion(var_wiki_version, var_owner_id, var_wiki_id)
dput(result)


####################  putRepoV1EntityOwnerIdWiki2WikiId  ####################

library(synr)
var_owner_id <- "owner_id_example" # character | The ID of the owning Entity.
var_wiki_id <- "wiki_id_example" # character | The ID of the WikiPage to update.
var_org_sagebionetworks_repo_model_v2_wiki_v2_wiki_page <- org.sagebionetworks.repo.model.v2.wiki.V2WikiPage$new("id_example", "etag_example", "createdOn_example", "createdBy_example", "modifiedOn_example", "modifiedBy_example", "parentWikiId_example", "title_example", "markdownFileHandleId_example", c("attachmentFileHandleIds_example")) # OrgSagebionetworksRepoModelV2WikiV2WikiPage | 

api_instance <- WikiPageServices2Api$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$putRepoV1EntityOwnerIdWiki2WikiId(var_owner_id, var_wiki_id, var_org_sagebionetworks_repo_model_v2_wiki_v2_wiki_pagedata_file = "result.txt")
result <- api_instance$putRepoV1EntityOwnerIdWiki2WikiId(var_owner_id, var_wiki_id, var_org_sagebionetworks_repo_model_v2_wiki_v2_wiki_page)
dput(result)


####################  putRepoV1EntityOwnerIdWiki2WikiIdWikiVersion  ####################

library(synr)
var_wiki_version <- 3.4 # numeric | 
var_owner_id <- "owner_id_example" # character | The ID of the owning Entity.
var_wiki_id <- "wiki_id_example" # character | The ID of the WikiPage to update.

api_instance <- WikiPageServices2Api$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$putRepoV1EntityOwnerIdWiki2WikiIdWikiVersion(var_wiki_version, var_owner_id, var_wiki_iddata_file = "result.txt")
result <- api_instance$putRepoV1EntityOwnerIdWiki2WikiIdWikiVersion(var_wiki_version, var_owner_id, var_wiki_id)
dput(result)


####################  putRepoV1EntityOwnerIdWiki2orderhint  ####################

library(synr)
var_owner_id <- "owner_id_example" # character | 
var_org_sagebionetworks_repo_model_v2_wiki_v2_wiki_order_hint <- org.sagebionetworks.repo.model.v2.wiki.V2WikiOrderHint$new("ownerId_example", "ownerObjectType_example", c("idList_example"), "etag_example") # OrgSagebionetworksRepoModelV2WikiV2WikiOrderHint | 

api_instance <- WikiPageServices2Api$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$putRepoV1EntityOwnerIdWiki2orderhint(var_owner_id, var_org_sagebionetworks_repo_model_v2_wiki_v2_wiki_order_hintdata_file = "result.txt")
result <- api_instance$putRepoV1EntityOwnerIdWiki2orderhint(var_owner_id, var_org_sagebionetworks_repo_model_v2_wiki_v2_wiki_order_hint)
dput(result)


####################  putRepoV1EvaluationOwnerIdWiki2WikiId  ####################

library(synr)
var_owner_id <- "owner_id_example" # character | The ID of the owning Evaluation.
var_wiki_id <- "wiki_id_example" # character | The ID of the WikiPage to update.
var_org_sagebionetworks_repo_model_v2_wiki_v2_wiki_page <- org.sagebionetworks.repo.model.v2.wiki.V2WikiPage$new("id_example", "etag_example", "createdOn_example", "createdBy_example", "modifiedOn_example", "modifiedBy_example", "parentWikiId_example", "title_example", "markdownFileHandleId_example", c("attachmentFileHandleIds_example")) # OrgSagebionetworksRepoModelV2WikiV2WikiPage | 

api_instance <- WikiPageServices2Api$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$putRepoV1EvaluationOwnerIdWiki2WikiId(var_owner_id, var_wiki_id, var_org_sagebionetworks_repo_model_v2_wiki_v2_wiki_pagedata_file = "result.txt")
result <- api_instance$putRepoV1EvaluationOwnerIdWiki2WikiId(var_owner_id, var_wiki_id, var_org_sagebionetworks_repo_model_v2_wiki_v2_wiki_page)
dput(result)


####################  putRepoV1EvaluationOwnerIdWiki2WikiIdWikiVersion  ####################

library(synr)
var_wiki_version <- 3.4 # numeric | 
var_owner_id <- "owner_id_example" # character | The ID of the owning Entity.
var_wiki_id <- "wiki_id_example" # character | The ID of the WikiPage to update.

api_instance <- WikiPageServices2Api$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$putRepoV1EvaluationOwnerIdWiki2WikiIdWikiVersion(var_wiki_version, var_owner_id, var_wiki_iddata_file = "result.txt")
result <- api_instance$putRepoV1EvaluationOwnerIdWiki2WikiIdWikiVersion(var_wiki_version, var_owner_id, var_wiki_id)
dput(result)


}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{api_client}}{Handles the client-server communication.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-WikiPageServices2Api-new}{\code{WikiPageServices2Api$new()}}
\item \href{#method-WikiPageServices2Api-deleteRepoV1AccessRequirementOwnerIdWiki2WikiId}{\code{WikiPageServices2Api$deleteRepoV1AccessRequirementOwnerIdWiki2WikiId()}}
\item \href{#method-WikiPageServices2Api-deleteRepoV1AccessRequirementOwnerIdWiki2WikiIdWithHttpInfo}{\code{WikiPageServices2Api$deleteRepoV1AccessRequirementOwnerIdWiki2WikiIdWithHttpInfo()}}
\item \href{#method-WikiPageServices2Api-deleteRepoV1EntityOwnerIdWiki2WikiId}{\code{WikiPageServices2Api$deleteRepoV1EntityOwnerIdWiki2WikiId()}}
\item \href{#method-WikiPageServices2Api-deleteRepoV1EntityOwnerIdWiki2WikiIdWithHttpInfo}{\code{WikiPageServices2Api$deleteRepoV1EntityOwnerIdWiki2WikiIdWithHttpInfo()}}
\item \href{#method-WikiPageServices2Api-deleteRepoV1EvaluationOwnerIdWiki2WikiId}{\code{WikiPageServices2Api$deleteRepoV1EvaluationOwnerIdWiki2WikiId()}}
\item \href{#method-WikiPageServices2Api-deleteRepoV1EvaluationOwnerIdWiki2WikiIdWithHttpInfo}{\code{WikiPageServices2Api$deleteRepoV1EvaluationOwnerIdWiki2WikiIdWithHttpInfo()}}
\item \href{#method-WikiPageServices2Api-getRepoV1AccessRequirementOwnerIdWiki2}{\code{WikiPageServices2Api$getRepoV1AccessRequirementOwnerIdWiki2()}}
\item \href{#method-WikiPageServices2Api-getRepoV1AccessRequirementOwnerIdWiki2WithHttpInfo}{\code{WikiPageServices2Api$getRepoV1AccessRequirementOwnerIdWiki2WithHttpInfo()}}
\item \href{#method-WikiPageServices2Api-getRepoV1AccessRequirementOwnerIdWiki2WikiId}{\code{WikiPageServices2Api$getRepoV1AccessRequirementOwnerIdWiki2WikiId()}}
\item \href{#method-WikiPageServices2Api-getRepoV1AccessRequirementOwnerIdWiki2WikiIdWithHttpInfo}{\code{WikiPageServices2Api$getRepoV1AccessRequirementOwnerIdWiki2WikiIdWithHttpInfo()}}
\item \href{#method-WikiPageServices2Api-getRepoV1AccessRequirementOwnerIdWiki2WikiIdAttachment}{\code{WikiPageServices2Api$getRepoV1AccessRequirementOwnerIdWiki2WikiIdAttachment()}}
\item \href{#method-WikiPageServices2Api-getRepoV1AccessRequirementOwnerIdWiki2WikiIdAttachmentWithHttpInfo}{\code{WikiPageServices2Api$getRepoV1AccessRequirementOwnerIdWiki2WikiIdAttachmentWithHttpInfo()}}
\item \href{#method-WikiPageServices2Api-getRepoV1AccessRequirementOwnerIdWiki2WikiIdAttachmenthandles}{\code{WikiPageServices2Api$getRepoV1AccessRequirementOwnerIdWiki2WikiIdAttachmenthandles()}}
\item \href{#method-WikiPageServices2Api-getRepoV1AccessRequirementOwnerIdWiki2WikiIdAttachmenthandlesWithHttpInfo}{\code{WikiPageServices2Api$getRepoV1AccessRequirementOwnerIdWiki2WikiIdAttachmenthandlesWithHttpInfo()}}
\item \href{#method-WikiPageServices2Api-getRepoV1AccessRequirementOwnerIdWiki2WikiIdAttachmentpreview}{\code{WikiPageServices2Api$getRepoV1AccessRequirementOwnerIdWiki2WikiIdAttachmentpreview()}}
\item \href{#method-WikiPageServices2Api-getRepoV1AccessRequirementOwnerIdWiki2WikiIdAttachmentpreviewWithHttpInfo}{\code{WikiPageServices2Api$getRepoV1AccessRequirementOwnerIdWiki2WikiIdAttachmentpreviewWithHttpInfo()}}
\item \href{#method-WikiPageServices2Api-getRepoV1AccessRequirementOwnerIdWiki2WikiIdMarkdown}{\code{WikiPageServices2Api$getRepoV1AccessRequirementOwnerIdWiki2WikiIdMarkdown()}}
\item \href{#method-WikiPageServices2Api-getRepoV1AccessRequirementOwnerIdWiki2WikiIdMarkdownWithHttpInfo}{\code{WikiPageServices2Api$getRepoV1AccessRequirementOwnerIdWiki2WikiIdMarkdownWithHttpInfo()}}
\item \href{#method-WikiPageServices2Api-getRepoV1AccessRequirementOwnerIdWiki2WikiIdWikihistory}{\code{WikiPageServices2Api$getRepoV1AccessRequirementOwnerIdWiki2WikiIdWikihistory()}}
\item \href{#method-WikiPageServices2Api-getRepoV1AccessRequirementOwnerIdWiki2WikiIdWikihistoryWithHttpInfo}{\code{WikiPageServices2Api$getRepoV1AccessRequirementOwnerIdWiki2WikiIdWikihistoryWithHttpInfo()}}
\item \href{#method-WikiPageServices2Api-getRepoV1AccessRequirementOwnerIdWikiheadertree2}{\code{WikiPageServices2Api$getRepoV1AccessRequirementOwnerIdWikiheadertree2()}}
\item \href{#method-WikiPageServices2Api-getRepoV1AccessRequirementOwnerIdWikiheadertree2WithHttpInfo}{\code{WikiPageServices2Api$getRepoV1AccessRequirementOwnerIdWikiheadertree2WithHttpInfo()}}
\item \href{#method-WikiPageServices2Api-getRepoV1EntityOwnerIdWiki2}{\code{WikiPageServices2Api$getRepoV1EntityOwnerIdWiki2()}}
\item \href{#method-WikiPageServices2Api-getRepoV1EntityOwnerIdWiki2WithHttpInfo}{\code{WikiPageServices2Api$getRepoV1EntityOwnerIdWiki2WithHttpInfo()}}
\item \href{#method-WikiPageServices2Api-getRepoV1EntityOwnerIdWiki2WikiId}{\code{WikiPageServices2Api$getRepoV1EntityOwnerIdWiki2WikiId()}}
\item \href{#method-WikiPageServices2Api-getRepoV1EntityOwnerIdWiki2WikiIdWithHttpInfo}{\code{WikiPageServices2Api$getRepoV1EntityOwnerIdWiki2WikiIdWithHttpInfo()}}
\item \href{#method-WikiPageServices2Api-getRepoV1EntityOwnerIdWiki2WikiIdAttachment}{\code{WikiPageServices2Api$getRepoV1EntityOwnerIdWiki2WikiIdAttachment()}}
\item \href{#method-WikiPageServices2Api-getRepoV1EntityOwnerIdWiki2WikiIdAttachmentWithHttpInfo}{\code{WikiPageServices2Api$getRepoV1EntityOwnerIdWiki2WikiIdAttachmentWithHttpInfo()}}
\item \href{#method-WikiPageServices2Api-getRepoV1EntityOwnerIdWiki2WikiIdAttachmenthandles}{\code{WikiPageServices2Api$getRepoV1EntityOwnerIdWiki2WikiIdAttachmenthandles()}}
\item \href{#method-WikiPageServices2Api-getRepoV1EntityOwnerIdWiki2WikiIdAttachmenthandlesWithHttpInfo}{\code{WikiPageServices2Api$getRepoV1EntityOwnerIdWiki2WikiIdAttachmenthandlesWithHttpInfo()}}
\item \href{#method-WikiPageServices2Api-getRepoV1EntityOwnerIdWiki2WikiIdAttachmentpreview}{\code{WikiPageServices2Api$getRepoV1EntityOwnerIdWiki2WikiIdAttachmentpreview()}}
\item \href{#method-WikiPageServices2Api-getRepoV1EntityOwnerIdWiki2WikiIdAttachmentpreviewWithHttpInfo}{\code{WikiPageServices2Api$getRepoV1EntityOwnerIdWiki2WikiIdAttachmentpreviewWithHttpInfo()}}
\item \href{#method-WikiPageServices2Api-getRepoV1EntityOwnerIdWiki2WikiIdMarkdown}{\code{WikiPageServices2Api$getRepoV1EntityOwnerIdWiki2WikiIdMarkdown()}}
\item \href{#method-WikiPageServices2Api-getRepoV1EntityOwnerIdWiki2WikiIdMarkdownWithHttpInfo}{\code{WikiPageServices2Api$getRepoV1EntityOwnerIdWiki2WikiIdMarkdownWithHttpInfo()}}
\item \href{#method-WikiPageServices2Api-getRepoV1EntityOwnerIdWiki2WikiIdWikihistory}{\code{WikiPageServices2Api$getRepoV1EntityOwnerIdWiki2WikiIdWikihistory()}}
\item \href{#method-WikiPageServices2Api-getRepoV1EntityOwnerIdWiki2WikiIdWikihistoryWithHttpInfo}{\code{WikiPageServices2Api$getRepoV1EntityOwnerIdWiki2WikiIdWikihistoryWithHttpInfo()}}
\item \href{#method-WikiPageServices2Api-getRepoV1EntityOwnerIdWiki2orderhint}{\code{WikiPageServices2Api$getRepoV1EntityOwnerIdWiki2orderhint()}}
\item \href{#method-WikiPageServices2Api-getRepoV1EntityOwnerIdWiki2orderhintWithHttpInfo}{\code{WikiPageServices2Api$getRepoV1EntityOwnerIdWiki2orderhintWithHttpInfo()}}
\item \href{#method-WikiPageServices2Api-getRepoV1EntityOwnerIdWikiheadertree2}{\code{WikiPageServices2Api$getRepoV1EntityOwnerIdWikiheadertree2()}}
\item \href{#method-WikiPageServices2Api-getRepoV1EntityOwnerIdWikiheadertree2WithHttpInfo}{\code{WikiPageServices2Api$getRepoV1EntityOwnerIdWikiheadertree2WithHttpInfo()}}
\item \href{#method-WikiPageServices2Api-getRepoV1EvaluationOwnerIdWiki2}{\code{WikiPageServices2Api$getRepoV1EvaluationOwnerIdWiki2()}}
\item \href{#method-WikiPageServices2Api-getRepoV1EvaluationOwnerIdWiki2WithHttpInfo}{\code{WikiPageServices2Api$getRepoV1EvaluationOwnerIdWiki2WithHttpInfo()}}
\item \href{#method-WikiPageServices2Api-getRepoV1EvaluationOwnerIdWiki2WikiId}{\code{WikiPageServices2Api$getRepoV1EvaluationOwnerIdWiki2WikiId()}}
\item \href{#method-WikiPageServices2Api-getRepoV1EvaluationOwnerIdWiki2WikiIdWithHttpInfo}{\code{WikiPageServices2Api$getRepoV1EvaluationOwnerIdWiki2WikiIdWithHttpInfo()}}
\item \href{#method-WikiPageServices2Api-getRepoV1EvaluationOwnerIdWiki2WikiIdAttachment}{\code{WikiPageServices2Api$getRepoV1EvaluationOwnerIdWiki2WikiIdAttachment()}}
\item \href{#method-WikiPageServices2Api-getRepoV1EvaluationOwnerIdWiki2WikiIdAttachmentWithHttpInfo}{\code{WikiPageServices2Api$getRepoV1EvaluationOwnerIdWiki2WikiIdAttachmentWithHttpInfo()}}
\item \href{#method-WikiPageServices2Api-getRepoV1EvaluationOwnerIdWiki2WikiIdAttachmenthandles}{\code{WikiPageServices2Api$getRepoV1EvaluationOwnerIdWiki2WikiIdAttachmenthandles()}}
\item \href{#method-WikiPageServices2Api-getRepoV1EvaluationOwnerIdWiki2WikiIdAttachmenthandlesWithHttpInfo}{\code{WikiPageServices2Api$getRepoV1EvaluationOwnerIdWiki2WikiIdAttachmenthandlesWithHttpInfo()}}
\item \href{#method-WikiPageServices2Api-getRepoV1EvaluationOwnerIdWiki2WikiIdAttachmentpreview}{\code{WikiPageServices2Api$getRepoV1EvaluationOwnerIdWiki2WikiIdAttachmentpreview()}}
\item \href{#method-WikiPageServices2Api-getRepoV1EvaluationOwnerIdWiki2WikiIdAttachmentpreviewWithHttpInfo}{\code{WikiPageServices2Api$getRepoV1EvaluationOwnerIdWiki2WikiIdAttachmentpreviewWithHttpInfo()}}
\item \href{#method-WikiPageServices2Api-getRepoV1EvaluationOwnerIdWiki2WikiIdMarkdown}{\code{WikiPageServices2Api$getRepoV1EvaluationOwnerIdWiki2WikiIdMarkdown()}}
\item \href{#method-WikiPageServices2Api-getRepoV1EvaluationOwnerIdWiki2WikiIdMarkdownWithHttpInfo}{\code{WikiPageServices2Api$getRepoV1EvaluationOwnerIdWiki2WikiIdMarkdownWithHttpInfo()}}
\item \href{#method-WikiPageServices2Api-getRepoV1EvaluationOwnerIdWiki2WikiIdWikihistory}{\code{WikiPageServices2Api$getRepoV1EvaluationOwnerIdWiki2WikiIdWikihistory()}}
\item \href{#method-WikiPageServices2Api-getRepoV1EvaluationOwnerIdWiki2WikiIdWikihistoryWithHttpInfo}{\code{WikiPageServices2Api$getRepoV1EvaluationOwnerIdWiki2WikiIdWikihistoryWithHttpInfo()}}
\item \href{#method-WikiPageServices2Api-getRepoV1EvaluationOwnerIdWikiheadertree2}{\code{WikiPageServices2Api$getRepoV1EvaluationOwnerIdWikiheadertree2()}}
\item \href{#method-WikiPageServices2Api-getRepoV1EvaluationOwnerIdWikiheadertree2WithHttpInfo}{\code{WikiPageServices2Api$getRepoV1EvaluationOwnerIdWikiheadertree2WithHttpInfo()}}
\item \href{#method-WikiPageServices2Api-postRepoV1AccessRequirementOwnerIdWiki2}{\code{WikiPageServices2Api$postRepoV1AccessRequirementOwnerIdWiki2()}}
\item \href{#method-WikiPageServices2Api-postRepoV1AccessRequirementOwnerIdWiki2WithHttpInfo}{\code{WikiPageServices2Api$postRepoV1AccessRequirementOwnerIdWiki2WithHttpInfo()}}
\item \href{#method-WikiPageServices2Api-postRepoV1EntityOwnerIdWiki2}{\code{WikiPageServices2Api$postRepoV1EntityOwnerIdWiki2()}}
\item \href{#method-WikiPageServices2Api-postRepoV1EntityOwnerIdWiki2WithHttpInfo}{\code{WikiPageServices2Api$postRepoV1EntityOwnerIdWiki2WithHttpInfo()}}
\item \href{#method-WikiPageServices2Api-postRepoV1EvaluationOwnerIdWiki2}{\code{WikiPageServices2Api$postRepoV1EvaluationOwnerIdWiki2()}}
\item \href{#method-WikiPageServices2Api-postRepoV1EvaluationOwnerIdWiki2WithHttpInfo}{\code{WikiPageServices2Api$postRepoV1EvaluationOwnerIdWiki2WithHttpInfo()}}
\item \href{#method-WikiPageServices2Api-putRepoV1AccessRequirementOwnerIdWiki2WikiId}{\code{WikiPageServices2Api$putRepoV1AccessRequirementOwnerIdWiki2WikiId()}}
\item \href{#method-WikiPageServices2Api-putRepoV1AccessRequirementOwnerIdWiki2WikiIdWithHttpInfo}{\code{WikiPageServices2Api$putRepoV1AccessRequirementOwnerIdWiki2WikiIdWithHttpInfo()}}
\item \href{#method-WikiPageServices2Api-putRepoV1AccessRequirementOwnerIdWiki2WikiIdWikiVersion}{\code{WikiPageServices2Api$putRepoV1AccessRequirementOwnerIdWiki2WikiIdWikiVersion()}}
\item \href{#method-WikiPageServices2Api-putRepoV1AccessRequirementOwnerIdWiki2WikiIdWikiVersionWithHttpInfo}{\code{WikiPageServices2Api$putRepoV1AccessRequirementOwnerIdWiki2WikiIdWikiVersionWithHttpInfo()}}
\item \href{#method-WikiPageServices2Api-putRepoV1EntityOwnerIdWiki2WikiId}{\code{WikiPageServices2Api$putRepoV1EntityOwnerIdWiki2WikiId()}}
\item \href{#method-WikiPageServices2Api-putRepoV1EntityOwnerIdWiki2WikiIdWithHttpInfo}{\code{WikiPageServices2Api$putRepoV1EntityOwnerIdWiki2WikiIdWithHttpInfo()}}
\item \href{#method-WikiPageServices2Api-putRepoV1EntityOwnerIdWiki2WikiIdWikiVersion}{\code{WikiPageServices2Api$putRepoV1EntityOwnerIdWiki2WikiIdWikiVersion()}}
\item \href{#method-WikiPageServices2Api-putRepoV1EntityOwnerIdWiki2WikiIdWikiVersionWithHttpInfo}{\code{WikiPageServices2Api$putRepoV1EntityOwnerIdWiki2WikiIdWikiVersionWithHttpInfo()}}
\item \href{#method-WikiPageServices2Api-putRepoV1EntityOwnerIdWiki2orderhint}{\code{WikiPageServices2Api$putRepoV1EntityOwnerIdWiki2orderhint()}}
\item \href{#method-WikiPageServices2Api-putRepoV1EntityOwnerIdWiki2orderhintWithHttpInfo}{\code{WikiPageServices2Api$putRepoV1EntityOwnerIdWiki2orderhintWithHttpInfo()}}
\item \href{#method-WikiPageServices2Api-putRepoV1EvaluationOwnerIdWiki2WikiId}{\code{WikiPageServices2Api$putRepoV1EvaluationOwnerIdWiki2WikiId()}}
\item \href{#method-WikiPageServices2Api-putRepoV1EvaluationOwnerIdWiki2WikiIdWithHttpInfo}{\code{WikiPageServices2Api$putRepoV1EvaluationOwnerIdWiki2WikiIdWithHttpInfo()}}
\item \href{#method-WikiPageServices2Api-putRepoV1EvaluationOwnerIdWiki2WikiIdWikiVersion}{\code{WikiPageServices2Api$putRepoV1EvaluationOwnerIdWiki2WikiIdWikiVersion()}}
\item \href{#method-WikiPageServices2Api-putRepoV1EvaluationOwnerIdWiki2WikiIdWikiVersionWithHttpInfo}{\code{WikiPageServices2Api$putRepoV1EvaluationOwnerIdWiki2WikiIdWikiVersionWithHttpInfo()}}
\item \href{#method-WikiPageServices2Api-clone}{\code{WikiPageServices2Api$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServices2Api-new"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServices2Api-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new WikiPageServices2Api.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServices2Api$new(api_client)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{api_client}}{An instance of API client.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServices2Api-deleteRepoV1AccessRequirementOwnerIdWiki2WikiId"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServices2Api-deleteRepoV1AccessRequirementOwnerIdWiki2WikiId}{}}}
\subsection{Method \code{deleteRepoV1AccessRequirementOwnerIdWiki2WikiId()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServices2Api$deleteRepoV1AccessRequirementOwnerIdWiki2WikiId(
  owner_id,
  wiki_id,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Access Requirement.}

\item{\code{wiki_id}}{The ID of the WikiPage to delete.}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
void
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServices2Api-deleteRepoV1AccessRequirementOwnerIdWiki2WikiIdWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServices2Api-deleteRepoV1AccessRequirementOwnerIdWiki2WikiIdWithHttpInfo}{}}}
\subsection{Method \code{deleteRepoV1AccessRequirementOwnerIdWiki2WikiIdWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServices2Api$deleteRepoV1AccessRequirementOwnerIdWiki2WikiIdWithHttpInfo(
  owner_id,
  wiki_id,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Access Requirement.}

\item{\code{wiki_id}}{The ID of the WikiPage to delete.}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (void) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServices2Api-deleteRepoV1EntityOwnerIdWiki2WikiId"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServices2Api-deleteRepoV1EntityOwnerIdWiki2WikiId}{}}}
\subsection{Method \code{deleteRepoV1EntityOwnerIdWiki2WikiId()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServices2Api$deleteRepoV1EntityOwnerIdWiki2WikiId(
  owner_id,
  wiki_id,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Entity.}

\item{\code{wiki_id}}{The ID of the WikiPage to delete.}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
void
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServices2Api-deleteRepoV1EntityOwnerIdWiki2WikiIdWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServices2Api-deleteRepoV1EntityOwnerIdWiki2WikiIdWithHttpInfo}{}}}
\subsection{Method \code{deleteRepoV1EntityOwnerIdWiki2WikiIdWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServices2Api$deleteRepoV1EntityOwnerIdWiki2WikiIdWithHttpInfo(
  owner_id,
  wiki_id,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Entity.}

\item{\code{wiki_id}}{The ID of the WikiPage to delete.}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (void) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServices2Api-deleteRepoV1EvaluationOwnerIdWiki2WikiId"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServices2Api-deleteRepoV1EvaluationOwnerIdWiki2WikiId}{}}}
\subsection{Method \code{deleteRepoV1EvaluationOwnerIdWiki2WikiId()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServices2Api$deleteRepoV1EvaluationOwnerIdWiki2WikiId(
  owner_id,
  wiki_id,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Evaluations.}

\item{\code{wiki_id}}{The ID of the WikiPage to delete.}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
void
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServices2Api-deleteRepoV1EvaluationOwnerIdWiki2WikiIdWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServices2Api-deleteRepoV1EvaluationOwnerIdWiki2WikiIdWithHttpInfo}{}}}
\subsection{Method \code{deleteRepoV1EvaluationOwnerIdWiki2WikiIdWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServices2Api$deleteRepoV1EvaluationOwnerIdWiki2WikiIdWithHttpInfo(
  owner_id,
  wiki_id,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Evaluations.}

\item{\code{wiki_id}}{The ID of the WikiPage to delete.}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (void) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServices2Api-getRepoV1AccessRequirementOwnerIdWiki2"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServices2Api-getRepoV1AccessRequirementOwnerIdWiki2}{}}}
\subsection{Method \code{getRepoV1AccessRequirementOwnerIdWiki2()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServices2Api$getRepoV1AccessRequirementOwnerIdWiki2(
  owner_id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning AccessRequirement.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelV2WikiV2WikiPage
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServices2Api-getRepoV1AccessRequirementOwnerIdWiki2WithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServices2Api-getRepoV1AccessRequirementOwnerIdWiki2WithHttpInfo}{}}}
\subsection{Method \code{getRepoV1AccessRequirementOwnerIdWiki2WithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServices2Api$getRepoV1AccessRequirementOwnerIdWiki2WithHttpInfo(
  owner_id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning AccessRequirement.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelV2WikiV2WikiPage) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServices2Api-getRepoV1AccessRequirementOwnerIdWiki2WikiId"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServices2Api-getRepoV1AccessRequirementOwnerIdWiki2WikiId}{}}}
\subsection{Method \code{getRepoV1AccessRequirementOwnerIdWiki2WikiId()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServices2Api$getRepoV1AccessRequirementOwnerIdWiki2WikiId(
  owner_id,
  wiki_id,
  wiki_version = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Access Requirement.}

\item{\code{wiki_id}}{The ID of the WikiPage to get.}

\item{\code{wiki_version}}{(optional) No description}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelV2WikiV2WikiPage
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServices2Api-getRepoV1AccessRequirementOwnerIdWiki2WikiIdWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServices2Api-getRepoV1AccessRequirementOwnerIdWiki2WikiIdWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1AccessRequirementOwnerIdWiki2WikiIdWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServices2Api$getRepoV1AccessRequirementOwnerIdWiki2WikiIdWithHttpInfo(
  owner_id,
  wiki_id,
  wiki_version = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Access Requirement.}

\item{\code{wiki_id}}{The ID of the WikiPage to get.}

\item{\code{wiki_version}}{(optional) No description}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelV2WikiV2WikiPage) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServices2Api-getRepoV1AccessRequirementOwnerIdWiki2WikiIdAttachment"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServices2Api-getRepoV1AccessRequirementOwnerIdWiki2WikiIdAttachment}{}}}
\subsection{Method \code{getRepoV1AccessRequirementOwnerIdWiki2WikiIdAttachment()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServices2Api$getRepoV1AccessRequirementOwnerIdWiki2WikiIdAttachment(
  owner_id,
  wiki_id,
  file_name,
  redirect = NULL,
  wiki_version = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Access Requirement}

\item{\code{wiki_id}}{The ID of the WikiPage}

\item{\code{file_name}}{The name of the file to get. The file names can be found in             the FileHandles from the ,<a href=\"${GET.entity.ownerId.wiki.wikiId.attachmenthandles}\">,GET             /accessRequirement/{ownerId}/wiki/{wikiId}/attachmenthandles,</a>, method.}

\item{\code{redirect}}{(optional) When set to false, the URL will be returned as text/plain             instead of redirecting.}

\item{\code{wiki_version}}{(optional) No description}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
AnyType
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServices2Api-getRepoV1AccessRequirementOwnerIdWiki2WikiIdAttachmentWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServices2Api-getRepoV1AccessRequirementOwnerIdWiki2WikiIdAttachmentWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1AccessRequirementOwnerIdWiki2WikiIdAttachmentWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServices2Api$getRepoV1AccessRequirementOwnerIdWiki2WikiIdAttachmentWithHttpInfo(
  owner_id,
  wiki_id,
  file_name,
  redirect = NULL,
  wiki_version = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Access Requirement}

\item{\code{wiki_id}}{The ID of the WikiPage}

\item{\code{file_name}}{The name of the file to get. The file names can be found in             the FileHandles from the ,<a href=\"${GET.entity.ownerId.wiki.wikiId.attachmenthandles}\">,GET             /accessRequirement/{ownerId}/wiki/{wikiId}/attachmenthandles,</a>, method.}

\item{\code{redirect}}{(optional) When set to false, the URL will be returned as text/plain             instead of redirecting.}

\item{\code{wiki_version}}{(optional) No description}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (AnyType) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServices2Api-getRepoV1AccessRequirementOwnerIdWiki2WikiIdAttachmenthandles"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServices2Api-getRepoV1AccessRequirementOwnerIdWiki2WikiIdAttachmenthandles}{}}}
\subsection{Method \code{getRepoV1AccessRequirementOwnerIdWiki2WikiIdAttachmenthandles()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServices2Api$getRepoV1AccessRequirementOwnerIdWiki2WikiIdAttachmenthandles(
  owner_id,
  wiki_id,
  wiki_version = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Access Requirement.}

\item{\code{wiki_id}}{The ID of the WikiPage.}

\item{\code{wiki_version}}{(optional) No description}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelFileFileHandleResults
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServices2Api-getRepoV1AccessRequirementOwnerIdWiki2WikiIdAttachmenthandlesWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServices2Api-getRepoV1AccessRequirementOwnerIdWiki2WikiIdAttachmenthandlesWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1AccessRequirementOwnerIdWiki2WikiIdAttachmenthandlesWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServices2Api$getRepoV1AccessRequirementOwnerIdWiki2WikiIdAttachmenthandlesWithHttpInfo(
  owner_id,
  wiki_id,
  wiki_version = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Access Requirement.}

\item{\code{wiki_id}}{The ID of the WikiPage.}

\item{\code{wiki_version}}{(optional) No description}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelFileFileHandleResults) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServices2Api-getRepoV1AccessRequirementOwnerIdWiki2WikiIdAttachmentpreview"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServices2Api-getRepoV1AccessRequirementOwnerIdWiki2WikiIdAttachmentpreview}{}}}
\subsection{Method \code{getRepoV1AccessRequirementOwnerIdWiki2WikiIdAttachmentpreview()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServices2Api$getRepoV1AccessRequirementOwnerIdWiki2WikiIdAttachmentpreview(
  owner_id,
  wiki_id,
  file_name,
  redirect = NULL,
  wiki_version = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Access Requirement}

\item{\code{wiki_id}}{The ID of the WikiPage}

\item{\code{file_name}}{The name of the file to get. The file names can be found in             the FileHandles from the ,<a href=\"${GET.entity.ownerId.wiki.wikiId.attachmenthandles}\">,GET             /accessRequirement/{ownerId}/wiki/{wikiId}/attachmenthandles,</a>, method.}

\item{\code{redirect}}{(optional) When set to false, the URL will be returned as text/plain             instead of redirecting.}

\item{\code{wiki_version}}{(optional) No description}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
AnyType
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServices2Api-getRepoV1AccessRequirementOwnerIdWiki2WikiIdAttachmentpreviewWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServices2Api-getRepoV1AccessRequirementOwnerIdWiki2WikiIdAttachmentpreviewWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1AccessRequirementOwnerIdWiki2WikiIdAttachmentpreviewWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServices2Api$getRepoV1AccessRequirementOwnerIdWiki2WikiIdAttachmentpreviewWithHttpInfo(
  owner_id,
  wiki_id,
  file_name,
  redirect = NULL,
  wiki_version = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Access Requirement}

\item{\code{wiki_id}}{The ID of the WikiPage}

\item{\code{file_name}}{The name of the file to get. The file names can be found in             the FileHandles from the ,<a href=\"${GET.entity.ownerId.wiki.wikiId.attachmenthandles}\">,GET             /accessRequirement/{ownerId}/wiki/{wikiId}/attachmenthandles,</a>, method.}

\item{\code{redirect}}{(optional) When set to false, the URL will be returned as text/plain             instead of redirecting.}

\item{\code{wiki_version}}{(optional) No description}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (AnyType) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServices2Api-getRepoV1AccessRequirementOwnerIdWiki2WikiIdMarkdown"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServices2Api-getRepoV1AccessRequirementOwnerIdWiki2WikiIdMarkdown}{}}}
\subsection{Method \code{getRepoV1AccessRequirementOwnerIdWiki2WikiIdMarkdown()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServices2Api$getRepoV1AccessRequirementOwnerIdWiki2WikiIdMarkdown(
  owner_id,
  wiki_id,
  redirect = NULL,
  wiki_version = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{}

\item{\code{wiki_id}}{}

\item{\code{redirect}}{(optional) No description}

\item{\code{wiki_version}}{(optional) No description}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
AnyType
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServices2Api-getRepoV1AccessRequirementOwnerIdWiki2WikiIdMarkdownWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServices2Api-getRepoV1AccessRequirementOwnerIdWiki2WikiIdMarkdownWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1AccessRequirementOwnerIdWiki2WikiIdMarkdownWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServices2Api$getRepoV1AccessRequirementOwnerIdWiki2WikiIdMarkdownWithHttpInfo(
  owner_id,
  wiki_id,
  redirect = NULL,
  wiki_version = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{}

\item{\code{wiki_id}}{}

\item{\code{redirect}}{(optional) No description}

\item{\code{wiki_version}}{(optional) No description}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (AnyType) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServices2Api-getRepoV1AccessRequirementOwnerIdWiki2WikiIdWikihistory"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServices2Api-getRepoV1AccessRequirementOwnerIdWiki2WikiIdWikihistory}{}}}
\subsection{Method \code{getRepoV1AccessRequirementOwnerIdWiki2WikiIdWikihistory()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServices2Api$getRepoV1AccessRequirementOwnerIdWiki2WikiIdWikihistory(
  offset,
  limit,
  wiki_id,
  owner_id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{offset}}{The index of the pagination offset. For a page size of 10, the             first page would be at offset = 0, and the second page would             be at offset = 10.}

\item{\code{limit}}{Limits the size of the page returned. For example, a page size             of 10 require limit = 10.}

\item{\code{wiki_id}}{The ID of the WikiPage.}

\item{\code{owner_id}}{The ID of the owning Access Requirement.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
PaginatedResultsOfV2WikiHistorySnapshot
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServices2Api-getRepoV1AccessRequirementOwnerIdWiki2WikiIdWikihistoryWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServices2Api-getRepoV1AccessRequirementOwnerIdWiki2WikiIdWikihistoryWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1AccessRequirementOwnerIdWiki2WikiIdWikihistoryWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServices2Api$getRepoV1AccessRequirementOwnerIdWiki2WikiIdWikihistoryWithHttpInfo(
  offset,
  limit,
  wiki_id,
  owner_id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{offset}}{The index of the pagination offset. For a page size of 10, the             first page would be at offset = 0, and the second page would             be at offset = 10.}

\item{\code{limit}}{Limits the size of the page returned. For example, a page size             of 10 require limit = 10.}

\item{\code{wiki_id}}{The ID of the WikiPage.}

\item{\code{owner_id}}{The ID of the owning Access Requirement.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (PaginatedResultsOfV2WikiHistorySnapshot) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServices2Api-getRepoV1AccessRequirementOwnerIdWikiheadertree2"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServices2Api-getRepoV1AccessRequirementOwnerIdWikiheadertree2}{}}}
\subsection{Method \code{getRepoV1AccessRequirementOwnerIdWikiheadertree2()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServices2Api$getRepoV1AccessRequirementOwnerIdWikiheadertree2(
  owner_id,
  offset = NULL,
  limit = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Access Requirement.}

\item{\code{offset}}{(optional) The index of the pagination offset. For a page size of 10, the             first page would be at offset = 0, and the second page would             be at offset = 10.}

\item{\code{limit}}{(optional) Limits the size of the page returned. For example, a page size             of 10 require limit = 10.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
PaginatedResultsOfV2WikiHeader
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServices2Api-getRepoV1AccessRequirementOwnerIdWikiheadertree2WithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServices2Api-getRepoV1AccessRequirementOwnerIdWikiheadertree2WithHttpInfo}{}}}
\subsection{Method \code{getRepoV1AccessRequirementOwnerIdWikiheadertree2WithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServices2Api$getRepoV1AccessRequirementOwnerIdWikiheadertree2WithHttpInfo(
  owner_id,
  offset = NULL,
  limit = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Access Requirement.}

\item{\code{offset}}{(optional) The index of the pagination offset. For a page size of 10, the             first page would be at offset = 0, and the second page would             be at offset = 10.}

\item{\code{limit}}{(optional) Limits the size of the page returned. For example, a page size             of 10 require limit = 10.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (PaginatedResultsOfV2WikiHeader) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServices2Api-getRepoV1EntityOwnerIdWiki2"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServices2Api-getRepoV1EntityOwnerIdWiki2}{}}}
\subsection{Method \code{getRepoV1EntityOwnerIdWiki2()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServices2Api$getRepoV1EntityOwnerIdWiki2(
  owner_id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Entity.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelV2WikiV2WikiPage
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServices2Api-getRepoV1EntityOwnerIdWiki2WithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServices2Api-getRepoV1EntityOwnerIdWiki2WithHttpInfo}{}}}
\subsection{Method \code{getRepoV1EntityOwnerIdWiki2WithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServices2Api$getRepoV1EntityOwnerIdWiki2WithHttpInfo(
  owner_id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Entity.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelV2WikiV2WikiPage) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServices2Api-getRepoV1EntityOwnerIdWiki2WikiId"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServices2Api-getRepoV1EntityOwnerIdWiki2WikiId}{}}}
\subsection{Method \code{getRepoV1EntityOwnerIdWiki2WikiId()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServices2Api$getRepoV1EntityOwnerIdWiki2WikiId(
  owner_id,
  wiki_id,
  wiki_version = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Entity.}

\item{\code{wiki_id}}{The ID of the WikiPage to get.}

\item{\code{wiki_version}}{(optional) When included returns a specific version of a wiki.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelV2WikiV2WikiPage
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServices2Api-getRepoV1EntityOwnerIdWiki2WikiIdWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServices2Api-getRepoV1EntityOwnerIdWiki2WikiIdWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1EntityOwnerIdWiki2WikiIdWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServices2Api$getRepoV1EntityOwnerIdWiki2WikiIdWithHttpInfo(
  owner_id,
  wiki_id,
  wiki_version = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Entity.}

\item{\code{wiki_id}}{The ID of the WikiPage to get.}

\item{\code{wiki_version}}{(optional) When included returns a specific version of a wiki.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelV2WikiV2WikiPage) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServices2Api-getRepoV1EntityOwnerIdWiki2WikiIdAttachment"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServices2Api-getRepoV1EntityOwnerIdWiki2WikiIdAttachment}{}}}
\subsection{Method \code{getRepoV1EntityOwnerIdWiki2WikiIdAttachment()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServices2Api$getRepoV1EntityOwnerIdWiki2WikiIdAttachment(
  owner_id,
  wiki_id,
  file_name,
  redirect = NULL,
  wiki_version = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Entity}

\item{\code{wiki_id}}{The ID of the WikiPage}

\item{\code{file_name}}{The name of the file to get. The file names can be found in             the FileHandles from the ,<a href=\"${GET.entity.ownerId.wiki.wikiId.attachmenthandles}\">,GET             /entity/{ownerId}/wiki/{wikiId}/attachmenthandles,</a>, method.}

\item{\code{redirect}}{(optional) When set to false, the URL will be returned as text/plain             instead of redirecting.}

\item{\code{wiki_version}}{(optional) No description}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
AnyType
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServices2Api-getRepoV1EntityOwnerIdWiki2WikiIdAttachmentWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServices2Api-getRepoV1EntityOwnerIdWiki2WikiIdAttachmentWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1EntityOwnerIdWiki2WikiIdAttachmentWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServices2Api$getRepoV1EntityOwnerIdWiki2WikiIdAttachmentWithHttpInfo(
  owner_id,
  wiki_id,
  file_name,
  redirect = NULL,
  wiki_version = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Entity}

\item{\code{wiki_id}}{The ID of the WikiPage}

\item{\code{file_name}}{The name of the file to get. The file names can be found in             the FileHandles from the ,<a href=\"${GET.entity.ownerId.wiki.wikiId.attachmenthandles}\">,GET             /entity/{ownerId}/wiki/{wikiId}/attachmenthandles,</a>, method.}

\item{\code{redirect}}{(optional) When set to false, the URL will be returned as text/plain             instead of redirecting.}

\item{\code{wiki_version}}{(optional) No description}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (AnyType) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServices2Api-getRepoV1EntityOwnerIdWiki2WikiIdAttachmenthandles"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServices2Api-getRepoV1EntityOwnerIdWiki2WikiIdAttachmenthandles}{}}}
\subsection{Method \code{getRepoV1EntityOwnerIdWiki2WikiIdAttachmenthandles()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServices2Api$getRepoV1EntityOwnerIdWiki2WikiIdAttachmenthandles(
  owner_id,
  wiki_id,
  wiki_version = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Entity.}

\item{\code{wiki_id}}{The ID of the WikiPage.}

\item{\code{wiki_version}}{(optional) No description}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelFileFileHandleResults
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServices2Api-getRepoV1EntityOwnerIdWiki2WikiIdAttachmenthandlesWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServices2Api-getRepoV1EntityOwnerIdWiki2WikiIdAttachmenthandlesWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1EntityOwnerIdWiki2WikiIdAttachmenthandlesWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServices2Api$getRepoV1EntityOwnerIdWiki2WikiIdAttachmenthandlesWithHttpInfo(
  owner_id,
  wiki_id,
  wiki_version = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Entity.}

\item{\code{wiki_id}}{The ID of the WikiPage.}

\item{\code{wiki_version}}{(optional) No description}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelFileFileHandleResults) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServices2Api-getRepoV1EntityOwnerIdWiki2WikiIdAttachmentpreview"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServices2Api-getRepoV1EntityOwnerIdWiki2WikiIdAttachmentpreview}{}}}
\subsection{Method \code{getRepoV1EntityOwnerIdWiki2WikiIdAttachmentpreview()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServices2Api$getRepoV1EntityOwnerIdWiki2WikiIdAttachmentpreview(
  owner_id,
  wiki_id,
  file_name,
  redirect = NULL,
  wiki_version = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Entity}

\item{\code{wiki_id}}{The ID of the WikiPage}

\item{\code{file_name}}{The name of the file to get. The file names can be found in             the FileHandles from the ,<a href=\"${GET.entity.ownerId.wiki.wikiId.attachmenthandles}\">,GET             /entity/{ownerId}/wiki/{wikiId}/attachmenthandles,</a>, method.}

\item{\code{redirect}}{(optional) When set to false, the URL will be returned as text/plain             instead of redirecting.}

\item{\code{wiki_version}}{(optional) No description}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
AnyType
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServices2Api-getRepoV1EntityOwnerIdWiki2WikiIdAttachmentpreviewWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServices2Api-getRepoV1EntityOwnerIdWiki2WikiIdAttachmentpreviewWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1EntityOwnerIdWiki2WikiIdAttachmentpreviewWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServices2Api$getRepoV1EntityOwnerIdWiki2WikiIdAttachmentpreviewWithHttpInfo(
  owner_id,
  wiki_id,
  file_name,
  redirect = NULL,
  wiki_version = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Entity}

\item{\code{wiki_id}}{The ID of the WikiPage}

\item{\code{file_name}}{The name of the file to get. The file names can be found in             the FileHandles from the ,<a href=\"${GET.entity.ownerId.wiki.wikiId.attachmenthandles}\">,GET             /entity/{ownerId}/wiki/{wikiId}/attachmenthandles,</a>, method.}

\item{\code{redirect}}{(optional) When set to false, the URL will be returned as text/plain             instead of redirecting.}

\item{\code{wiki_version}}{(optional) No description}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (AnyType) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServices2Api-getRepoV1EntityOwnerIdWiki2WikiIdMarkdown"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServices2Api-getRepoV1EntityOwnerIdWiki2WikiIdMarkdown}{}}}
\subsection{Method \code{getRepoV1EntityOwnerIdWiki2WikiIdMarkdown()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServices2Api$getRepoV1EntityOwnerIdWiki2WikiIdMarkdown(
  owner_id,
  wiki_id,
  redirect = NULL,
  wiki_version = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{}

\item{\code{wiki_id}}{}

\item{\code{redirect}}{(optional) No description}

\item{\code{wiki_version}}{(optional) No description}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
AnyType
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServices2Api-getRepoV1EntityOwnerIdWiki2WikiIdMarkdownWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServices2Api-getRepoV1EntityOwnerIdWiki2WikiIdMarkdownWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1EntityOwnerIdWiki2WikiIdMarkdownWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServices2Api$getRepoV1EntityOwnerIdWiki2WikiIdMarkdownWithHttpInfo(
  owner_id,
  wiki_id,
  redirect = NULL,
  wiki_version = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{}

\item{\code{wiki_id}}{}

\item{\code{redirect}}{(optional) No description}

\item{\code{wiki_version}}{(optional) No description}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (AnyType) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServices2Api-getRepoV1EntityOwnerIdWiki2WikiIdWikihistory"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServices2Api-getRepoV1EntityOwnerIdWiki2WikiIdWikihistory}{}}}
\subsection{Method \code{getRepoV1EntityOwnerIdWiki2WikiIdWikihistory()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServices2Api$getRepoV1EntityOwnerIdWiki2WikiIdWikihistory(
  offset,
  limit,
  wiki_id,
  owner_id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{offset}}{The index of the pagination offset. For a page size of 10, the             first page would be at offset = 0, and the second page would             be at offset = 10.}

\item{\code{limit}}{Limits the size of the page returned. For example, a page size             of 10 require limit = 10. Limit must be 50 or less.}

\item{\code{wiki_id}}{The ID of the WikiPage.}

\item{\code{owner_id}}{The ID of the owning Entity.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
PaginatedResultsOfV2WikiHistorySnapshot
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServices2Api-getRepoV1EntityOwnerIdWiki2WikiIdWikihistoryWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServices2Api-getRepoV1EntityOwnerIdWiki2WikiIdWikihistoryWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1EntityOwnerIdWiki2WikiIdWikihistoryWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServices2Api$getRepoV1EntityOwnerIdWiki2WikiIdWikihistoryWithHttpInfo(
  offset,
  limit,
  wiki_id,
  owner_id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{offset}}{The index of the pagination offset. For a page size of 10, the             first page would be at offset = 0, and the second page would             be at offset = 10.}

\item{\code{limit}}{Limits the size of the page returned. For example, a page size             of 10 require limit = 10. Limit must be 50 or less.}

\item{\code{wiki_id}}{The ID of the WikiPage.}

\item{\code{owner_id}}{The ID of the owning Entity.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (PaginatedResultsOfV2WikiHistorySnapshot) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServices2Api-getRepoV1EntityOwnerIdWiki2orderhint"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServices2Api-getRepoV1EntityOwnerIdWiki2orderhint}{}}}
\subsection{Method \code{getRepoV1EntityOwnerIdWiki2orderhint()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServices2Api$getRepoV1EntityOwnerIdWiki2orderhint(
  owner_id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Entity.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelV2WikiV2WikiOrderHint
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServices2Api-getRepoV1EntityOwnerIdWiki2orderhintWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServices2Api-getRepoV1EntityOwnerIdWiki2orderhintWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1EntityOwnerIdWiki2orderhintWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServices2Api$getRepoV1EntityOwnerIdWiki2orderhintWithHttpInfo(
  owner_id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Entity.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelV2WikiV2WikiOrderHint) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServices2Api-getRepoV1EntityOwnerIdWikiheadertree2"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServices2Api-getRepoV1EntityOwnerIdWikiheadertree2}{}}}
\subsection{Method \code{getRepoV1EntityOwnerIdWikiheadertree2()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServices2Api$getRepoV1EntityOwnerIdWikiheadertree2(
  owner_id,
  offset = NULL,
  limit = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Entity.}

\item{\code{offset}}{(optional) The index of the pagination offset. For a page size of 10, the             first page would be at offset = 0, and the second page would             be at offset = 10.}

\item{\code{limit}}{(optional) Limits the size of the page returned. For example, a page size             of 10 require limit = 10. Limit must be 50 or less.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
PaginatedResultsOfV2WikiHeader
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServices2Api-getRepoV1EntityOwnerIdWikiheadertree2WithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServices2Api-getRepoV1EntityOwnerIdWikiheadertree2WithHttpInfo}{}}}
\subsection{Method \code{getRepoV1EntityOwnerIdWikiheadertree2WithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServices2Api$getRepoV1EntityOwnerIdWikiheadertree2WithHttpInfo(
  owner_id,
  offset = NULL,
  limit = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Entity.}

\item{\code{offset}}{(optional) The index of the pagination offset. For a page size of 10, the             first page would be at offset = 0, and the second page would             be at offset = 10.}

\item{\code{limit}}{(optional) Limits the size of the page returned. For example, a page size             of 10 require limit = 10. Limit must be 50 or less.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (PaginatedResultsOfV2WikiHeader) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServices2Api-getRepoV1EvaluationOwnerIdWiki2"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServices2Api-getRepoV1EvaluationOwnerIdWiki2}{}}}
\subsection{Method \code{getRepoV1EvaluationOwnerIdWiki2()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServices2Api$getRepoV1EvaluationOwnerIdWiki2(
  owner_id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Evaluation.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelV2WikiV2WikiPage
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServices2Api-getRepoV1EvaluationOwnerIdWiki2WithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServices2Api-getRepoV1EvaluationOwnerIdWiki2WithHttpInfo}{}}}
\subsection{Method \code{getRepoV1EvaluationOwnerIdWiki2WithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServices2Api$getRepoV1EvaluationOwnerIdWiki2WithHttpInfo(
  owner_id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Evaluation.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelV2WikiV2WikiPage) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServices2Api-getRepoV1EvaluationOwnerIdWiki2WikiId"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServices2Api-getRepoV1EvaluationOwnerIdWiki2WikiId}{}}}
\subsection{Method \code{getRepoV1EvaluationOwnerIdWiki2WikiId()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServices2Api$getRepoV1EvaluationOwnerIdWiki2WikiId(
  owner_id,
  wiki_id,
  wiki_version = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Evaluation.}

\item{\code{wiki_id}}{The ID of the WikiPage to get.}

\item{\code{wiki_version}}{(optional) No description}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelV2WikiV2WikiPage
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServices2Api-getRepoV1EvaluationOwnerIdWiki2WikiIdWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServices2Api-getRepoV1EvaluationOwnerIdWiki2WikiIdWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1EvaluationOwnerIdWiki2WikiIdWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServices2Api$getRepoV1EvaluationOwnerIdWiki2WikiIdWithHttpInfo(
  owner_id,
  wiki_id,
  wiki_version = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Evaluation.}

\item{\code{wiki_id}}{The ID of the WikiPage to get.}

\item{\code{wiki_version}}{(optional) No description}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelV2WikiV2WikiPage) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServices2Api-getRepoV1EvaluationOwnerIdWiki2WikiIdAttachment"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServices2Api-getRepoV1EvaluationOwnerIdWiki2WikiIdAttachment}{}}}
\subsection{Method \code{getRepoV1EvaluationOwnerIdWiki2WikiIdAttachment()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServices2Api$getRepoV1EvaluationOwnerIdWiki2WikiIdAttachment(
  owner_id,
  wiki_id,
  file_name,
  redirect = NULL,
  wiki_version = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Evaluation}

\item{\code{wiki_id}}{The ID of the WikiPage}

\item{\code{file_name}}{The name of the file to get. The file names can be found in             the FileHandles from the ,<a href=\"${GET.evaluation.ownerId.wiki.wikiId.attachmenthandles}\">,GET /evaluation/{ownerId}/wiki/{wikiId}/attachmenthandles,</a>,             method.}

\item{\code{redirect}}{(optional) When set to false, the URL will be returned as text/plain             instead of redirecting.}

\item{\code{wiki_version}}{(optional) No description}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
AnyType
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServices2Api-getRepoV1EvaluationOwnerIdWiki2WikiIdAttachmentWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServices2Api-getRepoV1EvaluationOwnerIdWiki2WikiIdAttachmentWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1EvaluationOwnerIdWiki2WikiIdAttachmentWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServices2Api$getRepoV1EvaluationOwnerIdWiki2WikiIdAttachmentWithHttpInfo(
  owner_id,
  wiki_id,
  file_name,
  redirect = NULL,
  wiki_version = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Evaluation}

\item{\code{wiki_id}}{The ID of the WikiPage}

\item{\code{file_name}}{The name of the file to get. The file names can be found in             the FileHandles from the ,<a href=\"${GET.evaluation.ownerId.wiki.wikiId.attachmenthandles}\">,GET /evaluation/{ownerId}/wiki/{wikiId}/attachmenthandles,</a>,             method.}

\item{\code{redirect}}{(optional) When set to false, the URL will be returned as text/plain             instead of redirecting.}

\item{\code{wiki_version}}{(optional) No description}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (AnyType) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServices2Api-getRepoV1EvaluationOwnerIdWiki2WikiIdAttachmenthandles"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServices2Api-getRepoV1EvaluationOwnerIdWiki2WikiIdAttachmenthandles}{}}}
\subsection{Method \code{getRepoV1EvaluationOwnerIdWiki2WikiIdAttachmenthandles()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServices2Api$getRepoV1EvaluationOwnerIdWiki2WikiIdAttachmenthandles(
  owner_id,
  wiki_id,
  wiki_version = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Evaluation.}

\item{\code{wiki_id}}{The ID of the WikiPage.}

\item{\code{wiki_version}}{(optional) No description}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelFileFileHandleResults
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServices2Api-getRepoV1EvaluationOwnerIdWiki2WikiIdAttachmenthandlesWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServices2Api-getRepoV1EvaluationOwnerIdWiki2WikiIdAttachmenthandlesWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1EvaluationOwnerIdWiki2WikiIdAttachmenthandlesWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServices2Api$getRepoV1EvaluationOwnerIdWiki2WikiIdAttachmenthandlesWithHttpInfo(
  owner_id,
  wiki_id,
  wiki_version = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Evaluation.}

\item{\code{wiki_id}}{The ID of the WikiPage.}

\item{\code{wiki_version}}{(optional) No description}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelFileFileHandleResults) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServices2Api-getRepoV1EvaluationOwnerIdWiki2WikiIdAttachmentpreview"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServices2Api-getRepoV1EvaluationOwnerIdWiki2WikiIdAttachmentpreview}{}}}
\subsection{Method \code{getRepoV1EvaluationOwnerIdWiki2WikiIdAttachmentpreview()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServices2Api$getRepoV1EvaluationOwnerIdWiki2WikiIdAttachmentpreview(
  owner_id,
  wiki_id,
  file_name,
  redirect = NULL,
  wiki_version = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Evaluation}

\item{\code{wiki_id}}{The ID of the WikiPage}

\item{\code{file_name}}{The name of the file to get. The file names can be found in             the FileHandles from the ,<a href=\"${GET.evaluation.ownerId.wiki.wikiId.attachmenthandles}\">,GET /evaluation/{ownerId}/wiki/{wikiId}/attachmenthandles,</a>,             method.}

\item{\code{redirect}}{(optional) When set to false, the URL will be returned as text/plain             instead of redirecting.}

\item{\code{wiki_version}}{(optional) No description}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
AnyType
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServices2Api-getRepoV1EvaluationOwnerIdWiki2WikiIdAttachmentpreviewWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServices2Api-getRepoV1EvaluationOwnerIdWiki2WikiIdAttachmentpreviewWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1EvaluationOwnerIdWiki2WikiIdAttachmentpreviewWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServices2Api$getRepoV1EvaluationOwnerIdWiki2WikiIdAttachmentpreviewWithHttpInfo(
  owner_id,
  wiki_id,
  file_name,
  redirect = NULL,
  wiki_version = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Evaluation}

\item{\code{wiki_id}}{The ID of the WikiPage}

\item{\code{file_name}}{The name of the file to get. The file names can be found in             the FileHandles from the ,<a href=\"${GET.evaluation.ownerId.wiki.wikiId.attachmenthandles}\">,GET /evaluation/{ownerId}/wiki/{wikiId}/attachmenthandles,</a>,             method.}

\item{\code{redirect}}{(optional) When set to false, the URL will be returned as text/plain             instead of redirecting.}

\item{\code{wiki_version}}{(optional) No description}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (AnyType) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServices2Api-getRepoV1EvaluationOwnerIdWiki2WikiIdMarkdown"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServices2Api-getRepoV1EvaluationOwnerIdWiki2WikiIdMarkdown}{}}}
\subsection{Method \code{getRepoV1EvaluationOwnerIdWiki2WikiIdMarkdown()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServices2Api$getRepoV1EvaluationOwnerIdWiki2WikiIdMarkdown(
  owner_id,
  wiki_id,
  redirect = NULL,
  wiki_version = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{}

\item{\code{wiki_id}}{}

\item{\code{redirect}}{(optional) No description}

\item{\code{wiki_version}}{(optional) No description}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
AnyType
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServices2Api-getRepoV1EvaluationOwnerIdWiki2WikiIdMarkdownWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServices2Api-getRepoV1EvaluationOwnerIdWiki2WikiIdMarkdownWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1EvaluationOwnerIdWiki2WikiIdMarkdownWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServices2Api$getRepoV1EvaluationOwnerIdWiki2WikiIdMarkdownWithHttpInfo(
  owner_id,
  wiki_id,
  redirect = NULL,
  wiki_version = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{}

\item{\code{wiki_id}}{}

\item{\code{redirect}}{(optional) No description}

\item{\code{wiki_version}}{(optional) No description}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (AnyType) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServices2Api-getRepoV1EvaluationOwnerIdWiki2WikiIdWikihistory"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServices2Api-getRepoV1EvaluationOwnerIdWiki2WikiIdWikihistory}{}}}
\subsection{Method \code{getRepoV1EvaluationOwnerIdWiki2WikiIdWikihistory()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServices2Api$getRepoV1EvaluationOwnerIdWiki2WikiIdWikihistory(
  offset,
  limit,
  wiki_id,
  owner_id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{offset}}{The index of the pagination offset. For a page size of 10, the             first page would be at offset = 0, and the second page would             be at offset = 10.}

\item{\code{limit}}{Limits the size of the page returned. For example, a page size             of 10 require limit = 10.}

\item{\code{wiki_id}}{The ID of the WikiPage.}

\item{\code{owner_id}}{The ID of the owning Entity.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
PaginatedResultsOfV2WikiHistorySnapshot
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServices2Api-getRepoV1EvaluationOwnerIdWiki2WikiIdWikihistoryWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServices2Api-getRepoV1EvaluationOwnerIdWiki2WikiIdWikihistoryWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1EvaluationOwnerIdWiki2WikiIdWikihistoryWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServices2Api$getRepoV1EvaluationOwnerIdWiki2WikiIdWikihistoryWithHttpInfo(
  offset,
  limit,
  wiki_id,
  owner_id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{offset}}{The index of the pagination offset. For a page size of 10, the             first page would be at offset = 0, and the second page would             be at offset = 10.}

\item{\code{limit}}{Limits the size of the page returned. For example, a page size             of 10 require limit = 10.}

\item{\code{wiki_id}}{The ID of the WikiPage.}

\item{\code{owner_id}}{The ID of the owning Entity.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (PaginatedResultsOfV2WikiHistorySnapshot) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServices2Api-getRepoV1EvaluationOwnerIdWikiheadertree2"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServices2Api-getRepoV1EvaluationOwnerIdWikiheadertree2}{}}}
\subsection{Method \code{getRepoV1EvaluationOwnerIdWikiheadertree2()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServices2Api$getRepoV1EvaluationOwnerIdWikiheadertree2(
  owner_id,
  offset = NULL,
  limit = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Evaluation.}

\item{\code{offset}}{(optional) The index of the pagination offset. For a page size of 10, the             first page would be at offset = 0, and the second page would             be at offset = 10.}

\item{\code{limit}}{(optional) Limits the size of the page returned. For example, a page size             of 10 require limit = 10.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
PaginatedResultsOfV2WikiHeader
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServices2Api-getRepoV1EvaluationOwnerIdWikiheadertree2WithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServices2Api-getRepoV1EvaluationOwnerIdWikiheadertree2WithHttpInfo}{}}}
\subsection{Method \code{getRepoV1EvaluationOwnerIdWikiheadertree2WithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServices2Api$getRepoV1EvaluationOwnerIdWikiheadertree2WithHttpInfo(
  owner_id,
  offset = NULL,
  limit = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Evaluation.}

\item{\code{offset}}{(optional) The index of the pagination offset. For a page size of 10, the             first page would be at offset = 0, and the second page would             be at offset = 10.}

\item{\code{limit}}{(optional) Limits the size of the page returned. For example, a page size             of 10 require limit = 10.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (PaginatedResultsOfV2WikiHeader) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServices2Api-postRepoV1AccessRequirementOwnerIdWiki2"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServices2Api-postRepoV1AccessRequirementOwnerIdWiki2}{}}}
\subsection{Method \code{postRepoV1AccessRequirementOwnerIdWiki2()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServices2Api$postRepoV1AccessRequirementOwnerIdWiki2(
  owner_id,
  org_sagebionetworks_repo_model_v2_wiki_v2_wiki_page,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owner AccessRequirement.}

\item{\code{org_sagebionetworks_repo_model_v2_wiki_v2_wiki_page}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelV2WikiV2WikiPage
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServices2Api-postRepoV1AccessRequirementOwnerIdWiki2WithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServices2Api-postRepoV1AccessRequirementOwnerIdWiki2WithHttpInfo}{}}}
\subsection{Method \code{postRepoV1AccessRequirementOwnerIdWiki2WithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServices2Api$postRepoV1AccessRequirementOwnerIdWiki2WithHttpInfo(
  owner_id,
  org_sagebionetworks_repo_model_v2_wiki_v2_wiki_page,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owner AccessRequirement.}

\item{\code{org_sagebionetworks_repo_model_v2_wiki_v2_wiki_page}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelV2WikiV2WikiPage) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServices2Api-postRepoV1EntityOwnerIdWiki2"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServices2Api-postRepoV1EntityOwnerIdWiki2}{}}}
\subsection{Method \code{postRepoV1EntityOwnerIdWiki2()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServices2Api$postRepoV1EntityOwnerIdWiki2(
  owner_id,
  org_sagebionetworks_repo_model_v2_wiki_v2_wiki_page,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owner Entity.}

\item{\code{org_sagebionetworks_repo_model_v2_wiki_v2_wiki_page}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelV2WikiV2WikiPage
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServices2Api-postRepoV1EntityOwnerIdWiki2WithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServices2Api-postRepoV1EntityOwnerIdWiki2WithHttpInfo}{}}}
\subsection{Method \code{postRepoV1EntityOwnerIdWiki2WithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServices2Api$postRepoV1EntityOwnerIdWiki2WithHttpInfo(
  owner_id,
  org_sagebionetworks_repo_model_v2_wiki_v2_wiki_page,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owner Entity.}

\item{\code{org_sagebionetworks_repo_model_v2_wiki_v2_wiki_page}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelV2WikiV2WikiPage) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServices2Api-postRepoV1EvaluationOwnerIdWiki2"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServices2Api-postRepoV1EvaluationOwnerIdWiki2}{}}}
\subsection{Method \code{postRepoV1EvaluationOwnerIdWiki2()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServices2Api$postRepoV1EvaluationOwnerIdWiki2(
  owner_id,
  org_sagebionetworks_repo_model_v2_wiki_v2_wiki_page,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owner Evaluation.}

\item{\code{org_sagebionetworks_repo_model_v2_wiki_v2_wiki_page}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelV2WikiV2WikiPage
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServices2Api-postRepoV1EvaluationOwnerIdWiki2WithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServices2Api-postRepoV1EvaluationOwnerIdWiki2WithHttpInfo}{}}}
\subsection{Method \code{postRepoV1EvaluationOwnerIdWiki2WithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServices2Api$postRepoV1EvaluationOwnerIdWiki2WithHttpInfo(
  owner_id,
  org_sagebionetworks_repo_model_v2_wiki_v2_wiki_page,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owner Evaluation.}

\item{\code{org_sagebionetworks_repo_model_v2_wiki_v2_wiki_page}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelV2WikiV2WikiPage) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServices2Api-putRepoV1AccessRequirementOwnerIdWiki2WikiId"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServices2Api-putRepoV1AccessRequirementOwnerIdWiki2WikiId}{}}}
\subsection{Method \code{putRepoV1AccessRequirementOwnerIdWiki2WikiId()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServices2Api$putRepoV1AccessRequirementOwnerIdWiki2WikiId(
  owner_id,
  wiki_id,
  org_sagebionetworks_repo_model_v2_wiki_v2_wiki_page,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Access Requirement.}

\item{\code{wiki_id}}{The ID of the WikiPage to update.}

\item{\code{org_sagebionetworks_repo_model_v2_wiki_v2_wiki_page}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelV2WikiV2WikiPage
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServices2Api-putRepoV1AccessRequirementOwnerIdWiki2WikiIdWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServices2Api-putRepoV1AccessRequirementOwnerIdWiki2WikiIdWithHttpInfo}{}}}
\subsection{Method \code{putRepoV1AccessRequirementOwnerIdWiki2WikiIdWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServices2Api$putRepoV1AccessRequirementOwnerIdWiki2WikiIdWithHttpInfo(
  owner_id,
  wiki_id,
  org_sagebionetworks_repo_model_v2_wiki_v2_wiki_page,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Access Requirement.}

\item{\code{wiki_id}}{The ID of the WikiPage to update.}

\item{\code{org_sagebionetworks_repo_model_v2_wiki_v2_wiki_page}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelV2WikiV2WikiPage) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServices2Api-putRepoV1AccessRequirementOwnerIdWiki2WikiIdWikiVersion"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServices2Api-putRepoV1AccessRequirementOwnerIdWiki2WikiIdWikiVersion}{}}}
\subsection{Method \code{putRepoV1AccessRequirementOwnerIdWiki2WikiIdWikiVersion()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServices2Api$putRepoV1AccessRequirementOwnerIdWiki2WikiIdWikiVersion(
  wiki_version,
  owner_id,
  wiki_id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{wiki_version}}{}

\item{\code{owner_id}}{The ID of the owning Access Requirement.}

\item{\code{wiki_id}}{The ID of the WikiPage to update.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelV2WikiV2WikiPage
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServices2Api-putRepoV1AccessRequirementOwnerIdWiki2WikiIdWikiVersionWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServices2Api-putRepoV1AccessRequirementOwnerIdWiki2WikiIdWikiVersionWithHttpInfo}{}}}
\subsection{Method \code{putRepoV1AccessRequirementOwnerIdWiki2WikiIdWikiVersionWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServices2Api$putRepoV1AccessRequirementOwnerIdWiki2WikiIdWikiVersionWithHttpInfo(
  wiki_version,
  owner_id,
  wiki_id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{wiki_version}}{}

\item{\code{owner_id}}{The ID of the owning Access Requirement.}

\item{\code{wiki_id}}{The ID of the WikiPage to update.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelV2WikiV2WikiPage) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServices2Api-putRepoV1EntityOwnerIdWiki2WikiId"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServices2Api-putRepoV1EntityOwnerIdWiki2WikiId}{}}}
\subsection{Method \code{putRepoV1EntityOwnerIdWiki2WikiId()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServices2Api$putRepoV1EntityOwnerIdWiki2WikiId(
  owner_id,
  wiki_id,
  org_sagebionetworks_repo_model_v2_wiki_v2_wiki_page,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Entity.}

\item{\code{wiki_id}}{The ID of the WikiPage to update.}

\item{\code{org_sagebionetworks_repo_model_v2_wiki_v2_wiki_page}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelV2WikiV2WikiPage
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServices2Api-putRepoV1EntityOwnerIdWiki2WikiIdWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServices2Api-putRepoV1EntityOwnerIdWiki2WikiIdWithHttpInfo}{}}}
\subsection{Method \code{putRepoV1EntityOwnerIdWiki2WikiIdWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServices2Api$putRepoV1EntityOwnerIdWiki2WikiIdWithHttpInfo(
  owner_id,
  wiki_id,
  org_sagebionetworks_repo_model_v2_wiki_v2_wiki_page,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Entity.}

\item{\code{wiki_id}}{The ID of the WikiPage to update.}

\item{\code{org_sagebionetworks_repo_model_v2_wiki_v2_wiki_page}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelV2WikiV2WikiPage) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServices2Api-putRepoV1EntityOwnerIdWiki2WikiIdWikiVersion"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServices2Api-putRepoV1EntityOwnerIdWiki2WikiIdWikiVersion}{}}}
\subsection{Method \code{putRepoV1EntityOwnerIdWiki2WikiIdWikiVersion()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServices2Api$putRepoV1EntityOwnerIdWiki2WikiIdWikiVersion(
  wiki_version,
  owner_id,
  wiki_id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{wiki_version}}{}

\item{\code{owner_id}}{The ID of the owning Entity.}

\item{\code{wiki_id}}{The ID of the WikiPage to update.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelV2WikiV2WikiPage
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServices2Api-putRepoV1EntityOwnerIdWiki2WikiIdWikiVersionWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServices2Api-putRepoV1EntityOwnerIdWiki2WikiIdWikiVersionWithHttpInfo}{}}}
\subsection{Method \code{putRepoV1EntityOwnerIdWiki2WikiIdWikiVersionWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServices2Api$putRepoV1EntityOwnerIdWiki2WikiIdWikiVersionWithHttpInfo(
  wiki_version,
  owner_id,
  wiki_id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{wiki_version}}{}

\item{\code{owner_id}}{The ID of the owning Entity.}

\item{\code{wiki_id}}{The ID of the WikiPage to update.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelV2WikiV2WikiPage) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServices2Api-putRepoV1EntityOwnerIdWiki2orderhint"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServices2Api-putRepoV1EntityOwnerIdWiki2orderhint}{}}}
\subsection{Method \code{putRepoV1EntityOwnerIdWiki2orderhint()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServices2Api$putRepoV1EntityOwnerIdWiki2orderhint(
  owner_id,
  org_sagebionetworks_repo_model_v2_wiki_v2_wiki_order_hint,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{}

\item{\code{org_sagebionetworks_repo_model_v2_wiki_v2_wiki_order_hint}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelV2WikiV2WikiOrderHint
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServices2Api-putRepoV1EntityOwnerIdWiki2orderhintWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServices2Api-putRepoV1EntityOwnerIdWiki2orderhintWithHttpInfo}{}}}
\subsection{Method \code{putRepoV1EntityOwnerIdWiki2orderhintWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServices2Api$putRepoV1EntityOwnerIdWiki2orderhintWithHttpInfo(
  owner_id,
  org_sagebionetworks_repo_model_v2_wiki_v2_wiki_order_hint,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{}

\item{\code{org_sagebionetworks_repo_model_v2_wiki_v2_wiki_order_hint}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelV2WikiV2WikiOrderHint) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServices2Api-putRepoV1EvaluationOwnerIdWiki2WikiId"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServices2Api-putRepoV1EvaluationOwnerIdWiki2WikiId}{}}}
\subsection{Method \code{putRepoV1EvaluationOwnerIdWiki2WikiId()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServices2Api$putRepoV1EvaluationOwnerIdWiki2WikiId(
  owner_id,
  wiki_id,
  org_sagebionetworks_repo_model_v2_wiki_v2_wiki_page,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Evaluation.}

\item{\code{wiki_id}}{The ID of the WikiPage to update.}

\item{\code{org_sagebionetworks_repo_model_v2_wiki_v2_wiki_page}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelV2WikiV2WikiPage
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServices2Api-putRepoV1EvaluationOwnerIdWiki2WikiIdWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServices2Api-putRepoV1EvaluationOwnerIdWiki2WikiIdWithHttpInfo}{}}}
\subsection{Method \code{putRepoV1EvaluationOwnerIdWiki2WikiIdWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServices2Api$putRepoV1EvaluationOwnerIdWiki2WikiIdWithHttpInfo(
  owner_id,
  wiki_id,
  org_sagebionetworks_repo_model_v2_wiki_v2_wiki_page,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Evaluation.}

\item{\code{wiki_id}}{The ID of the WikiPage to update.}

\item{\code{org_sagebionetworks_repo_model_v2_wiki_v2_wiki_page}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelV2WikiV2WikiPage) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServices2Api-putRepoV1EvaluationOwnerIdWiki2WikiIdWikiVersion"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServices2Api-putRepoV1EvaluationOwnerIdWiki2WikiIdWikiVersion}{}}}
\subsection{Method \code{putRepoV1EvaluationOwnerIdWiki2WikiIdWikiVersion()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServices2Api$putRepoV1EvaluationOwnerIdWiki2WikiIdWikiVersion(
  wiki_version,
  owner_id,
  wiki_id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{wiki_version}}{}

\item{\code{owner_id}}{The ID of the owning Entity.}

\item{\code{wiki_id}}{The ID of the WikiPage to update.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelV2WikiV2WikiPage
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServices2Api-putRepoV1EvaluationOwnerIdWiki2WikiIdWikiVersionWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServices2Api-putRepoV1EvaluationOwnerIdWiki2WikiIdWikiVersionWithHttpInfo}{}}}
\subsection{Method \code{putRepoV1EvaluationOwnerIdWiki2WikiIdWikiVersionWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServices2Api$putRepoV1EvaluationOwnerIdWiki2WikiIdWikiVersionWithHttpInfo(
  wiki_version,
  owner_id,
  wiki_id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{wiki_version}}{}

\item{\code{owner_id}}{The ID of the owning Entity.}

\item{\code{wiki_id}}{The ID of the WikiPage to update.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelV2WikiV2WikiPage) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServices2Api-clone"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServices2Api-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServices2Api$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
