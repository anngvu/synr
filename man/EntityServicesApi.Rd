% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/entity_services_api.R
\docType{class}
\name{EntityServicesApi}
\alias{EntityServicesApi}
\title{EntityServices operations}
\format{
An \code{R6Class} generator object
}
\description{
EntityServicesApi
}
\details{
Synapse REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: v1
Generated by: https://openapi-generator.tech
}
\section{Methods}{

\describe{
\strong{ deleteRepoV1EntityId } \emph{  }

\itemize{
\item \emph{ @param } id character
\item \emph{ @param } skip_trash_can character


\item status code : 204 | Void


\item response headers :

\tabular{ll}{
}
}

\strong{ deleteRepoV1EntityIdAcl } \emph{  }

\itemize{
\item \emph{ @param } id character


\item status code : 204 | Void


\item response headers :

\tabular{ll}{
}
}

\strong{ deleteRepoV1EntityIdGeneratedBy } \emph{  }

\itemize{
\item \emph{ @param } id character


\item status code : 204 | The requested Activity if it exists.


\item response headers :

\tabular{ll}{
}
}

\strong{ deleteRepoV1EntityIdSchemaBinding } \emph{  }

\itemize{
\item \emph{ @param } id character


\item status code : 204 | Void


\item response headers :

\tabular{ll}{
}
}

\strong{ deleteRepoV1EntityIdVersionVersionNumber } \emph{  }

\itemize{
\item \emph{ @param } id character
\item \emph{ @param } version_number numeric


\item status code : 204 | Void


\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1EntityAliasAlias } \emph{  }

\itemize{
\item \emph{ @param } alias character
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelEntityId} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelEntityId
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1EntityDockerRepoId } \emph{  }

\itemize{
\item \emph{ @param } repository_name character
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelEntityId} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelEntityId
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1EntityId } \emph{  }

\itemize{
\item \emph{ @param } id character
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelEntity} \cr


\item status code : 200 | The requested Entity if it exists.

\item return type : OrgSagebionetworksRepoModelEntity
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1EntityIdAccess } \emph{  }

\itemize{
\item \emph{ @param } id character
\item \emph{ @param } access_type character


\item status code : 200 | Auto-generated description

\item return type : character
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1EntityIdAcl } \emph{  }

\itemize{
\item \emph{ @param } id character
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelAccessControlList} \cr


\item status code : 200 | The entity ACL.

\item return type : OrgSagebionetworksRepoModelAccessControlList
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1EntityIdActionsDownload } \emph{  }

\itemize{
\item \emph{ @param } id character
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelDownloadActionRequiredList} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelDownloadActionRequiredList
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1EntityIdAnnotations2 } \emph{  }

\itemize{
\item \emph{ @param } id character
\item \emph{ @param } include_derived character
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelAnnotationV2Annotations} \cr


\item status code : 200 | The annotations for the given entity.

\item return type : OrgSagebionetworksRepoModelAnnotationV2Annotations
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1EntityIdBenefactor } \emph{  }

\itemize{
\item \emph{ @param } id character
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelEntityHeader} \cr


\item status code : 200 | The entity ACL.

\item return type : OrgSagebionetworksRepoModelEntityHeader
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1EntityIdDerivedKeys } \emph{  }

\itemize{
\item \emph{ @param } id character
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelAnnotationV2Keys} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelAnnotationV2Keys
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1EntityIdFilehandles } \emph{  }

\itemize{
\item \emph{ @param } id character
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelFileFileHandleResults} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelFileFileHandleResults
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1EntityIdFilepreview } \emph{  }

\itemize{
\item \emph{ @param } id character
\item \emph{ @param } redirect character
\item \emph{ @returnType } \link{AnyType} \cr


\item status code : 200 | Status 200 will be returned if the 'redirect' boolean param is false

\item return type : AnyType
\item response headers :

\tabular{ll}{
}
\item status code : 307 | Status 307 will be returned if the 'redirect' boolean param is true or null


\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1EntityIdGeneratedBy } \emph{  }

\itemize{
\item \emph{ @param } id character
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelProvenanceActivity} \cr


\item status code : 200 | The requested Activity if it exists.

\item return type : OrgSagebionetworksRepoModelProvenanceActivity
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1EntityIdJson } \emph{  }

\itemize{
\item \emph{ @param } id character
\item \emph{ @param } include_derived_annotations character


\item status code : 200 | Auto-generated description

\item return type : object
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1EntityIdPath } \emph{  }

\itemize{
\item \emph{ @param } id character
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelEntityPath} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelEntityPath
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1EntityIdPermissions } \emph{  }

\itemize{
\item \emph{ @param } id character
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelAuthUserEntityPermissions} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelAuthUserEntityPermissions
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1EntityIdSchemaBinding } \emph{  }

\itemize{
\item \emph{ @param } id character
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelSchemaJsonSchemaObjectBinding} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelSchemaJsonSchemaObjectBinding
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1EntityIdSchemaValidation } \emph{  }

\itemize{
\item \emph{ @param } id character
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelSchemaValidationResults} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelSchemaValidationResults
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1EntityIdSchemaValidationStatistics } \emph{  }

\itemize{
\item \emph{ @param } id character
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelSchemaValidationSummaryStatistics} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelSchemaValidationSummaryStatistics
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1EntityIdSts } \emph{  }

\itemize{
\item \emph{ @param } id character
\item \emph{ @param } permission \link{OrgSagebionetworksRepoModelStsStsPermission}
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelStsStsCredentials} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelStsStsCredentials
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1EntityIdType } \emph{  }

\itemize{
\item \emph{ @param } id character
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelEntityHeader} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelEntityHeader
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1EntityIdVersion } \emph{  }

\itemize{
\item \emph{ @param } id character
\item \emph{ @param } offset integer
\item \emph{ @param } limit integer
\item \emph{ @returnType } \link{PaginatedResultsOfVersionInfo} \cr


\item status code : 200 | A paginated list of results.

\item return type : PaginatedResultsOfVersionInfo
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1EntityIdVersionVersionNumber } \emph{  }

\itemize{
\item \emph{ @param } id character
\item \emph{ @param } version_number numeric
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelEntity} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelEntity
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1EntityIdVersionVersionNumberAnnotations2 } \emph{  }

\itemize{
\item \emph{ @param } id character
\item \emph{ @param } version_number numeric
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelAnnotationV2Annotations} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelAnnotationV2Annotations
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1EntityIdVersionVersionNumberFilehandles } \emph{  }

\itemize{
\item \emph{ @param } id character
\item \emph{ @param } version_number numeric
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelFileFileHandleResults} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelFileFileHandleResults
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1EntityIdVersionVersionNumberFilepreview } \emph{  }

\itemize{
\item \emph{ @param } id character
\item \emph{ @param } version_number numeric
\item \emph{ @param } redirect character
\item \emph{ @returnType } \link{AnyType} \cr


\item status code : 200 | Status 200 will be returned if the 'redirect' boolean param is false

\item return type : AnyType
\item response headers :

\tabular{ll}{
}
\item status code : 307 | Status 307 will be returned if the 'redirect' boolean param is true or null


\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1EntityIdVersionVersionNumberGeneratedBy } \emph{  }

\itemize{
\item \emph{ @param } id character
\item \emph{ @param } version_number numeric
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelProvenanceActivity} \cr


\item status code : 200 | The requested Activity if it exists.

\item return type : OrgSagebionetworksRepoModelProvenanceActivity
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1EntityIdVersionVersionNumberJson } \emph{  }

\itemize{
\item \emph{ @param } id character
\item \emph{ @param } version_number numeric


\item status code : 200 | Auto-generated description

\item return type : object
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1EntityMd5Md5 } \emph{  }

\itemize{
\item \emph{ @param } md5 character
\item \emph{ @returnType } \link{PaginatedResultsOfEntityHeader} \cr


\item status code : 200 | Auto-generated description

\item return type : PaginatedResultsOfEntityHeader
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1EntityType } \emph{  }

\itemize{
\item \emph{ @param } batch character
\item \emph{ @returnType } \link{PaginatedResultsOfEntityHeader} \cr


\item status code : 200 | Auto-generated description

\item return type : PaginatedResultsOfEntityHeader
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1RESTResources } \emph{  }

\itemize{
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelRestResourceList} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelRestResourceList
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1RESTResourcesEffectiveSchema } \emph{  }

\itemize{
\item \emph{ @param } resource_id character


\item status code : 200 | Auto-generated description

\item return type : object
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1RESTResourcesSchema } \emph{  }

\itemize{
\item \emph{ @param } resource_id character


\item status code : 200 | Auto-generated description

\item return type : object
\item response headers :

\tabular{ll}{
}
}

\strong{ postRepoV1Entity } \emph{  }

\itemize{
\item \emph{ @param } org_sagebionetworks_repo_model_entity \link{OrgSagebionetworksRepoModelEntity}
\item \emph{ @param } generated_by character
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelEntity} \cr


\item status code : 201 | The new entity with an etag, id, and type specific metadata.

\item return type : OrgSagebionetworksRepoModelEntity
\item response headers :

\tabular{ll}{
}
}

\strong{ postRepoV1EntityChild } \emph{  }

\itemize{
\item \emph{ @param } org_sagebionetworks_repo_model_entity_entity_lookup_request \link{OrgSagebionetworksRepoModelEntityEntityLookupRequest}
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelEntityId} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelEntityId
\item response headers :

\tabular{ll}{
}
}

\strong{ postRepoV1EntityChildren } \emph{  }

\itemize{
\item \emph{ @param } org_sagebionetworks_repo_model_entity_children_request \link{OrgSagebionetworksRepoModelEntityChildrenRequest}
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelEntityChildrenResponse} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelEntityChildrenResponse
\item response headers :

\tabular{ll}{
}
}

\strong{ postRepoV1EntityHeader } \emph{  }

\itemize{
\item \emph{ @param } org_sagebionetworks_repo_model_request_reference_list \link{OrgSagebionetworksRepoModelRequestReferenceList}
\item \emph{ @returnType } \link{PaginatedResultsOfEntityHeader} \cr


\item status code : 200 | Auto-generated description

\item return type : PaginatedResultsOfEntityHeader
\item response headers :

\tabular{ll}{
}
}

\strong{ postRepoV1EntityIdAcl } \emph{  }

\itemize{
\item \emph{ @param } id character
\item \emph{ @param } org_sagebionetworks_repo_model_access_control_list \link{OrgSagebionetworksRepoModelAccessControlList}
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelAccessControlList} \cr


\item status code : 201 | The new ACL, which includes the id of the affected entity

\item return type : OrgSagebionetworksRepoModelAccessControlList
\item response headers :

\tabular{ll}{
}
}

\strong{ postRepoV1EntityIdSchemaValidationInvalid } \emph{  }

\itemize{
\item \emph{ @param } id character
\item \emph{ @param } org_sagebionetworks_repo_model_schema_list_validation_results_request \link{OrgSagebionetworksRepoModelSchemaListValidationResultsRequest}
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelSchemaListValidationResultsResponse} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelSchemaListValidationResultsResponse
\item response headers :

\tabular{ll}{
}
}

\strong{ putRepoV1EntityId } \emph{  }

\itemize{
\item \emph{ @param } id character
\item \emph{ @param } org_sagebionetworks_repo_model_entity \link{OrgSagebionetworksRepoModelEntity}
\item \emph{ @param } generated_by character
\item \emph{ @param } new_version character
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelEntity} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelEntity
\item response headers :

\tabular{ll}{
}
}

\strong{ putRepoV1EntityIdAcl } \emph{  }

\itemize{
\item \emph{ @param } id character
\item \emph{ @param } org_sagebionetworks_repo_model_access_control_list \link{OrgSagebionetworksRepoModelAccessControlList}
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelAccessControlList} \cr


\item status code : 200 | the accessControlList

\item return type : OrgSagebionetworksRepoModelAccessControlList
\item response headers :

\tabular{ll}{
}
}

\strong{ putRepoV1EntityIdAnnotations2 } \emph{  }

\itemize{
\item \emph{ @param } id character
\item \emph{ @param } org_sagebionetworks_repo_model_annotation_v2_annotations \link{OrgSagebionetworksRepoModelAnnotationV2Annotations}
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelAnnotationV2Annotations} \cr


\item status code : 200 | the updated annotations

\item return type : OrgSagebionetworksRepoModelAnnotationV2Annotations
\item response headers :

\tabular{ll}{
}
}

\strong{ putRepoV1EntityIdDatatype } \emph{  }

\itemize{
\item \emph{ @param } id character
\item \emph{ @param } type \link{OrgSagebionetworksRepoModelDataType}
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelDataTypeResponse} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelDataTypeResponse
\item response headers :

\tabular{ll}{
}
}

\strong{ putRepoV1EntityIdGeneratedBy } \emph{  }

\itemize{
\item \emph{ @param } id character
\item \emph{ @param } generated_by character
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelProvenanceActivity} \cr


\item status code : 200 | The requested Activity if it exists.

\item return type : OrgSagebionetworksRepoModelProvenanceActivity
\item response headers :

\tabular{ll}{
}
}

\strong{ putRepoV1EntityIdJson } \emph{  }

\itemize{
\item \emph{ @param } id character
\item \emph{ @param } body object


\item status code : 200 | Auto-generated description

\item return type : object
\item response headers :

\tabular{ll}{
}
}

\strong{ putRepoV1EntityIdSchemaBinding } \emph{  }

\itemize{
\item \emph{ @param } id character
\item \emph{ @param } org_sagebionetworks_repo_model_entity_bind_schema_to_entity_request \link{OrgSagebionetworksRepoModelEntityBindSchemaToEntityRequest}
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelSchemaJsonSchemaObjectBinding} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelSchemaJsonSchemaObjectBinding
\item response headers :

\tabular{ll}{
}
}

\strong{ putRepoV1EntityIdVersionVersionNumberFilehandle } \emph{  }

\itemize{
\item \emph{ @param } id character
\item \emph{ @param } version_number numeric
\item \emph{ @param } org_sagebionetworks_repo_model_entity_file_handle_update_request \link{OrgSagebionetworksRepoModelEntityFileHandleUpdateRequest}


\item status code : 200 | Void


\item response headers :

\tabular{ll}{
}
}

}
}

\examples{
\dontrun{
####################  deleteRepoV1EntityId  ####################

library(synr)
var_id <- "id_example" # character | The ID of the Entity to delete.
var_skip_trash_can <- "skip_trash_can_example" # character | If true the entity will be flag for priority purge and                      deleted as soon as possible (Optional)

api_instance <- EntityServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

api_instance$deleteRepoV1EntityId(var_id, skip_trash_can = var_skip_trash_can)


####################  deleteRepoV1EntityIdAcl  ####################

library(synr)
var_id <- "id_example" # character | The ID of the Entity that should have its ACL deleted.

api_instance <- EntityServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

api_instance$deleteRepoV1EntityIdAcl(var_id)


####################  deleteRepoV1EntityIdGeneratedBy  ####################

library(synr)
var_id <- "id_example" # character | - The ID of the activity to fetch.

api_instance <- EntityServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

api_instance$deleteRepoV1EntityIdGeneratedBy(var_id)


####################  deleteRepoV1EntityIdSchemaBinding  ####################

library(synr)
var_id <- "id_example" # character | 

api_instance <- EntityServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

api_instance$deleteRepoV1EntityIdSchemaBinding(var_id)


####################  deleteRepoV1EntityIdVersionVersionNumber  ####################

library(synr)
var_id <- "id_example" # character | The ID of the Entity
var_version_number <- 3.4 # numeric | The version number of the Entity to delete.

api_instance <- EntityServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

api_instance$deleteRepoV1EntityIdVersionVersionNumber(var_id, var_version_number)


####################  getRepoV1EntityAliasAlias  ####################

library(synr)
var_alias <- "alias_example" # character | 

api_instance <- EntityServicesApi$new()

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1EntityAliasAlias(var_aliasdata_file = "result.txt")
result <- api_instance$getRepoV1EntityAliasAlias(var_alias)
dput(result)


####################  getRepoV1EntityDockerRepoId  ####################

library(synr)
var_repository_name <- "repository_name_example" # character | The name of a managed docker repository

api_instance <- EntityServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1EntityDockerRepoId(var_repository_namedata_file = "result.txt")
result <- api_instance$getRepoV1EntityDockerRepoId(var_repository_name)
dput(result)


####################  getRepoV1EntityId  ####################

library(synr)
var_id <- "id_example" # character | The ID of the entity to fetch.

api_instance <- EntityServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1EntityId(var_iddata_file = "result.txt")
result <- api_instance$getRepoV1EntityId(var_id)
dput(result)


####################  getRepoV1EntityIdAccess  ####################

library(synr)
var_id <- "id_example" # character | The ID of the Entity to check the permission on.
var_access_type <- "access_type_example" # character | The permission to check. Must be from:                    ,<a href=\"${org.sagebionetworks.repo.model.ACCESS_TYPE}\">,ACCESS_TYPE,</a>

api_instance <- EntityServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1EntityIdAccess(var_id, var_access_typedata_file = "result.txt")
result <- api_instance$getRepoV1EntityIdAccess(var_id, var_access_type)
dput(result)


####################  getRepoV1EntityIdAcl  ####################

library(synr)
var_id <- "id_example" # character | The ID of the Entity to get the ACL for.

api_instance <- EntityServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1EntityIdAcl(var_iddata_file = "result.txt")
result <- api_instance$getRepoV1EntityIdAcl(var_id)
dput(result)


####################  getRepoV1EntityIdActionsDownload  ####################

library(synr)
var_id <- "id_example" # character | 

api_instance <- EntityServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1EntityIdActionsDownload(var_iddata_file = "result.txt")
result <- api_instance$getRepoV1EntityIdActionsDownload(var_id)
dput(result)


####################  getRepoV1EntityIdAnnotations2  ####################

library(synr)
var_id <- "id_example" # character | - The id of the entity to update.
var_include_derived <- "include_derived_example" # character | - When set to 'true', the derived annotations will be                        included in the results. Default value 'false'.

api_instance <- EntityServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1EntityIdAnnotations2(var_id, var_include_deriveddata_file = "result.txt")
result <- api_instance$getRepoV1EntityIdAnnotations2(var_id, var_include_derived)
dput(result)


####################  getRepoV1EntityIdBenefactor  ####################

library(synr)
var_id <- "id_example" # character | The ID of the entity to get the benefactor for.

api_instance <- EntityServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1EntityIdBenefactor(var_iddata_file = "result.txt")
result <- api_instance$getRepoV1EntityIdBenefactor(var_id)
dput(result)


####################  getRepoV1EntityIdDerivedKeys  ####################

library(synr)
var_id <- "id_example" # character | 

api_instance <- EntityServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1EntityIdDerivedKeys(var_iddata_file = "result.txt")
result <- api_instance$getRepoV1EntityIdDerivedKeys(var_id)
dput(result)


####################  getRepoV1EntityIdFilehandles  ####################

library(synr)
var_id <- "id_example" # character | The ID of the FileEntity to get.

api_instance <- EntityServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1EntityIdFilehandles(var_iddata_file = "result.txt")
result <- api_instance$getRepoV1EntityIdFilehandles(var_id)
dput(result)


####################  getRepoV1EntityIdFilepreview  ####################

library(synr)
var_id <- "id_example" # character | The ID of the FileEntity to get.
var_redirect <- "redirect_example" # character | When set to false, the URL will be returned as text/plain                  instead of redirecting. (Optional)

api_instance <- EntityServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1EntityIdFilepreview(var_id, redirect = var_redirectdata_file = "result.txt")
result <- api_instance$getRepoV1EntityIdFilepreview(var_id, redirect = var_redirect)
dput(result)


####################  getRepoV1EntityIdGeneratedBy  ####################

library(synr)
var_id <- "id_example" # character | The ID of the activity to fetch.

api_instance <- EntityServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1EntityIdGeneratedBy(var_iddata_file = "result.txt")
result <- api_instance$getRepoV1EntityIdGeneratedBy(var_id)
dput(result)


####################  getRepoV1EntityIdJson  ####################

library(synr)
var_id <- "id_example" # character | 
var_include_derived_annotations <- "include_derived_annotations_example" # character | true if annotations that are derived from a                                   bound schema should be included in the                                   response, false otherwise (default false)

api_instance <- EntityServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1EntityIdJson(var_id, var_include_derived_annotationsdata_file = "result.txt")
result <- api_instance$getRepoV1EntityIdJson(var_id, var_include_derived_annotations)
dput(result)


####################  getRepoV1EntityIdPath  ####################

library(synr)
var_id <- "id_example" # character | The ID of the Entity to get the full path for.

api_instance <- EntityServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1EntityIdPath(var_iddata_file = "result.txt")
result <- api_instance$getRepoV1EntityIdPath(var_id)
dput(result)


####################  getRepoV1EntityIdPermissions  ####################

library(synr)
var_id <- "id_example" # character | The ID of the Entity to get permissions for.

api_instance <- EntityServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1EntityIdPermissions(var_iddata_file = "result.txt")
result <- api_instance$getRepoV1EntityIdPermissions(var_id)
dput(result)


####################  getRepoV1EntityIdSchemaBinding  ####################

library(synr)
var_id <- "id_example" # character | The ID of the entity.

api_instance <- EntityServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1EntityIdSchemaBinding(var_iddata_file = "result.txt")
result <- api_instance$getRepoV1EntityIdSchemaBinding(var_id)
dput(result)


####################  getRepoV1EntityIdSchemaValidation  ####################

library(synr)
var_id <- "id_example" # character | The ID of the Entity.

api_instance <- EntityServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1EntityIdSchemaValidation(var_iddata_file = "result.txt")
result <- api_instance$getRepoV1EntityIdSchemaValidation(var_id)
dput(result)


####################  getRepoV1EntityIdSchemaValidationStatistics  ####################

library(synr)
var_id <- "id_example" # character | The ID of the container Entity.

api_instance <- EntityServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1EntityIdSchemaValidationStatistics(var_iddata_file = "result.txt")
result <- api_instance$getRepoV1EntityIdSchemaValidationStatistics(var_id)
dput(result)


####################  getRepoV1EntityIdSts  ####################

library(synr)
var_id <- "id_example" # character | The ID of the entity to get credentials. This must be a                    folder with an STS-enabled storage location.
var_permission <- org.sagebionetworks.repo.model.sts.StsPermission$new() # OrgSagebionetworksRepoModelStsStsPermission | Read-only or read-write permissions. See ,<a href=\"${org.sagebionetworks.repo.model.sts.StsPermission}\">,StsPermission,</a>,.

api_instance <- EntityServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1EntityIdSts(var_id, var_permissiondata_file = "result.txt")
result <- api_instance$getRepoV1EntityIdSts(var_id, var_permission)
dput(result)


####################  getRepoV1EntityIdType  ####################

library(synr)
var_id <- "id_example" # character | The ID of the Entity to get the EntityHeader for.

api_instance <- EntityServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1EntityIdType(var_iddata_file = "result.txt")
result <- api_instance$getRepoV1EntityIdType(var_id)
dput(result)


####################  getRepoV1EntityIdVersion  ####################

library(synr)
var_id <- "id_example" # character | The ID of the Entity to get all versions for.
var_offset <- 56 # integer | The offset index determines where this page will start                      from. When null it will default to 0. (Optional)
var_limit <- 56 # integer | Limits the number of entities that will be fetched for                      this page. When null it will default to 10. (Optional)

api_instance <- EntityServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1EntityIdVersion(var_id, offset = var_offset, limit = var_limitdata_file = "result.txt")
result <- api_instance$getRepoV1EntityIdVersion(var_id, offset = var_offset, limit = var_limit)
dput(result)


####################  getRepoV1EntityIdVersionVersionNumber  ####################

library(synr)
var_id <- "id_example" # character | The ID of the Entity.
var_version_number <- 3.4 # numeric | The version number of the Entity to get.

api_instance <- EntityServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1EntityIdVersionVersionNumber(var_id, var_version_numberdata_file = "result.txt")
result <- api_instance$getRepoV1EntityIdVersionVersionNumber(var_id, var_version_number)
dput(result)


####################  getRepoV1EntityIdVersionVersionNumberAnnotations2  ####################

library(synr)
var_id <- "id_example" # character | The ID of the Entity.
var_version_number <- 3.4 # numeric | The version number of the Entity.

api_instance <- EntityServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1EntityIdVersionVersionNumberAnnotations2(var_id, var_version_numberdata_file = "result.txt")
result <- api_instance$getRepoV1EntityIdVersionVersionNumberAnnotations2(var_id, var_version_number)
dput(result)


####################  getRepoV1EntityIdVersionVersionNumberFilehandles  ####################

library(synr)
var_id <- "id_example" # character | The ID of the FileEntity to get.
var_version_number <- 3.4 # numeric | The version number of the FileEntity to get

api_instance <- EntityServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1EntityIdVersionVersionNumberFilehandles(var_id, var_version_numberdata_file = "result.txt")
result <- api_instance$getRepoV1EntityIdVersionVersionNumberFilehandles(var_id, var_version_number)
dput(result)


####################  getRepoV1EntityIdVersionVersionNumberFilepreview  ####################

library(synr)
var_id <- "id_example" # character | The ID of the FileEntity to get.
var_version_number <- 3.4 # numeric | The version number of the FileEntity to get.
var_redirect <- "redirect_example" # character | When set to false, the URL will be returned as                       text/plain instead of redirecting. (Optional)

api_instance <- EntityServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1EntityIdVersionVersionNumberFilepreview(var_id, var_version_number, redirect = var_redirectdata_file = "result.txt")
result <- api_instance$getRepoV1EntityIdVersionVersionNumberFilepreview(var_id, var_version_number, redirect = var_redirect)
dput(result)


####################  getRepoV1EntityIdVersionVersionNumberGeneratedBy  ####################

library(synr)
var_id <- "id_example" # character | The ID of the entity to fetch.
var_version_number <- 3.4 # numeric | the version of the entity

api_instance <- EntityServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1EntityIdVersionVersionNumberGeneratedBy(var_id, var_version_numberdata_file = "result.txt")
result <- api_instance$getRepoV1EntityIdVersionVersionNumberGeneratedBy(var_id, var_version_number)
dput(result)


####################  getRepoV1EntityIdVersionVersionNumberJson  ####################

library(synr)
var_id <- "id_example" # character | 
var_version_number <- 3.4 # numeric | 

api_instance <- EntityServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1EntityIdVersionVersionNumberJson(var_id, var_version_numberdata_file = "result.txt")
result <- api_instance$getRepoV1EntityIdVersionVersionNumberJson(var_id, var_version_number)
dput(result)


####################  getRepoV1EntityMd5Md5  ####################

library(synr)
var_md5 <- "md5_example" # character | 

api_instance <- EntityServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1EntityMd5Md5(var_md5data_file = "result.txt")
result <- api_instance$getRepoV1EntityMd5Md5(var_md5)
dput(result)


####################  getRepoV1EntityType  ####################

library(synr)
var_batch <- "batch_example" # character | A comma separated list of Entity IDs to get EntityHeaders                      for.

api_instance <- EntityServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1EntityType(var_batchdata_file = "result.txt")
result <- api_instance$getRepoV1EntityType(var_batch)
dput(result)


####################  getRepoV1RESTResources  ####################

library(synr)

api_instance <- EntityServicesApi$new()

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1RESTResources(data_file = "result.txt")
result <- api_instance$getRepoV1RESTResources()
dput(result)


####################  getRepoV1RESTResourcesEffectiveSchema  ####################

library(synr)
var_resource_id <- "resource_id_example" # character | The full name of the resource (see                    ,<a href=\"${GET.REST.resources}\">,GET /REST/resources,</a>, for                    the full list of names).

api_instance <- EntityServicesApi$new()

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1RESTResourcesEffectiveSchema(var_resource_iddata_file = "result.txt")
result <- api_instance$getRepoV1RESTResourcesEffectiveSchema(var_resource_id)
dput(result)


####################  getRepoV1RESTResourcesSchema  ####################

library(synr)
var_resource_id <- "resource_id_example" # character | The full name of the resource (see                    ,<a href=\"${GET.REST.resources}\">,GET /REST/resources,</a>, for                    the full list of names).

api_instance <- EntityServicesApi$new()

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1RESTResourcesSchema(var_resource_iddata_file = "result.txt")
result <- api_instance$getRepoV1RESTResourcesSchema(var_resource_id)
dput(result)


####################  postRepoV1Entity  ####################

library(synr)
var_org_sagebionetworks_repo_model_entity <- org.sagebionetworks.repo.model.Entity$new("concreteType_example", "name_example", "description_example", "id_example", "etag_example", "createdOn_example", "modifiedOn_example", "createdBy_example", "modifiedBy_example", "parentId_example", "repositoryName_example", "isManaged_example", 123, "versionLabel_example", "versionComment_example", "isLatestVersion_example", c("columnIds_example"), "isSearchEnabled_example", c(org.sagebionetworks.repo.model.EntityRef$new("entityId_example", 123)), 123, "type_example", c("scopeIds_example"), "definingSQL_example", org.sagebionetworks.repo.model.Reference$new("targetId_example", 123), "linksToClassName_example", "previewString_example", c("headers_example"), c(org.sagebionetworks.repo.model.Row$new(c("cells_example"))), "dataFileHandleId_example", "fileNameOverride_example", "alias_example", 123, "checksum_example", 123, "singleString_example", c("stringList_example"), "singleDate_example", c("dateList_example"), 123, c(123), 123, c(123), "concept_example", "someEnum_example", c(org.sagebionetworks.repo.model.Reference$new("targetId_example", 123)), c(org.sagebionetworks.repo.model.EnvironmentDescriptor$new("type_example", "name_example", "quantifier_example"))) # OrgSagebionetworksRepoModelEntity | 
var_generated_by <- "generated_by_example" # character | To track the Provenance of an Entity create, include the                     ID of the ,<a href=\"${org.sagebionetworks.repo.model.provenance.Activity}\">,Activity,</a>, that was created to track the change. For                     more information see: ,<a href=\"${POST.activity}\">,POST                     /activity,</a>,. You must be the creator of the ,<a href=\"${org.sagebionetworks.repo.model.provenance.Activity}\">,Activity,</a>, used here. (Optional)

api_instance <- EntityServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$postRepoV1Entity(var_org_sagebionetworks_repo_model_entity, generated_by = var_generated_bydata_file = "result.txt")
result <- api_instance$postRepoV1Entity(var_org_sagebionetworks_repo_model_entity, generated_by = var_generated_by)
dput(result)


####################  postRepoV1EntityChild  ####################

library(synr)
var_org_sagebionetworks_repo_model_entity_entity_lookup_request <- org.sagebionetworks.repo.model.entity.EntityLookupRequest$new("parentId_example", "entityName_example") # OrgSagebionetworksRepoModelEntityEntityLookupRequest | 

api_instance <- EntityServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$postRepoV1EntityChild(var_org_sagebionetworks_repo_model_entity_entity_lookup_requestdata_file = "result.txt")
result <- api_instance$postRepoV1EntityChild(var_org_sagebionetworks_repo_model_entity_entity_lookup_request)
dput(result)


####################  postRepoV1EntityChildren  ####################

library(synr)
var_org_sagebionetworks_repo_model_entity_children_request <- org.sagebionetworks.repo.model.EntityChildrenRequest$new("parentId_example", "nextPageToken_example", c("includeTypes_example"), "sortBy_example", "sortDirection_example", "includeTotalChildCount_example", "includeSumFileSizes_example") # OrgSagebionetworksRepoModelEntityChildrenRequest | 

api_instance <- EntityServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$postRepoV1EntityChildren(var_org_sagebionetworks_repo_model_entity_children_requestdata_file = "result.txt")
result <- api_instance$postRepoV1EntityChildren(var_org_sagebionetworks_repo_model_entity_children_request)
dput(result)


####################  postRepoV1EntityHeader  ####################

library(synr)
var_org_sagebionetworks_repo_model_request_reference_list <- org.sagebionetworks.repo.model.request.ReferenceList$new(c(org.sagebionetworks.repo.model.Reference$new("targetId_example", 123))) # OrgSagebionetworksRepoModelRequestReferenceList | 

api_instance <- EntityServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$postRepoV1EntityHeader(var_org_sagebionetworks_repo_model_request_reference_listdata_file = "result.txt")
result <- api_instance$postRepoV1EntityHeader(var_org_sagebionetworks_repo_model_request_reference_list)
dput(result)


####################  postRepoV1EntityIdAcl  ####################

library(synr)
var_id <- "id_example" # character | The ID of the Entity to create an ACL for.
var_org_sagebionetworks_repo_model_access_control_list <- org.sagebionetworks.repo.model.AccessControlList$new("id_example", "createdBy_example", "creationDate_example", "modifiedBy_example", "modifiedOn_example", "etag_example", c(org.sagebionetworks.repo.model.ResourceAccess$new(123, c("accessType_example")))) # OrgSagebionetworksRepoModelAccessControlList | 

api_instance <- EntityServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$postRepoV1EntityIdAcl(var_id, var_org_sagebionetworks_repo_model_access_control_listdata_file = "result.txt")
result <- api_instance$postRepoV1EntityIdAcl(var_id, var_org_sagebionetworks_repo_model_access_control_list)
dput(result)


####################  postRepoV1EntityIdSchemaValidationInvalid  ####################

library(synr)
var_id <- "id_example" # character | The ID of the container Entity.
var_org_sagebionetworks_repo_model_schema_list_validation_results_request <- org.sagebionetworks.repo.model.schema.ListValidationResultsRequest$new("containerId_example", "nextPageToken_example") # OrgSagebionetworksRepoModelSchemaListValidationResultsRequest | 

api_instance <- EntityServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$postRepoV1EntityIdSchemaValidationInvalid(var_id, var_org_sagebionetworks_repo_model_schema_list_validation_results_requestdata_file = "result.txt")
result <- api_instance$postRepoV1EntityIdSchemaValidationInvalid(var_id, var_org_sagebionetworks_repo_model_schema_list_validation_results_request)
dput(result)


####################  putRepoV1EntityId  ####################

library(synr)
var_id <- "id_example" # character | The ID of the entity to update. This ID must match the ID                     of the passed Entity in the request body.
var_org_sagebionetworks_repo_model_entity <- org.sagebionetworks.repo.model.Entity$new("concreteType_example", "name_example", "description_example", "id_example", "etag_example", "createdOn_example", "modifiedOn_example", "createdBy_example", "modifiedBy_example", "parentId_example", "repositoryName_example", "isManaged_example", 123, "versionLabel_example", "versionComment_example", "isLatestVersion_example", c("columnIds_example"), "isSearchEnabled_example", c(org.sagebionetworks.repo.model.EntityRef$new("entityId_example", 123)), 123, "type_example", c("scopeIds_example"), "definingSQL_example", org.sagebionetworks.repo.model.Reference$new("targetId_example", 123), "linksToClassName_example", "previewString_example", c("headers_example"), c(org.sagebionetworks.repo.model.Row$new(c("cells_example"))), "dataFileHandleId_example", "fileNameOverride_example", "alias_example", 123, "checksum_example", 123, "singleString_example", c("stringList_example"), "singleDate_example", c("dateList_example"), 123, c(123), 123, c(123), "concept_example", "someEnum_example", c(org.sagebionetworks.repo.model.Reference$new("targetId_example", 123)), c(org.sagebionetworks.repo.model.EnvironmentDescriptor$new("type_example", "name_example", "quantifier_example"))) # OrgSagebionetworksRepoModelEntity | 
var_generated_by <- "generated_by_example" # character | To track the Provenance of an Entity update, include the                     ID of the ,<a href=\"${org.sagebionetworks.repo.model.provenance.Activity}\">,Activity,</a>, that was created to track the change. For                     more information see: ,<a href=\"${POST.activity}\">,POST                     /activity,</a>,. You must be the creator of the ,<a href=\"${org.sagebionetworks.repo.model.provenance.Activity}\">,Activity,</a>, used here. (Optional)
var_new_version <- "new_version_example" # character | To force the creation of a new version for a ,<a href=\"${org.sagebionetworks.repo.model.VersionableEntity}\">,versionable,</a>,                     entity such as a ,<a href=\"${org.sagebionetworks.repo.model.FileEntity}\">,FileEntity,</a>,,                     include this optional parameter with a value set to true                     (i.e. newVersion=true). This parameter is ignored for                     entities of type ,<a href=\"${org.sagebionetworks.repo.model.table.Table}\">,Table,</a>,                     (See ,<a href=\"${POST.entity.id.table.snapshot}\">,POST                     /entity/{id}/table/snapshot,</a>, instead) (Optional)

api_instance <- EntityServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$putRepoV1EntityId(var_id, var_org_sagebionetworks_repo_model_entity, generated_by = var_generated_by, new_version = var_new_versiondata_file = "result.txt")
result <- api_instance$putRepoV1EntityId(var_id, var_org_sagebionetworks_repo_model_entity, generated_by = var_generated_by, new_version = var_new_version)
dput(result)


####################  putRepoV1EntityIdAcl  ####################

library(synr)
var_id <- "id_example" # character | The ID of the Entity to create an ACL for.
var_org_sagebionetworks_repo_model_access_control_list <- org.sagebionetworks.repo.model.AccessControlList$new("id_example", "createdBy_example", "creationDate_example", "modifiedBy_example", "modifiedOn_example", "etag_example", c(org.sagebionetworks.repo.model.ResourceAccess$new(123, c("accessType_example")))) # OrgSagebionetworksRepoModelAccessControlList | 

api_instance <- EntityServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$putRepoV1EntityIdAcl(var_id, var_org_sagebionetworks_repo_model_access_control_listdata_file = "result.txt")
result <- api_instance$putRepoV1EntityIdAcl(var_id, var_org_sagebionetworks_repo_model_access_control_list)
dput(result)


####################  putRepoV1EntityIdAnnotations2  ####################

library(synr)
var_id <- "id_example" # character | - The id of the entity to update.
var_org_sagebionetworks_repo_model_annotation_v2_annotations <- org.sagebionetworks.repo.model.annotation.v2.Annotations$new("id_example", "etag_example", c(key = org.sagebionetworks.repo.model.annotation.v2.AnnotationsValue$new(c("value_example"), "type_example"))) # OrgSagebionetworksRepoModelAnnotationV2Annotations | 

api_instance <- EntityServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$putRepoV1EntityIdAnnotations2(var_id, var_org_sagebionetworks_repo_model_annotation_v2_annotationsdata_file = "result.txt")
result <- api_instance$putRepoV1EntityIdAnnotations2(var_id, var_org_sagebionetworks_repo_model_annotation_v2_annotations)
dput(result)


####################  putRepoV1EntityIdDatatype  ####################

library(synr)
var_id <- "id_example" # character | 
var_type <- org.sagebionetworks.repo.model.DataType$new() # OrgSagebionetworksRepoModelDataType | 

api_instance <- EntityServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$putRepoV1EntityIdDatatype(var_id, var_typedata_file = "result.txt")
result <- api_instance$putRepoV1EntityIdDatatype(var_id, var_type)
dput(result)


####################  putRepoV1EntityIdGeneratedBy  ####################

library(synr)
var_id <- "id_example" # character | The ID of the entity to update.
var_generated_by <- "generated_by_example" # character | The id of the activity to connect to the entity. You must                     be the creator of the ,<a href=\"${org.sagebionetworks.repo.model.provenance.Activity}\">,Activity,</a>, used here.

api_instance <- EntityServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$putRepoV1EntityIdGeneratedBy(var_id, var_generated_bydata_file = "result.txt")
result <- api_instance$putRepoV1EntityIdGeneratedBy(var_id, var_generated_by)
dput(result)


####################  putRepoV1EntityIdJson  ####################

library(synr)
var_id <- "id_example" # character | 
var_body <- c(key = TODO) # object | 

api_instance <- EntityServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$putRepoV1EntityIdJson(var_id, var_bodydata_file = "result.txt")
result <- api_instance$putRepoV1EntityIdJson(var_id, var_body)
dput(result)


####################  putRepoV1EntityIdSchemaBinding  ####################

library(synr)
var_id <- "id_example" # character | The syn ID of the entity to bind.
var_org_sagebionetworks_repo_model_entity_bind_schema_to_entity_request <- org.sagebionetworks.repo.model.entity.BindSchemaToEntityRequest$new("entityId_example", "schema$id_example", "enableDerivedAnnotations_example") # OrgSagebionetworksRepoModelEntityBindSchemaToEntityRequest | 

api_instance <- EntityServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$putRepoV1EntityIdSchemaBinding(var_id, var_org_sagebionetworks_repo_model_entity_bind_schema_to_entity_requestdata_file = "result.txt")
result <- api_instance$putRepoV1EntityIdSchemaBinding(var_id, var_org_sagebionetworks_repo_model_entity_bind_schema_to_entity_request)
dput(result)


####################  putRepoV1EntityIdVersionVersionNumberFilehandle  ####################

library(synr)
var_id <- "id_example" # character | The id of the file entity
var_version_number <- 3.4 # numeric | The entity version
var_org_sagebionetworks_repo_model_entity_file_handle_update_request <- org.sagebionetworks.repo.model.entity.FileHandleUpdateRequest$new("oldFileHandleId_example", "newFileHandleId_example") # OrgSagebionetworksRepoModelEntityFileHandleUpdateRequest | 

api_instance <- EntityServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

api_instance$putRepoV1EntityIdVersionVersionNumberFilehandle(var_id, var_version_number, var_org_sagebionetworks_repo_model_entity_file_handle_update_request)


}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{api_client}}{Handles the client-server communication.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-EntityServicesApi-new}{\code{EntityServicesApi$new()}}
\item \href{#method-EntityServicesApi-deleteRepoV1EntityId}{\code{EntityServicesApi$deleteRepoV1EntityId()}}
\item \href{#method-EntityServicesApi-deleteRepoV1EntityIdWithHttpInfo}{\code{EntityServicesApi$deleteRepoV1EntityIdWithHttpInfo()}}
\item \href{#method-EntityServicesApi-deleteRepoV1EntityIdAcl}{\code{EntityServicesApi$deleteRepoV1EntityIdAcl()}}
\item \href{#method-EntityServicesApi-deleteRepoV1EntityIdAclWithHttpInfo}{\code{EntityServicesApi$deleteRepoV1EntityIdAclWithHttpInfo()}}
\item \href{#method-EntityServicesApi-deleteRepoV1EntityIdGeneratedBy}{\code{EntityServicesApi$deleteRepoV1EntityIdGeneratedBy()}}
\item \href{#method-EntityServicesApi-deleteRepoV1EntityIdGeneratedByWithHttpInfo}{\code{EntityServicesApi$deleteRepoV1EntityIdGeneratedByWithHttpInfo()}}
\item \href{#method-EntityServicesApi-deleteRepoV1EntityIdSchemaBinding}{\code{EntityServicesApi$deleteRepoV1EntityIdSchemaBinding()}}
\item \href{#method-EntityServicesApi-deleteRepoV1EntityIdSchemaBindingWithHttpInfo}{\code{EntityServicesApi$deleteRepoV1EntityIdSchemaBindingWithHttpInfo()}}
\item \href{#method-EntityServicesApi-deleteRepoV1EntityIdVersionVersionNumber}{\code{EntityServicesApi$deleteRepoV1EntityIdVersionVersionNumber()}}
\item \href{#method-EntityServicesApi-deleteRepoV1EntityIdVersionVersionNumberWithHttpInfo}{\code{EntityServicesApi$deleteRepoV1EntityIdVersionVersionNumberWithHttpInfo()}}
\item \href{#method-EntityServicesApi-getRepoV1EntityAliasAlias}{\code{EntityServicesApi$getRepoV1EntityAliasAlias()}}
\item \href{#method-EntityServicesApi-getRepoV1EntityAliasAliasWithHttpInfo}{\code{EntityServicesApi$getRepoV1EntityAliasAliasWithHttpInfo()}}
\item \href{#method-EntityServicesApi-getRepoV1EntityDockerRepoId}{\code{EntityServicesApi$getRepoV1EntityDockerRepoId()}}
\item \href{#method-EntityServicesApi-getRepoV1EntityDockerRepoIdWithHttpInfo}{\code{EntityServicesApi$getRepoV1EntityDockerRepoIdWithHttpInfo()}}
\item \href{#method-EntityServicesApi-getRepoV1EntityId}{\code{EntityServicesApi$getRepoV1EntityId()}}
\item \href{#method-EntityServicesApi-getRepoV1EntityIdWithHttpInfo}{\code{EntityServicesApi$getRepoV1EntityIdWithHttpInfo()}}
\item \href{#method-EntityServicesApi-getRepoV1EntityIdAccess}{\code{EntityServicesApi$getRepoV1EntityIdAccess()}}
\item \href{#method-EntityServicesApi-getRepoV1EntityIdAccessWithHttpInfo}{\code{EntityServicesApi$getRepoV1EntityIdAccessWithHttpInfo()}}
\item \href{#method-EntityServicesApi-getRepoV1EntityIdAcl}{\code{EntityServicesApi$getRepoV1EntityIdAcl()}}
\item \href{#method-EntityServicesApi-getRepoV1EntityIdAclWithHttpInfo}{\code{EntityServicesApi$getRepoV1EntityIdAclWithHttpInfo()}}
\item \href{#method-EntityServicesApi-getRepoV1EntityIdActionsDownload}{\code{EntityServicesApi$getRepoV1EntityIdActionsDownload()}}
\item \href{#method-EntityServicesApi-getRepoV1EntityIdActionsDownloadWithHttpInfo}{\code{EntityServicesApi$getRepoV1EntityIdActionsDownloadWithHttpInfo()}}
\item \href{#method-EntityServicesApi-getRepoV1EntityIdAnnotations2}{\code{EntityServicesApi$getRepoV1EntityIdAnnotations2()}}
\item \href{#method-EntityServicesApi-getRepoV1EntityIdAnnotations2WithHttpInfo}{\code{EntityServicesApi$getRepoV1EntityIdAnnotations2WithHttpInfo()}}
\item \href{#method-EntityServicesApi-getRepoV1EntityIdBenefactor}{\code{EntityServicesApi$getRepoV1EntityIdBenefactor()}}
\item \href{#method-EntityServicesApi-getRepoV1EntityIdBenefactorWithHttpInfo}{\code{EntityServicesApi$getRepoV1EntityIdBenefactorWithHttpInfo()}}
\item \href{#method-EntityServicesApi-getRepoV1EntityIdDerivedKeys}{\code{EntityServicesApi$getRepoV1EntityIdDerivedKeys()}}
\item \href{#method-EntityServicesApi-getRepoV1EntityIdDerivedKeysWithHttpInfo}{\code{EntityServicesApi$getRepoV1EntityIdDerivedKeysWithHttpInfo()}}
\item \href{#method-EntityServicesApi-getRepoV1EntityIdFilehandles}{\code{EntityServicesApi$getRepoV1EntityIdFilehandles()}}
\item \href{#method-EntityServicesApi-getRepoV1EntityIdFilehandlesWithHttpInfo}{\code{EntityServicesApi$getRepoV1EntityIdFilehandlesWithHttpInfo()}}
\item \href{#method-EntityServicesApi-getRepoV1EntityIdFilepreview}{\code{EntityServicesApi$getRepoV1EntityIdFilepreview()}}
\item \href{#method-EntityServicesApi-getRepoV1EntityIdFilepreviewWithHttpInfo}{\code{EntityServicesApi$getRepoV1EntityIdFilepreviewWithHttpInfo()}}
\item \href{#method-EntityServicesApi-getRepoV1EntityIdGeneratedBy}{\code{EntityServicesApi$getRepoV1EntityIdGeneratedBy()}}
\item \href{#method-EntityServicesApi-getRepoV1EntityIdGeneratedByWithHttpInfo}{\code{EntityServicesApi$getRepoV1EntityIdGeneratedByWithHttpInfo()}}
\item \href{#method-EntityServicesApi-getRepoV1EntityIdJson}{\code{EntityServicesApi$getRepoV1EntityIdJson()}}
\item \href{#method-EntityServicesApi-getRepoV1EntityIdJsonWithHttpInfo}{\code{EntityServicesApi$getRepoV1EntityIdJsonWithHttpInfo()}}
\item \href{#method-EntityServicesApi-getRepoV1EntityIdPath}{\code{EntityServicesApi$getRepoV1EntityIdPath()}}
\item \href{#method-EntityServicesApi-getRepoV1EntityIdPathWithHttpInfo}{\code{EntityServicesApi$getRepoV1EntityIdPathWithHttpInfo()}}
\item \href{#method-EntityServicesApi-getRepoV1EntityIdPermissions}{\code{EntityServicesApi$getRepoV1EntityIdPermissions()}}
\item \href{#method-EntityServicesApi-getRepoV1EntityIdPermissionsWithHttpInfo}{\code{EntityServicesApi$getRepoV1EntityIdPermissionsWithHttpInfo()}}
\item \href{#method-EntityServicesApi-getRepoV1EntityIdSchemaBinding}{\code{EntityServicesApi$getRepoV1EntityIdSchemaBinding()}}
\item \href{#method-EntityServicesApi-getRepoV1EntityIdSchemaBindingWithHttpInfo}{\code{EntityServicesApi$getRepoV1EntityIdSchemaBindingWithHttpInfo()}}
\item \href{#method-EntityServicesApi-getRepoV1EntityIdSchemaValidation}{\code{EntityServicesApi$getRepoV1EntityIdSchemaValidation()}}
\item \href{#method-EntityServicesApi-getRepoV1EntityIdSchemaValidationWithHttpInfo}{\code{EntityServicesApi$getRepoV1EntityIdSchemaValidationWithHttpInfo()}}
\item \href{#method-EntityServicesApi-getRepoV1EntityIdSchemaValidationStatistics}{\code{EntityServicesApi$getRepoV1EntityIdSchemaValidationStatistics()}}
\item \href{#method-EntityServicesApi-getRepoV1EntityIdSchemaValidationStatisticsWithHttpInfo}{\code{EntityServicesApi$getRepoV1EntityIdSchemaValidationStatisticsWithHttpInfo()}}
\item \href{#method-EntityServicesApi-getRepoV1EntityIdSts}{\code{EntityServicesApi$getRepoV1EntityIdSts()}}
\item \href{#method-EntityServicesApi-getRepoV1EntityIdStsWithHttpInfo}{\code{EntityServicesApi$getRepoV1EntityIdStsWithHttpInfo()}}
\item \href{#method-EntityServicesApi-getRepoV1EntityIdType}{\code{EntityServicesApi$getRepoV1EntityIdType()}}
\item \href{#method-EntityServicesApi-getRepoV1EntityIdTypeWithHttpInfo}{\code{EntityServicesApi$getRepoV1EntityIdTypeWithHttpInfo()}}
\item \href{#method-EntityServicesApi-getRepoV1EntityIdVersion}{\code{EntityServicesApi$getRepoV1EntityIdVersion()}}
\item \href{#method-EntityServicesApi-getRepoV1EntityIdVersionWithHttpInfo}{\code{EntityServicesApi$getRepoV1EntityIdVersionWithHttpInfo()}}
\item \href{#method-EntityServicesApi-getRepoV1EntityIdVersionVersionNumber}{\code{EntityServicesApi$getRepoV1EntityIdVersionVersionNumber()}}
\item \href{#method-EntityServicesApi-getRepoV1EntityIdVersionVersionNumberWithHttpInfo}{\code{EntityServicesApi$getRepoV1EntityIdVersionVersionNumberWithHttpInfo()}}
\item \href{#method-EntityServicesApi-getRepoV1EntityIdVersionVersionNumberAnnotations2}{\code{EntityServicesApi$getRepoV1EntityIdVersionVersionNumberAnnotations2()}}
\item \href{#method-EntityServicesApi-getRepoV1EntityIdVersionVersionNumberAnnotations2WithHttpInfo}{\code{EntityServicesApi$getRepoV1EntityIdVersionVersionNumberAnnotations2WithHttpInfo()}}
\item \href{#method-EntityServicesApi-getRepoV1EntityIdVersionVersionNumberFilehandles}{\code{EntityServicesApi$getRepoV1EntityIdVersionVersionNumberFilehandles()}}
\item \href{#method-EntityServicesApi-getRepoV1EntityIdVersionVersionNumberFilehandlesWithHttpInfo}{\code{EntityServicesApi$getRepoV1EntityIdVersionVersionNumberFilehandlesWithHttpInfo()}}
\item \href{#method-EntityServicesApi-getRepoV1EntityIdVersionVersionNumberFilepreview}{\code{EntityServicesApi$getRepoV1EntityIdVersionVersionNumberFilepreview()}}
\item \href{#method-EntityServicesApi-getRepoV1EntityIdVersionVersionNumberFilepreviewWithHttpInfo}{\code{EntityServicesApi$getRepoV1EntityIdVersionVersionNumberFilepreviewWithHttpInfo()}}
\item \href{#method-EntityServicesApi-getRepoV1EntityIdVersionVersionNumberGeneratedBy}{\code{EntityServicesApi$getRepoV1EntityIdVersionVersionNumberGeneratedBy()}}
\item \href{#method-EntityServicesApi-getRepoV1EntityIdVersionVersionNumberGeneratedByWithHttpInfo}{\code{EntityServicesApi$getRepoV1EntityIdVersionVersionNumberGeneratedByWithHttpInfo()}}
\item \href{#method-EntityServicesApi-getRepoV1EntityIdVersionVersionNumberJson}{\code{EntityServicesApi$getRepoV1EntityIdVersionVersionNumberJson()}}
\item \href{#method-EntityServicesApi-getRepoV1EntityIdVersionVersionNumberJsonWithHttpInfo}{\code{EntityServicesApi$getRepoV1EntityIdVersionVersionNumberJsonWithHttpInfo()}}
\item \href{#method-EntityServicesApi-getRepoV1EntityMd5Md5}{\code{EntityServicesApi$getRepoV1EntityMd5Md5()}}
\item \href{#method-EntityServicesApi-getRepoV1EntityMd5Md5WithHttpInfo}{\code{EntityServicesApi$getRepoV1EntityMd5Md5WithHttpInfo()}}
\item \href{#method-EntityServicesApi-getRepoV1EntityType}{\code{EntityServicesApi$getRepoV1EntityType()}}
\item \href{#method-EntityServicesApi-getRepoV1EntityTypeWithHttpInfo}{\code{EntityServicesApi$getRepoV1EntityTypeWithHttpInfo()}}
\item \href{#method-EntityServicesApi-getRepoV1RESTResources}{\code{EntityServicesApi$getRepoV1RESTResources()}}
\item \href{#method-EntityServicesApi-getRepoV1RESTResourcesWithHttpInfo}{\code{EntityServicesApi$getRepoV1RESTResourcesWithHttpInfo()}}
\item \href{#method-EntityServicesApi-getRepoV1RESTResourcesEffectiveSchema}{\code{EntityServicesApi$getRepoV1RESTResourcesEffectiveSchema()}}
\item \href{#method-EntityServicesApi-getRepoV1RESTResourcesEffectiveSchemaWithHttpInfo}{\code{EntityServicesApi$getRepoV1RESTResourcesEffectiveSchemaWithHttpInfo()}}
\item \href{#method-EntityServicesApi-getRepoV1RESTResourcesSchema}{\code{EntityServicesApi$getRepoV1RESTResourcesSchema()}}
\item \href{#method-EntityServicesApi-getRepoV1RESTResourcesSchemaWithHttpInfo}{\code{EntityServicesApi$getRepoV1RESTResourcesSchemaWithHttpInfo()}}
\item \href{#method-EntityServicesApi-postRepoV1Entity}{\code{EntityServicesApi$postRepoV1Entity()}}
\item \href{#method-EntityServicesApi-postRepoV1EntityWithHttpInfo}{\code{EntityServicesApi$postRepoV1EntityWithHttpInfo()}}
\item \href{#method-EntityServicesApi-postRepoV1EntityChild}{\code{EntityServicesApi$postRepoV1EntityChild()}}
\item \href{#method-EntityServicesApi-postRepoV1EntityChildWithHttpInfo}{\code{EntityServicesApi$postRepoV1EntityChildWithHttpInfo()}}
\item \href{#method-EntityServicesApi-postRepoV1EntityChildren}{\code{EntityServicesApi$postRepoV1EntityChildren()}}
\item \href{#method-EntityServicesApi-postRepoV1EntityChildrenWithHttpInfo}{\code{EntityServicesApi$postRepoV1EntityChildrenWithHttpInfo()}}
\item \href{#method-EntityServicesApi-postRepoV1EntityHeader}{\code{EntityServicesApi$postRepoV1EntityHeader()}}
\item \href{#method-EntityServicesApi-postRepoV1EntityHeaderWithHttpInfo}{\code{EntityServicesApi$postRepoV1EntityHeaderWithHttpInfo()}}
\item \href{#method-EntityServicesApi-postRepoV1EntityIdAcl}{\code{EntityServicesApi$postRepoV1EntityIdAcl()}}
\item \href{#method-EntityServicesApi-postRepoV1EntityIdAclWithHttpInfo}{\code{EntityServicesApi$postRepoV1EntityIdAclWithHttpInfo()}}
\item \href{#method-EntityServicesApi-postRepoV1EntityIdSchemaValidationInvalid}{\code{EntityServicesApi$postRepoV1EntityIdSchemaValidationInvalid()}}
\item \href{#method-EntityServicesApi-postRepoV1EntityIdSchemaValidationInvalidWithHttpInfo}{\code{EntityServicesApi$postRepoV1EntityIdSchemaValidationInvalidWithHttpInfo()}}
\item \href{#method-EntityServicesApi-putRepoV1EntityId}{\code{EntityServicesApi$putRepoV1EntityId()}}
\item \href{#method-EntityServicesApi-putRepoV1EntityIdWithHttpInfo}{\code{EntityServicesApi$putRepoV1EntityIdWithHttpInfo()}}
\item \href{#method-EntityServicesApi-putRepoV1EntityIdAcl}{\code{EntityServicesApi$putRepoV1EntityIdAcl()}}
\item \href{#method-EntityServicesApi-putRepoV1EntityIdAclWithHttpInfo}{\code{EntityServicesApi$putRepoV1EntityIdAclWithHttpInfo()}}
\item \href{#method-EntityServicesApi-putRepoV1EntityIdAnnotations2}{\code{EntityServicesApi$putRepoV1EntityIdAnnotations2()}}
\item \href{#method-EntityServicesApi-putRepoV1EntityIdAnnotations2WithHttpInfo}{\code{EntityServicesApi$putRepoV1EntityIdAnnotations2WithHttpInfo()}}
\item \href{#method-EntityServicesApi-putRepoV1EntityIdDatatype}{\code{EntityServicesApi$putRepoV1EntityIdDatatype()}}
\item \href{#method-EntityServicesApi-putRepoV1EntityIdDatatypeWithHttpInfo}{\code{EntityServicesApi$putRepoV1EntityIdDatatypeWithHttpInfo()}}
\item \href{#method-EntityServicesApi-putRepoV1EntityIdGeneratedBy}{\code{EntityServicesApi$putRepoV1EntityIdGeneratedBy()}}
\item \href{#method-EntityServicesApi-putRepoV1EntityIdGeneratedByWithHttpInfo}{\code{EntityServicesApi$putRepoV1EntityIdGeneratedByWithHttpInfo()}}
\item \href{#method-EntityServicesApi-putRepoV1EntityIdJson}{\code{EntityServicesApi$putRepoV1EntityIdJson()}}
\item \href{#method-EntityServicesApi-putRepoV1EntityIdJsonWithHttpInfo}{\code{EntityServicesApi$putRepoV1EntityIdJsonWithHttpInfo()}}
\item \href{#method-EntityServicesApi-putRepoV1EntityIdSchemaBinding}{\code{EntityServicesApi$putRepoV1EntityIdSchemaBinding()}}
\item \href{#method-EntityServicesApi-putRepoV1EntityIdSchemaBindingWithHttpInfo}{\code{EntityServicesApi$putRepoV1EntityIdSchemaBindingWithHttpInfo()}}
\item \href{#method-EntityServicesApi-putRepoV1EntityIdVersionVersionNumberFilehandle}{\code{EntityServicesApi$putRepoV1EntityIdVersionVersionNumberFilehandle()}}
\item \href{#method-EntityServicesApi-putRepoV1EntityIdVersionVersionNumberFilehandleWithHttpInfo}{\code{EntityServicesApi$putRepoV1EntityIdVersionVersionNumberFilehandleWithHttpInfo()}}
\item \href{#method-EntityServicesApi-clone}{\code{EntityServicesApi$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-new"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new EntityServicesApi.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$new(api_client)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{api_client}}{An instance of API client.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-deleteRepoV1EntityId"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-deleteRepoV1EntityId}{}}}
\subsection{Method \code{deleteRepoV1EntityId()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$deleteRepoV1EntityId(id, skip_trash_can = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The ID of the Entity to delete.}

\item{\code{skip_trash_can}}{(optional) If true the entity will be flag for priority purge and                      deleted as soon as possible}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
void
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-deleteRepoV1EntityIdWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-deleteRepoV1EntityIdWithHttpInfo}{}}}
\subsection{Method \code{deleteRepoV1EntityIdWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$deleteRepoV1EntityIdWithHttpInfo(
  id,
  skip_trash_can = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The ID of the Entity to delete.}

\item{\code{skip_trash_can}}{(optional) If true the entity will be flag for priority purge and                      deleted as soon as possible}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (void) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-deleteRepoV1EntityIdAcl"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-deleteRepoV1EntityIdAcl}{}}}
\subsection{Method \code{deleteRepoV1EntityIdAcl()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$deleteRepoV1EntityIdAcl(id, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The ID of the Entity that should have its ACL deleted.}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
void
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-deleteRepoV1EntityIdAclWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-deleteRepoV1EntityIdAclWithHttpInfo}{}}}
\subsection{Method \code{deleteRepoV1EntityIdAclWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$deleteRepoV1EntityIdAclWithHttpInfo(id, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The ID of the Entity that should have its ACL deleted.}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (void) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-deleteRepoV1EntityIdGeneratedBy"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-deleteRepoV1EntityIdGeneratedBy}{}}}
\subsection{Method \code{deleteRepoV1EntityIdGeneratedBy()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$deleteRepoV1EntityIdGeneratedBy(id, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{- The ID of the activity to fetch.}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
void
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-deleteRepoV1EntityIdGeneratedByWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-deleteRepoV1EntityIdGeneratedByWithHttpInfo}{}}}
\subsection{Method \code{deleteRepoV1EntityIdGeneratedByWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$deleteRepoV1EntityIdGeneratedByWithHttpInfo(id, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{- The ID of the activity to fetch.}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (void) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-deleteRepoV1EntityIdSchemaBinding"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-deleteRepoV1EntityIdSchemaBinding}{}}}
\subsection{Method \code{deleteRepoV1EntityIdSchemaBinding()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$deleteRepoV1EntityIdSchemaBinding(id, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
void
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-deleteRepoV1EntityIdSchemaBindingWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-deleteRepoV1EntityIdSchemaBindingWithHttpInfo}{}}}
\subsection{Method \code{deleteRepoV1EntityIdSchemaBindingWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$deleteRepoV1EntityIdSchemaBindingWithHttpInfo(id, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (void) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-deleteRepoV1EntityIdVersionVersionNumber"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-deleteRepoV1EntityIdVersionVersionNumber}{}}}
\subsection{Method \code{deleteRepoV1EntityIdVersionVersionNumber()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$deleteRepoV1EntityIdVersionVersionNumber(
  id,
  version_number,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The ID of the Entity}

\item{\code{version_number}}{The version number of the Entity to delete.}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
void
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-deleteRepoV1EntityIdVersionVersionNumberWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-deleteRepoV1EntityIdVersionVersionNumberWithHttpInfo}{}}}
\subsection{Method \code{deleteRepoV1EntityIdVersionVersionNumberWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$deleteRepoV1EntityIdVersionVersionNumberWithHttpInfo(
  id,
  version_number,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The ID of the Entity}

\item{\code{version_number}}{The version number of the Entity to delete.}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (void) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-getRepoV1EntityAliasAlias"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-getRepoV1EntityAliasAlias}{}}}
\subsection{Method \code{getRepoV1EntityAliasAlias()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$getRepoV1EntityAliasAlias(alias, data_file = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{alias}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelEntityId
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-getRepoV1EntityAliasAliasWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-getRepoV1EntityAliasAliasWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1EntityAliasAliasWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$getRepoV1EntityAliasAliasWithHttpInfo(
  alias,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{alias}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelEntityId) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-getRepoV1EntityDockerRepoId"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-getRepoV1EntityDockerRepoId}{}}}
\subsection{Method \code{getRepoV1EntityDockerRepoId()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$getRepoV1EntityDockerRepoId(
  repository_name,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{repository_name}}{The name of a managed docker repository}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelEntityId
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-getRepoV1EntityDockerRepoIdWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-getRepoV1EntityDockerRepoIdWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1EntityDockerRepoIdWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$getRepoV1EntityDockerRepoIdWithHttpInfo(
  repository_name,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{repository_name}}{The name of a managed docker repository}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelEntityId) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-getRepoV1EntityId"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-getRepoV1EntityId}{}}}
\subsection{Method \code{getRepoV1EntityId()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$getRepoV1EntityId(id, data_file = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The ID of the entity to fetch.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelEntity
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-getRepoV1EntityIdWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-getRepoV1EntityIdWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1EntityIdWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$getRepoV1EntityIdWithHttpInfo(id, data_file = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The ID of the entity to fetch.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelEntity) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-getRepoV1EntityIdAccess"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-getRepoV1EntityIdAccess}{}}}
\subsection{Method \code{getRepoV1EntityIdAccess()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$getRepoV1EntityIdAccess(
  id,
  access_type,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The ID of the Entity to check the permission on.}

\item{\code{access_type}}{The permission to check. Must be from:                    ,<a href=\"${org.sagebionetworks.repo.model.ACCESS_TYPE}\">,ACCESS_TYPE,</a>}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
character
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-getRepoV1EntityIdAccessWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-getRepoV1EntityIdAccessWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1EntityIdAccessWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$getRepoV1EntityIdAccessWithHttpInfo(
  id,
  access_type,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The ID of the Entity to check the permission on.}

\item{\code{access_type}}{The permission to check. Must be from:                    ,<a href=\"${org.sagebionetworks.repo.model.ACCESS_TYPE}\">,ACCESS_TYPE,</a>}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (character) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-getRepoV1EntityIdAcl"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-getRepoV1EntityIdAcl}{}}}
\subsection{Method \code{getRepoV1EntityIdAcl()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$getRepoV1EntityIdAcl(id, data_file = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The ID of the Entity to get the ACL for.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelAccessControlList
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-getRepoV1EntityIdAclWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-getRepoV1EntityIdAclWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1EntityIdAclWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$getRepoV1EntityIdAclWithHttpInfo(id, data_file = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The ID of the Entity to get the ACL for.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelAccessControlList) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-getRepoV1EntityIdActionsDownload"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-getRepoV1EntityIdActionsDownload}{}}}
\subsection{Method \code{getRepoV1EntityIdActionsDownload()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$getRepoV1EntityIdActionsDownload(id, data_file = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelDownloadActionRequiredList
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-getRepoV1EntityIdActionsDownloadWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-getRepoV1EntityIdActionsDownloadWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1EntityIdActionsDownloadWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$getRepoV1EntityIdActionsDownloadWithHttpInfo(
  id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelDownloadActionRequiredList) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-getRepoV1EntityIdAnnotations2"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-getRepoV1EntityIdAnnotations2}{}}}
\subsection{Method \code{getRepoV1EntityIdAnnotations2()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$getRepoV1EntityIdAnnotations2(
  id,
  include_derived,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{- The id of the entity to update.}

\item{\code{include_derived}}{- When set to 'true', the derived annotations will be                        included in the results. Default value 'false'.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelAnnotationV2Annotations
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-getRepoV1EntityIdAnnotations2WithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-getRepoV1EntityIdAnnotations2WithHttpInfo}{}}}
\subsection{Method \code{getRepoV1EntityIdAnnotations2WithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$getRepoV1EntityIdAnnotations2WithHttpInfo(
  id,
  include_derived,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{- The id of the entity to update.}

\item{\code{include_derived}}{- When set to 'true', the derived annotations will be                        included in the results. Default value 'false'.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelAnnotationV2Annotations) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-getRepoV1EntityIdBenefactor"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-getRepoV1EntityIdBenefactor}{}}}
\subsection{Method \code{getRepoV1EntityIdBenefactor()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$getRepoV1EntityIdBenefactor(id, data_file = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The ID of the entity to get the benefactor for.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelEntityHeader
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-getRepoV1EntityIdBenefactorWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-getRepoV1EntityIdBenefactorWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1EntityIdBenefactorWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$getRepoV1EntityIdBenefactorWithHttpInfo(
  id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The ID of the entity to get the benefactor for.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelEntityHeader) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-getRepoV1EntityIdDerivedKeys"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-getRepoV1EntityIdDerivedKeys}{}}}
\subsection{Method \code{getRepoV1EntityIdDerivedKeys()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$getRepoV1EntityIdDerivedKeys(id, data_file = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelAnnotationV2Keys
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-getRepoV1EntityIdDerivedKeysWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-getRepoV1EntityIdDerivedKeysWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1EntityIdDerivedKeysWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$getRepoV1EntityIdDerivedKeysWithHttpInfo(
  id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelAnnotationV2Keys) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-getRepoV1EntityIdFilehandles"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-getRepoV1EntityIdFilehandles}{}}}
\subsection{Method \code{getRepoV1EntityIdFilehandles()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$getRepoV1EntityIdFilehandles(id, data_file = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The ID of the FileEntity to get.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelFileFileHandleResults
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-getRepoV1EntityIdFilehandlesWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-getRepoV1EntityIdFilehandlesWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1EntityIdFilehandlesWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$getRepoV1EntityIdFilehandlesWithHttpInfo(
  id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The ID of the FileEntity to get.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelFileFileHandleResults) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-getRepoV1EntityIdFilepreview"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-getRepoV1EntityIdFilepreview}{}}}
\subsection{Method \code{getRepoV1EntityIdFilepreview()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$getRepoV1EntityIdFilepreview(
  id,
  redirect = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The ID of the FileEntity to get.}

\item{\code{redirect}}{(optional) When set to false, the URL will be returned as text/plain                  instead of redirecting.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
AnyType
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-getRepoV1EntityIdFilepreviewWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-getRepoV1EntityIdFilepreviewWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1EntityIdFilepreviewWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$getRepoV1EntityIdFilepreviewWithHttpInfo(
  id,
  redirect = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The ID of the FileEntity to get.}

\item{\code{redirect}}{(optional) When set to false, the URL will be returned as text/plain                  instead of redirecting.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (AnyType) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-getRepoV1EntityIdGeneratedBy"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-getRepoV1EntityIdGeneratedBy}{}}}
\subsection{Method \code{getRepoV1EntityIdGeneratedBy()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$getRepoV1EntityIdGeneratedBy(id, data_file = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The ID of the activity to fetch.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelProvenanceActivity
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-getRepoV1EntityIdGeneratedByWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-getRepoV1EntityIdGeneratedByWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1EntityIdGeneratedByWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$getRepoV1EntityIdGeneratedByWithHttpInfo(
  id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The ID of the activity to fetch.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelProvenanceActivity) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-getRepoV1EntityIdJson"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-getRepoV1EntityIdJson}{}}}
\subsection{Method \code{getRepoV1EntityIdJson()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$getRepoV1EntityIdJson(
  id,
  include_derived_annotations,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{}

\item{\code{include_derived_annotations}}{true if annotations that are derived from a                                   bound schema should be included in the                                   response, false otherwise (default false)}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-getRepoV1EntityIdJsonWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-getRepoV1EntityIdJsonWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1EntityIdJsonWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$getRepoV1EntityIdJsonWithHttpInfo(
  id,
  include_derived_annotations,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{}

\item{\code{include_derived_annotations}}{true if annotations that are derived from a                                   bound schema should be included in the                                   response, false otherwise (default false)}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (object) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-getRepoV1EntityIdPath"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-getRepoV1EntityIdPath}{}}}
\subsection{Method \code{getRepoV1EntityIdPath()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$getRepoV1EntityIdPath(id, data_file = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The ID of the Entity to get the full path for.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelEntityPath
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-getRepoV1EntityIdPathWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-getRepoV1EntityIdPathWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1EntityIdPathWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$getRepoV1EntityIdPathWithHttpInfo(id, data_file = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The ID of the Entity to get the full path for.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelEntityPath) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-getRepoV1EntityIdPermissions"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-getRepoV1EntityIdPermissions}{}}}
\subsection{Method \code{getRepoV1EntityIdPermissions()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$getRepoV1EntityIdPermissions(id, data_file = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The ID of the Entity to get permissions for.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelAuthUserEntityPermissions
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-getRepoV1EntityIdPermissionsWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-getRepoV1EntityIdPermissionsWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1EntityIdPermissionsWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$getRepoV1EntityIdPermissionsWithHttpInfo(
  id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The ID of the Entity to get permissions for.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelAuthUserEntityPermissions) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-getRepoV1EntityIdSchemaBinding"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-getRepoV1EntityIdSchemaBinding}{}}}
\subsection{Method \code{getRepoV1EntityIdSchemaBinding()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$getRepoV1EntityIdSchemaBinding(id, data_file = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The ID of the entity.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelSchemaJsonSchemaObjectBinding
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-getRepoV1EntityIdSchemaBindingWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-getRepoV1EntityIdSchemaBindingWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1EntityIdSchemaBindingWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$getRepoV1EntityIdSchemaBindingWithHttpInfo(
  id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The ID of the entity.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelSchemaJsonSchemaObjectBinding) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-getRepoV1EntityIdSchemaValidation"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-getRepoV1EntityIdSchemaValidation}{}}}
\subsection{Method \code{getRepoV1EntityIdSchemaValidation()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$getRepoV1EntityIdSchemaValidation(id, data_file = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The ID of the Entity.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelSchemaValidationResults
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-getRepoV1EntityIdSchemaValidationWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-getRepoV1EntityIdSchemaValidationWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1EntityIdSchemaValidationWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$getRepoV1EntityIdSchemaValidationWithHttpInfo(
  id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The ID of the Entity.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelSchemaValidationResults) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-getRepoV1EntityIdSchemaValidationStatistics"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-getRepoV1EntityIdSchemaValidationStatistics}{}}}
\subsection{Method \code{getRepoV1EntityIdSchemaValidationStatistics()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$getRepoV1EntityIdSchemaValidationStatistics(
  id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The ID of the container Entity.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelSchemaValidationSummaryStatistics
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-getRepoV1EntityIdSchemaValidationStatisticsWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-getRepoV1EntityIdSchemaValidationStatisticsWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1EntityIdSchemaValidationStatisticsWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$getRepoV1EntityIdSchemaValidationStatisticsWithHttpInfo(
  id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The ID of the container Entity.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelSchemaValidationSummaryStatistics) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-getRepoV1EntityIdSts"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-getRepoV1EntityIdSts}{}}}
\subsection{Method \code{getRepoV1EntityIdSts()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$getRepoV1EntityIdSts(id, permission, data_file = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The ID of the entity to get credentials. This must be a                    folder with an STS-enabled storage location.}

\item{\code{permission}}{Read-only or read-write permissions. See ,<a href=\"${org.sagebionetworks.repo.model.sts.StsPermission}\">,StsPermission,</a>,.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelStsStsCredentials
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-getRepoV1EntityIdStsWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-getRepoV1EntityIdStsWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1EntityIdStsWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$getRepoV1EntityIdStsWithHttpInfo(
  id,
  permission,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The ID of the entity to get credentials. This must be a                    folder with an STS-enabled storage location.}

\item{\code{permission}}{Read-only or read-write permissions. See ,<a href=\"${org.sagebionetworks.repo.model.sts.StsPermission}\">,StsPermission,</a>,.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelStsStsCredentials) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-getRepoV1EntityIdType"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-getRepoV1EntityIdType}{}}}
\subsection{Method \code{getRepoV1EntityIdType()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$getRepoV1EntityIdType(id, data_file = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The ID of the Entity to get the EntityHeader for.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelEntityHeader
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-getRepoV1EntityIdTypeWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-getRepoV1EntityIdTypeWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1EntityIdTypeWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$getRepoV1EntityIdTypeWithHttpInfo(id, data_file = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The ID of the Entity to get the EntityHeader for.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelEntityHeader) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-getRepoV1EntityIdVersion"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-getRepoV1EntityIdVersion}{}}}
\subsection{Method \code{getRepoV1EntityIdVersion()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$getRepoV1EntityIdVersion(
  id,
  offset = NULL,
  limit = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The ID of the Entity to get all versions for.}

\item{\code{offset}}{(optional) The offset index determines where this page will start                      from. When null it will default to 0.}

\item{\code{limit}}{(optional) Limits the number of entities that will be fetched for                      this page. When null it will default to 10.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
PaginatedResultsOfVersionInfo
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-getRepoV1EntityIdVersionWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-getRepoV1EntityIdVersionWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1EntityIdVersionWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$getRepoV1EntityIdVersionWithHttpInfo(
  id,
  offset = NULL,
  limit = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The ID of the Entity to get all versions for.}

\item{\code{offset}}{(optional) The offset index determines where this page will start                      from. When null it will default to 0.}

\item{\code{limit}}{(optional) Limits the number of entities that will be fetched for                      this page. When null it will default to 10.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (PaginatedResultsOfVersionInfo) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-getRepoV1EntityIdVersionVersionNumber"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-getRepoV1EntityIdVersionVersionNumber}{}}}
\subsection{Method \code{getRepoV1EntityIdVersionVersionNumber()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$getRepoV1EntityIdVersionVersionNumber(
  id,
  version_number,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The ID of the Entity.}

\item{\code{version_number}}{The version number of the Entity to get.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelEntity
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-getRepoV1EntityIdVersionVersionNumberWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-getRepoV1EntityIdVersionVersionNumberWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1EntityIdVersionVersionNumberWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$getRepoV1EntityIdVersionVersionNumberWithHttpInfo(
  id,
  version_number,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The ID of the Entity.}

\item{\code{version_number}}{The version number of the Entity to get.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelEntity) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-getRepoV1EntityIdVersionVersionNumberAnnotations2"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-getRepoV1EntityIdVersionVersionNumberAnnotations2}{}}}
\subsection{Method \code{getRepoV1EntityIdVersionVersionNumberAnnotations2()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$getRepoV1EntityIdVersionVersionNumberAnnotations2(
  id,
  version_number,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The ID of the Entity.}

\item{\code{version_number}}{The version number of the Entity.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelAnnotationV2Annotations
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-getRepoV1EntityIdVersionVersionNumberAnnotations2WithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-getRepoV1EntityIdVersionVersionNumberAnnotations2WithHttpInfo}{}}}
\subsection{Method \code{getRepoV1EntityIdVersionVersionNumberAnnotations2WithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$getRepoV1EntityIdVersionVersionNumberAnnotations2WithHttpInfo(
  id,
  version_number,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The ID of the Entity.}

\item{\code{version_number}}{The version number of the Entity.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelAnnotationV2Annotations) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-getRepoV1EntityIdVersionVersionNumberFilehandles"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-getRepoV1EntityIdVersionVersionNumberFilehandles}{}}}
\subsection{Method \code{getRepoV1EntityIdVersionVersionNumberFilehandles()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$getRepoV1EntityIdVersionVersionNumberFilehandles(
  id,
  version_number,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The ID of the FileEntity to get.}

\item{\code{version_number}}{The version number of the FileEntity to get}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelFileFileHandleResults
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-getRepoV1EntityIdVersionVersionNumberFilehandlesWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-getRepoV1EntityIdVersionVersionNumberFilehandlesWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1EntityIdVersionVersionNumberFilehandlesWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$getRepoV1EntityIdVersionVersionNumberFilehandlesWithHttpInfo(
  id,
  version_number,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The ID of the FileEntity to get.}

\item{\code{version_number}}{The version number of the FileEntity to get}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelFileFileHandleResults) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-getRepoV1EntityIdVersionVersionNumberFilepreview"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-getRepoV1EntityIdVersionVersionNumberFilepreview}{}}}
\subsection{Method \code{getRepoV1EntityIdVersionVersionNumberFilepreview()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$getRepoV1EntityIdVersionVersionNumberFilepreview(
  id,
  version_number,
  redirect = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The ID of the FileEntity to get.}

\item{\code{version_number}}{The version number of the FileEntity to get.}

\item{\code{redirect}}{(optional) When set to false, the URL will be returned as                       text/plain instead of redirecting.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
AnyType
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-getRepoV1EntityIdVersionVersionNumberFilepreviewWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-getRepoV1EntityIdVersionVersionNumberFilepreviewWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1EntityIdVersionVersionNumberFilepreviewWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$getRepoV1EntityIdVersionVersionNumberFilepreviewWithHttpInfo(
  id,
  version_number,
  redirect = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The ID of the FileEntity to get.}

\item{\code{version_number}}{The version number of the FileEntity to get.}

\item{\code{redirect}}{(optional) When set to false, the URL will be returned as                       text/plain instead of redirecting.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (AnyType) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-getRepoV1EntityIdVersionVersionNumberGeneratedBy"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-getRepoV1EntityIdVersionVersionNumberGeneratedBy}{}}}
\subsection{Method \code{getRepoV1EntityIdVersionVersionNumberGeneratedBy()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$getRepoV1EntityIdVersionVersionNumberGeneratedBy(
  id,
  version_number,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The ID of the entity to fetch.}

\item{\code{version_number}}{the version of the entity}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelProvenanceActivity
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-getRepoV1EntityIdVersionVersionNumberGeneratedByWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-getRepoV1EntityIdVersionVersionNumberGeneratedByWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1EntityIdVersionVersionNumberGeneratedByWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$getRepoV1EntityIdVersionVersionNumberGeneratedByWithHttpInfo(
  id,
  version_number,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The ID of the entity to fetch.}

\item{\code{version_number}}{the version of the entity}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelProvenanceActivity) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-getRepoV1EntityIdVersionVersionNumberJson"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-getRepoV1EntityIdVersionVersionNumberJson}{}}}
\subsection{Method \code{getRepoV1EntityIdVersionVersionNumberJson()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$getRepoV1EntityIdVersionVersionNumberJson(
  id,
  version_number,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{}

\item{\code{version_number}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-getRepoV1EntityIdVersionVersionNumberJsonWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-getRepoV1EntityIdVersionVersionNumberJsonWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1EntityIdVersionVersionNumberJsonWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$getRepoV1EntityIdVersionVersionNumberJsonWithHttpInfo(
  id,
  version_number,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{}

\item{\code{version_number}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (object) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-getRepoV1EntityMd5Md5"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-getRepoV1EntityMd5Md5}{}}}
\subsection{Method \code{getRepoV1EntityMd5Md5()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$getRepoV1EntityMd5Md5(md5, data_file = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{md5}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
PaginatedResultsOfEntityHeader
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-getRepoV1EntityMd5Md5WithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-getRepoV1EntityMd5Md5WithHttpInfo}{}}}
\subsection{Method \code{getRepoV1EntityMd5Md5WithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$getRepoV1EntityMd5Md5WithHttpInfo(md5, data_file = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{md5}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (PaginatedResultsOfEntityHeader) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-getRepoV1EntityType"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-getRepoV1EntityType}{}}}
\subsection{Method \code{getRepoV1EntityType()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$getRepoV1EntityType(batch, data_file = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{batch}}{A comma separated list of Entity IDs to get EntityHeaders                      for.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
PaginatedResultsOfEntityHeader
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-getRepoV1EntityTypeWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-getRepoV1EntityTypeWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1EntityTypeWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$getRepoV1EntityTypeWithHttpInfo(batch, data_file = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{batch}}{A comma separated list of Entity IDs to get EntityHeaders                      for.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (PaginatedResultsOfEntityHeader) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-getRepoV1RESTResources"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-getRepoV1RESTResources}{}}}
\subsection{Method \code{getRepoV1RESTResources()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$getRepoV1RESTResources(data_file = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelRestResourceList
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-getRepoV1RESTResourcesWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-getRepoV1RESTResourcesWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1RESTResourcesWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$getRepoV1RESTResourcesWithHttpInfo(data_file = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelRestResourceList) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-getRepoV1RESTResourcesEffectiveSchema"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-getRepoV1RESTResourcesEffectiveSchema}{}}}
\subsection{Method \code{getRepoV1RESTResourcesEffectiveSchema()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$getRepoV1RESTResourcesEffectiveSchema(
  resource_id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{resource_id}}{The full name of the resource (see                    ,<a href=\"${GET.REST.resources}\">,GET /REST/resources,</a>, for                    the full list of names).}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-getRepoV1RESTResourcesEffectiveSchemaWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-getRepoV1RESTResourcesEffectiveSchemaWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1RESTResourcesEffectiveSchemaWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$getRepoV1RESTResourcesEffectiveSchemaWithHttpInfo(
  resource_id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{resource_id}}{The full name of the resource (see                    ,<a href=\"${GET.REST.resources}\">,GET /REST/resources,</a>, for                    the full list of names).}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (object) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-getRepoV1RESTResourcesSchema"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-getRepoV1RESTResourcesSchema}{}}}
\subsection{Method \code{getRepoV1RESTResourcesSchema()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$getRepoV1RESTResourcesSchema(
  resource_id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{resource_id}}{The full name of the resource (see                    ,<a href=\"${GET.REST.resources}\">,GET /REST/resources,</a>, for                    the full list of names).}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-getRepoV1RESTResourcesSchemaWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-getRepoV1RESTResourcesSchemaWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1RESTResourcesSchemaWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$getRepoV1RESTResourcesSchemaWithHttpInfo(
  resource_id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{resource_id}}{The full name of the resource (see                    ,<a href=\"${GET.REST.resources}\">,GET /REST/resources,</a>, for                    the full list of names).}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (object) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-postRepoV1Entity"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-postRepoV1Entity}{}}}
\subsection{Method \code{postRepoV1Entity()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$postRepoV1Entity(
  org_sagebionetworks_repo_model_entity,
  generated_by = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org_sagebionetworks_repo_model_entity}}{}

\item{\code{generated_by}}{(optional) To track the Provenance of an Entity create, include the                     ID of the ,<a href=\"${org.sagebionetworks.repo.model.provenance.Activity}\">,Activity,</a>, that was created to track the change. For                     more information see: ,<a href=\"${POST.activity}\">,POST                     /activity,</a>,. You must be the creator of the ,<a href=\"${org.sagebionetworks.repo.model.provenance.Activity}\">,Activity,</a>, used here.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelEntity
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-postRepoV1EntityWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-postRepoV1EntityWithHttpInfo}{}}}
\subsection{Method \code{postRepoV1EntityWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$postRepoV1EntityWithHttpInfo(
  org_sagebionetworks_repo_model_entity,
  generated_by = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org_sagebionetworks_repo_model_entity}}{}

\item{\code{generated_by}}{(optional) To track the Provenance of an Entity create, include the                     ID of the ,<a href=\"${org.sagebionetworks.repo.model.provenance.Activity}\">,Activity,</a>, that was created to track the change. For                     more information see: ,<a href=\"${POST.activity}\">,POST                     /activity,</a>,. You must be the creator of the ,<a href=\"${org.sagebionetworks.repo.model.provenance.Activity}\">,Activity,</a>, used here.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelEntity) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-postRepoV1EntityChild"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-postRepoV1EntityChild}{}}}
\subsection{Method \code{postRepoV1EntityChild()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$postRepoV1EntityChild(
  org_sagebionetworks_repo_model_entity_entity_lookup_request,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org_sagebionetworks_repo_model_entity_entity_lookup_request}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelEntityId
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-postRepoV1EntityChildWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-postRepoV1EntityChildWithHttpInfo}{}}}
\subsection{Method \code{postRepoV1EntityChildWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$postRepoV1EntityChildWithHttpInfo(
  org_sagebionetworks_repo_model_entity_entity_lookup_request,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org_sagebionetworks_repo_model_entity_entity_lookup_request}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelEntityId) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-postRepoV1EntityChildren"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-postRepoV1EntityChildren}{}}}
\subsection{Method \code{postRepoV1EntityChildren()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$postRepoV1EntityChildren(
  org_sagebionetworks_repo_model_entity_children_request,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org_sagebionetworks_repo_model_entity_children_request}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelEntityChildrenResponse
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-postRepoV1EntityChildrenWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-postRepoV1EntityChildrenWithHttpInfo}{}}}
\subsection{Method \code{postRepoV1EntityChildrenWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$postRepoV1EntityChildrenWithHttpInfo(
  org_sagebionetworks_repo_model_entity_children_request,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org_sagebionetworks_repo_model_entity_children_request}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelEntityChildrenResponse) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-postRepoV1EntityHeader"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-postRepoV1EntityHeader}{}}}
\subsection{Method \code{postRepoV1EntityHeader()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$postRepoV1EntityHeader(
  org_sagebionetworks_repo_model_request_reference_list,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org_sagebionetworks_repo_model_request_reference_list}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
PaginatedResultsOfEntityHeader
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-postRepoV1EntityHeaderWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-postRepoV1EntityHeaderWithHttpInfo}{}}}
\subsection{Method \code{postRepoV1EntityHeaderWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$postRepoV1EntityHeaderWithHttpInfo(
  org_sagebionetworks_repo_model_request_reference_list,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org_sagebionetworks_repo_model_request_reference_list}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (PaginatedResultsOfEntityHeader) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-postRepoV1EntityIdAcl"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-postRepoV1EntityIdAcl}{}}}
\subsection{Method \code{postRepoV1EntityIdAcl()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$postRepoV1EntityIdAcl(
  id,
  org_sagebionetworks_repo_model_access_control_list,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The ID of the Entity to create an ACL for.}

\item{\code{org_sagebionetworks_repo_model_access_control_list}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelAccessControlList
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-postRepoV1EntityIdAclWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-postRepoV1EntityIdAclWithHttpInfo}{}}}
\subsection{Method \code{postRepoV1EntityIdAclWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$postRepoV1EntityIdAclWithHttpInfo(
  id,
  org_sagebionetworks_repo_model_access_control_list,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The ID of the Entity to create an ACL for.}

\item{\code{org_sagebionetworks_repo_model_access_control_list}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelAccessControlList) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-postRepoV1EntityIdSchemaValidationInvalid"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-postRepoV1EntityIdSchemaValidationInvalid}{}}}
\subsection{Method \code{postRepoV1EntityIdSchemaValidationInvalid()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$postRepoV1EntityIdSchemaValidationInvalid(
  id,
  org_sagebionetworks_repo_model_schema_list_validation_results_request,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The ID of the container Entity.}

\item{\code{org_sagebionetworks_repo_model_schema_list_validation_results_request}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelSchemaListValidationResultsResponse
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-postRepoV1EntityIdSchemaValidationInvalidWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-postRepoV1EntityIdSchemaValidationInvalidWithHttpInfo}{}}}
\subsection{Method \code{postRepoV1EntityIdSchemaValidationInvalidWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$postRepoV1EntityIdSchemaValidationInvalidWithHttpInfo(
  id,
  org_sagebionetworks_repo_model_schema_list_validation_results_request,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The ID of the container Entity.}

\item{\code{org_sagebionetworks_repo_model_schema_list_validation_results_request}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelSchemaListValidationResultsResponse) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-putRepoV1EntityId"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-putRepoV1EntityId}{}}}
\subsection{Method \code{putRepoV1EntityId()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$putRepoV1EntityId(
  id,
  org_sagebionetworks_repo_model_entity,
  generated_by = NULL,
  new_version = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The ID of the entity to update. This ID must match the ID                     of the passed Entity in the request body.}

\item{\code{org_sagebionetworks_repo_model_entity}}{}

\item{\code{generated_by}}{(optional) To track the Provenance of an Entity update, include the                     ID of the ,<a href=\"${org.sagebionetworks.repo.model.provenance.Activity}\">,Activity,</a>, that was created to track the change. For                     more information see: ,<a href=\"${POST.activity}\">,POST                     /activity,</a>,. You must be the creator of the ,<a href=\"${org.sagebionetworks.repo.model.provenance.Activity}\">,Activity,</a>, used here.}

\item{\code{new_version}}{(optional) To force the creation of a new version for a ,<a href=\"${org.sagebionetworks.repo.model.VersionableEntity}\">,versionable,</a>,                     entity such as a ,<a href=\"${org.sagebionetworks.repo.model.FileEntity}\">,FileEntity,</a>,,                     include this optional parameter with a value set to true                     (i.e. newVersion=true). This parameter is ignored for                     entities of type ,<a href=\"${org.sagebionetworks.repo.model.table.Table}\">,Table,</a>,                     (See ,<a href=\"${POST.entity.id.table.snapshot}\">,POST                     /entity/{id}/table/snapshot,</a>, instead)}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelEntity
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-putRepoV1EntityIdWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-putRepoV1EntityIdWithHttpInfo}{}}}
\subsection{Method \code{putRepoV1EntityIdWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$putRepoV1EntityIdWithHttpInfo(
  id,
  org_sagebionetworks_repo_model_entity,
  generated_by = NULL,
  new_version = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The ID of the entity to update. This ID must match the ID                     of the passed Entity in the request body.}

\item{\code{org_sagebionetworks_repo_model_entity}}{}

\item{\code{generated_by}}{(optional) To track the Provenance of an Entity update, include the                     ID of the ,<a href=\"${org.sagebionetworks.repo.model.provenance.Activity}\">,Activity,</a>, that was created to track the change. For                     more information see: ,<a href=\"${POST.activity}\">,POST                     /activity,</a>,. You must be the creator of the ,<a href=\"${org.sagebionetworks.repo.model.provenance.Activity}\">,Activity,</a>, used here.}

\item{\code{new_version}}{(optional) To force the creation of a new version for a ,<a href=\"${org.sagebionetworks.repo.model.VersionableEntity}\">,versionable,</a>,                     entity such as a ,<a href=\"${org.sagebionetworks.repo.model.FileEntity}\">,FileEntity,</a>,,                     include this optional parameter with a value set to true                     (i.e. newVersion=true). This parameter is ignored for                     entities of type ,<a href=\"${org.sagebionetworks.repo.model.table.Table}\">,Table,</a>,                     (See ,<a href=\"${POST.entity.id.table.snapshot}\">,POST                     /entity/{id}/table/snapshot,</a>, instead)}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelEntity) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-putRepoV1EntityIdAcl"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-putRepoV1EntityIdAcl}{}}}
\subsection{Method \code{putRepoV1EntityIdAcl()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$putRepoV1EntityIdAcl(
  id,
  org_sagebionetworks_repo_model_access_control_list,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The ID of the Entity to create an ACL for.}

\item{\code{org_sagebionetworks_repo_model_access_control_list}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelAccessControlList
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-putRepoV1EntityIdAclWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-putRepoV1EntityIdAclWithHttpInfo}{}}}
\subsection{Method \code{putRepoV1EntityIdAclWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$putRepoV1EntityIdAclWithHttpInfo(
  id,
  org_sagebionetworks_repo_model_access_control_list,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The ID of the Entity to create an ACL for.}

\item{\code{org_sagebionetworks_repo_model_access_control_list}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelAccessControlList) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-putRepoV1EntityIdAnnotations2"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-putRepoV1EntityIdAnnotations2}{}}}
\subsection{Method \code{putRepoV1EntityIdAnnotations2()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$putRepoV1EntityIdAnnotations2(
  id,
  org_sagebionetworks_repo_model_annotation_v2_annotations,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{- The id of the entity to update.}

\item{\code{org_sagebionetworks_repo_model_annotation_v2_annotations}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelAnnotationV2Annotations
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-putRepoV1EntityIdAnnotations2WithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-putRepoV1EntityIdAnnotations2WithHttpInfo}{}}}
\subsection{Method \code{putRepoV1EntityIdAnnotations2WithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$putRepoV1EntityIdAnnotations2WithHttpInfo(
  id,
  org_sagebionetworks_repo_model_annotation_v2_annotations,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{- The id of the entity to update.}

\item{\code{org_sagebionetworks_repo_model_annotation_v2_annotations}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelAnnotationV2Annotations) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-putRepoV1EntityIdDatatype"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-putRepoV1EntityIdDatatype}{}}}
\subsection{Method \code{putRepoV1EntityIdDatatype()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$putRepoV1EntityIdDatatype(id, type, data_file = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{}

\item{\code{type}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelDataTypeResponse
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-putRepoV1EntityIdDatatypeWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-putRepoV1EntityIdDatatypeWithHttpInfo}{}}}
\subsection{Method \code{putRepoV1EntityIdDatatypeWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$putRepoV1EntityIdDatatypeWithHttpInfo(
  id,
  type,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{}

\item{\code{type}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelDataTypeResponse) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-putRepoV1EntityIdGeneratedBy"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-putRepoV1EntityIdGeneratedBy}{}}}
\subsection{Method \code{putRepoV1EntityIdGeneratedBy()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$putRepoV1EntityIdGeneratedBy(
  id,
  generated_by,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The ID of the entity to update.}

\item{\code{generated_by}}{The id of the activity to connect to the entity. You must                     be the creator of the ,<a href=\"${org.sagebionetworks.repo.model.provenance.Activity}\">,Activity,</a>, used here.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelProvenanceActivity
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-putRepoV1EntityIdGeneratedByWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-putRepoV1EntityIdGeneratedByWithHttpInfo}{}}}
\subsection{Method \code{putRepoV1EntityIdGeneratedByWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$putRepoV1EntityIdGeneratedByWithHttpInfo(
  id,
  generated_by,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The ID of the entity to update.}

\item{\code{generated_by}}{The id of the activity to connect to the entity. You must                     be the creator of the ,<a href=\"${org.sagebionetworks.repo.model.provenance.Activity}\">,Activity,</a>, used here.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelProvenanceActivity) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-putRepoV1EntityIdJson"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-putRepoV1EntityIdJson}{}}}
\subsection{Method \code{putRepoV1EntityIdJson()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$putRepoV1EntityIdJson(id, body, data_file = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{}

\item{\code{body}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-putRepoV1EntityIdJsonWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-putRepoV1EntityIdJsonWithHttpInfo}{}}}
\subsection{Method \code{putRepoV1EntityIdJsonWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$putRepoV1EntityIdJsonWithHttpInfo(
  id,
  body,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{}

\item{\code{body}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (object) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-putRepoV1EntityIdSchemaBinding"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-putRepoV1EntityIdSchemaBinding}{}}}
\subsection{Method \code{putRepoV1EntityIdSchemaBinding()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$putRepoV1EntityIdSchemaBinding(
  id,
  org_sagebionetworks_repo_model_entity_bind_schema_to_entity_request,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The syn ID of the entity to bind.}

\item{\code{org_sagebionetworks_repo_model_entity_bind_schema_to_entity_request}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelSchemaJsonSchemaObjectBinding
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-putRepoV1EntityIdSchemaBindingWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-putRepoV1EntityIdSchemaBindingWithHttpInfo}{}}}
\subsection{Method \code{putRepoV1EntityIdSchemaBindingWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$putRepoV1EntityIdSchemaBindingWithHttpInfo(
  id,
  org_sagebionetworks_repo_model_entity_bind_schema_to_entity_request,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The syn ID of the entity to bind.}

\item{\code{org_sagebionetworks_repo_model_entity_bind_schema_to_entity_request}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelSchemaJsonSchemaObjectBinding) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-putRepoV1EntityIdVersionVersionNumberFilehandle"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-putRepoV1EntityIdVersionVersionNumberFilehandle}{}}}
\subsection{Method \code{putRepoV1EntityIdVersionVersionNumberFilehandle()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$putRepoV1EntityIdVersionVersionNumberFilehandle(
  id,
  version_number,
  org_sagebionetworks_repo_model_entity_file_handle_update_request,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The id of the file entity}

\item{\code{version_number}}{The entity version}

\item{\code{org_sagebionetworks_repo_model_entity_file_handle_update_request}}{}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
void
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-putRepoV1EntityIdVersionVersionNumberFilehandleWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-putRepoV1EntityIdVersionVersionNumberFilehandleWithHttpInfo}{}}}
\subsection{Method \code{putRepoV1EntityIdVersionVersionNumberFilehandleWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$putRepoV1EntityIdVersionVersionNumberFilehandleWithHttpInfo(
  id,
  version_number,
  org_sagebionetworks_repo_model_entity_file_handle_update_request,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The id of the file entity}

\item{\code{version_number}}{The entity version}

\item{\code{org_sagebionetworks_repo_model_entity_file_handle_update_request}}{}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (void) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityServicesApi-clone"></a>}}
\if{latex}{\out{\hypertarget{method-EntityServicesApi-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityServicesApi$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
