% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/open_id_connect_services_api.R
\docType{class}
\name{OpenIDConnectServicesApi}
\alias{OpenIDConnectServicesApi}
\title{OpenIDConnectServices operations}
\format{
An \code{R6Class} generator object
}
\description{
OpenIDConnectServicesApi
}
\details{
Synapse REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: v1
Generated by: https://openapi-generator.tech
}
\section{Methods}{

\describe{
\strong{ deleteAuthV1Oauth2ClientId } \emph{  }

\itemize{
\item \emph{ @param } id character


\item status code : 200 | Void


\item response headers :

\tabular{ll}{
}
}

\strong{ getAuthV1Oauth2AuditGrantedClients } \emph{  }

\itemize{
\item \emph{ @param } next_page_token character
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelOauthOAuthClientAuthorizationHistoryList} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelOauthOAuthClientAuthorizationHistoryList
\item response headers :

\tabular{ll}{
}
}

\strong{ getAuthV1Oauth2AuditGrantedClientsClientIdTokens } \emph{  }

\itemize{
\item \emph{ @param } client_id character
\item \emph{ @param } next_page_token character
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelOauthOAuthRefreshTokenInformationList} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelOauthOAuthRefreshTokenInformationList
\item response headers :

\tabular{ll}{
}
}

\strong{ getAuthV1Oauth2AuditTokensTokenIdMetadata } \emph{  }

\itemize{
\item \emph{ @param } token_id character
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelOauthOAuthRefreshTokenInformation} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelOauthOAuthRefreshTokenInformation
\item response headers :

\tabular{ll}{
}
}

\strong{ getAuthV1Oauth2Client } \emph{  }

\itemize{
\item \emph{ @param } next_page_token character
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelOauthOAuthClientList} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelOauthOAuthClientList
\item response headers :

\tabular{ll}{
}
}

\strong{ getAuthV1Oauth2ClientId } \emph{  }

\itemize{
\item \emph{ @param } id character
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelOauthOAuthClient} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelOauthOAuthClient
\item response headers :

\tabular{ll}{
}
}

\strong{ getAuthV1Oauth2Jwks } \emph{  }

\itemize{
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelOauthJsonWebKeySet} \cr


\item status code : 200 | the JSON Web Key Set

\item return type : OrgSagebionetworksRepoModelOauthJsonWebKeySet
\item response headers :

\tabular{ll}{
}
}

\strong{ getAuthV1Oauth2TokenTokenIdMetadata } \emph{  }

\itemize{
\item \emph{ @param } verified_oauth_client_id character
\item \emph{ @param } token_id character
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelOauthOAuthRefreshTokenInformation} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelOauthOAuthRefreshTokenInformation
\item response headers :

\tabular{ll}{
}
}

\strong{ getAuthV1Oauth2Userinfo } \emph{  }

\itemize{
\item \emph{ @param } synapse_authorization character


\item status code : 200 | Auto-generated description

\item return type : object
\item response headers :

\tabular{ll}{
}
}

\strong{ getAuthV1WellKnownOpenidConfiguration } \emph{  }

\itemize{
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelOauthOIDConnectConfiguration} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelOauthOIDConnectConfiguration
\item response headers :

\tabular{ll}{
}
}

\strong{ postAuthV1Oauth2AuditGrantedClientsClientIdRevoke } \emph{  }

\itemize{
\item \emph{ @param } client_id character


\item status code : 204 | Void


\item response headers :

\tabular{ll}{
}
}

\strong{ postAuthV1Oauth2AuditTokensTokenIdRevoke } \emph{  }

\itemize{
\item \emph{ @param } token_id character


\item status code : 204 | Void


\item response headers :

\tabular{ll}{
}
}

\strong{ postAuthV1Oauth2Client } \emph{  }

\itemize{
\item \emph{ @param } org_sagebionetworks_repo_model_oauth_o_auth_client \link{OrgSagebionetworksRepoModelOauthOAuthClient}
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelOauthOAuthClient} \cr


\item status code : 201 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelOauthOAuthClient
\item response headers :

\tabular{ll}{
}
}

\strong{ postAuthV1Oauth2ClientSecretId } \emph{  }

\itemize{
\item \emph{ @param } id character
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelOauthOAuthClientIdAndSecret} \cr


\item status code : 201 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelOauthOAuthClientIdAndSecret
\item response headers :

\tabular{ll}{
}
}

\strong{ postAuthV1Oauth2Consent } \emph{  }

\itemize{
\item \emph{ @param } org_sagebionetworks_repo_model_oauth_oidc_authorization_request \link{OrgSagebionetworksRepoModelOauthOIDCAuthorizationRequest}
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelOauthOAuthAuthorizationResponse} \cr


\item status code : 201 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelOauthOAuthAuthorizationResponse
\item response headers :

\tabular{ll}{
}
}

\strong{ postAuthV1Oauth2Consentcheck } \emph{  }

\itemize{
\item \emph{ @param } org_sagebionetworks_repo_model_oauth_oidc_authorization_request \link{OrgSagebionetworksRepoModelOauthOIDCAuthorizationRequest}
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelOauthOAuthConsentGrantedResponse} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelOauthOAuthConsentGrantedResponse
\item response headers :

\tabular{ll}{
}
}

\strong{ postAuthV1Oauth2Description } \emph{  }

\itemize{
\item \emph{ @param } org_sagebionetworks_repo_model_oauth_oidc_authorization_request \link{OrgSagebionetworksRepoModelOauthOIDCAuthorizationRequest}
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelOauthOIDCAuthorizationRequestDescription} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelOauthOIDCAuthorizationRequestDescription
\item response headers :

\tabular{ll}{
}
}

\strong{ postAuthV1Oauth2Revoke } \emph{  }

\itemize{
\item \emph{ @param } verified_oauth_client_id character
\item \emph{ @param } org_sagebionetworks_repo_model_oauth_o_auth_token_revocation_request \link{OrgSagebionetworksRepoModelOauthOAuthTokenRevocationRequest}


\item status code : 204 | Void


\item response headers :

\tabular{ll}{
}
}

\strong{ postAuthV1Oauth2Token } \emph{  }

\itemize{
\item \emph{ @param } verified_oauth_client_id character
\item \emph{ @param } grant_type \link{OrgSagebionetworksRepoModelOauthOAuthGrantType}
\item \emph{ @param } code character
\item \emph{ @param } redirect_uri character
\item \emph{ @param } refresh_token character
\item \emph{ @param } scope character
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelOauthOIDCTokenResponse} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelOauthOIDCTokenResponse
\item response headers :

\tabular{ll}{
}
}

\strong{ postAuthV1Oauth2Userinfo } \emph{  }

\itemize{
\item \emph{ @param } synapse_authorization character


\item status code : 200 | Auto-generated description

\item return type : object
\item response headers :

\tabular{ll}{
}
}

\strong{ putAuthV1Oauth2AuditTokensTokenIdMetadata } \emph{  }

\itemize{
\item \emph{ @param } token_id character
\item \emph{ @param } org_sagebionetworks_repo_model_oauth_o_auth_refresh_token_information \link{OrgSagebionetworksRepoModelOauthOAuthRefreshTokenInformation}
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelOauthOAuthRefreshTokenInformation} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelOauthOAuthRefreshTokenInformation
\item response headers :

\tabular{ll}{
}
}

\strong{ putAuthV1Oauth2ClientId } \emph{  }

\itemize{
\item \emph{ @param } id character
\item \emph{ @param } org_sagebionetworks_repo_model_oauth_o_auth_client \link{OrgSagebionetworksRepoModelOauthOAuthClient}
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelOauthOAuthClient} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelOauthOAuthClient
\item response headers :

\tabular{ll}{
}
}

\strong{ putAuthV1Oauth2ClientIdVerificationPrecheck } \emph{  }

\itemize{
\item \emph{ @param } id character
\item \emph{ @param } org_sagebionetworks_repo_model_oauth_o_auth_client \link{OrgSagebionetworksRepoModelOauthOAuthClient}
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelOauthOAuthClientVerificationPrecheckResult} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelOauthOAuthClientVerificationPrecheckResult
\item response headers :

\tabular{ll}{
}
}

}
}

\examples{
\dontrun{
####################  deleteAuthV1Oauth2ClientId  ####################

library(synr)
var_id <- "id_example" # character | the ID of the client to delete

api_instance <- OpenIDConnectServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

api_instance$deleteAuthV1Oauth2ClientId(var_id)


####################  getAuthV1Oauth2AuditGrantedClients  ####################

library(synr)
var_next_page_token <- "next_page_token_example" # character |  (Optional)

api_instance <- OpenIDConnectServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getAuthV1Oauth2AuditGrantedClients(next_page_token = var_next_page_tokendata_file = "result.txt")
result <- api_instance$getAuthV1Oauth2AuditGrantedClients(next_page_token = var_next_page_token)
dput(result)


####################  getAuthV1Oauth2AuditGrantedClientsClientIdTokens  ####################

library(synr)
var_client_id <- "client_id_example" # character | 
var_next_page_token <- "next_page_token_example" # character |  (Optional)

api_instance <- OpenIDConnectServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getAuthV1Oauth2AuditGrantedClientsClientIdTokens(var_client_id, next_page_token = var_next_page_tokendata_file = "result.txt")
result <- api_instance$getAuthV1Oauth2AuditGrantedClientsClientIdTokens(var_client_id, next_page_token = var_next_page_token)
dput(result)


####################  getAuthV1Oauth2AuditTokensTokenIdMetadata  ####################

library(synr)
var_token_id <- "token_id_example" # character | 

api_instance <- OpenIDConnectServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getAuthV1Oauth2AuditTokensTokenIdMetadata(var_token_iddata_file = "result.txt")
result <- api_instance$getAuthV1Oauth2AuditTokensTokenIdMetadata(var_token_id)
dput(result)


####################  getAuthV1Oauth2Client  ####################

library(synr)
var_next_page_token <- "next_page_token_example" # character | returned along with a page of results, this is passed to   the server to retrieve the next page. (Optional)

api_instance <- OpenIDConnectServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getAuthV1Oauth2Client(next_page_token = var_next_page_tokendata_file = "result.txt")
result <- api_instance$getAuthV1Oauth2Client(next_page_token = var_next_page_token)
dput(result)


####################  getAuthV1Oauth2ClientId  ####################

library(synr)
var_id <- "id_example" # character | the ID of the client to retrieve

api_instance <- OpenIDConnectServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getAuthV1Oauth2ClientId(var_iddata_file = "result.txt")
result <- api_instance$getAuthV1Oauth2ClientId(var_id)
dput(result)


####################  getAuthV1Oauth2Jwks  ####################

library(synr)

api_instance <- OpenIDConnectServicesApi$new()

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getAuthV1Oauth2Jwks(data_file = "result.txt")
result <- api_instance$getAuthV1Oauth2Jwks()
dput(result)


####################  getAuthV1Oauth2TokenTokenIdMetadata  ####################

library(synr)
var_verified_oauth_client_id <- "verified_oauth_client_id_example" # character | 
var_token_id <- "token_id_example" # character | 

api_instance <- OpenIDConnectServicesApi$new()

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getAuthV1Oauth2TokenTokenIdMetadata(var_verified_oauth_client_id, var_token_iddata_file = "result.txt")
result <- api_instance$getAuthV1Oauth2TokenTokenIdMetadata(var_verified_oauth_client_id, var_token_id)
dput(result)


####################  getAuthV1Oauth2Userinfo  ####################

library(synr)
var_synapse_authorization <- "synapse_authorization_example" # character |  (Optional)

api_instance <- OpenIDConnectServicesApi$new()

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getAuthV1Oauth2Userinfo(synapse_authorization = var_synapse_authorizationdata_file = "result.txt")
result <- api_instance$getAuthV1Oauth2Userinfo(synapse_authorization = var_synapse_authorization)
dput(result)


####################  getAuthV1WellKnownOpenidConfiguration  ####################

library(synr)

api_instance <- OpenIDConnectServicesApi$new()

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getAuthV1WellKnownOpenidConfiguration(data_file = "result.txt")
result <- api_instance$getAuthV1WellKnownOpenidConfiguration()
dput(result)


####################  postAuthV1Oauth2AuditGrantedClientsClientIdRevoke  ####################

library(synr)
var_client_id <- "client_id_example" # character | 

api_instance <- OpenIDConnectServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

api_instance$postAuthV1Oauth2AuditGrantedClientsClientIdRevoke(var_client_id)


####################  postAuthV1Oauth2AuditTokensTokenIdRevoke  ####################

library(synr)
var_token_id <- "token_id_example" # character | 

api_instance <- OpenIDConnectServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

api_instance$postAuthV1Oauth2AuditTokensTokenIdRevoke(var_token_id)


####################  postAuthV1Oauth2Client  ####################

library(synr)
var_org_sagebionetworks_repo_model_oauth_o_auth_client <- org.sagebionetworks.repo.model.oauth.OAuthClient$new("client_id_example", "client_name_example", c("redirect_uris_example"), "verified_example", "client_uri_example", "policy_uri_example", "tos_uri_example", "sector_identifier_uri_example", "sector_identifier_example", "userinfo_signed_response_alg_example", "createdOn_example", "modifiedOn_example", "createdBy_example", "etag_example") # OrgSagebionetworksRepoModelOauthOAuthClient | 

api_instance <- OpenIDConnectServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$postAuthV1Oauth2Client(var_org_sagebionetworks_repo_model_oauth_o_auth_clientdata_file = "result.txt")
result <- api_instance$postAuthV1Oauth2Client(var_org_sagebionetworks_repo_model_oauth_o_auth_client)
dput(result)


####################  postAuthV1Oauth2ClientSecretId  ####################

library(synr)
var_id <- "id_example" # character | 

api_instance <- OpenIDConnectServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$postAuthV1Oauth2ClientSecretId(var_iddata_file = "result.txt")
result <- api_instance$postAuthV1Oauth2ClientSecretId(var_id)
dput(result)


####################  postAuthV1Oauth2Consent  ####################

library(synr)
var_org_sagebionetworks_repo_model_oauth_oidc_authorization_request <- org.sagebionetworks.repo.model.oauth.OIDCAuthorizationRequest$new("clientId_example", "scope_example", org.sagebionetworks.repo.model.oauth.OIDCClaimsRequest$new(c(key = org.sagebionetworks.repo.model.oauth.OIDCClaimsRequestDetails$new("essential_example", "value_example", c("values_example"))), c(key = org.sagebionetworks.repo.model.oauth.OIDCClaimsRequestDetails$new("essential_example", "value_example", c("values_example")))), "responseType_example", "redirectUri_example", "nonce_example", "userId_example", "authenticatedAt_example", "authorizedAt_example") # OrgSagebionetworksRepoModelOauthOIDCAuthorizationRequest | 

api_instance <- OpenIDConnectServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$postAuthV1Oauth2Consent(var_org_sagebionetworks_repo_model_oauth_oidc_authorization_requestdata_file = "result.txt")
result <- api_instance$postAuthV1Oauth2Consent(var_org_sagebionetworks_repo_model_oauth_oidc_authorization_request)
dput(result)


####################  postAuthV1Oauth2Consentcheck  ####################

library(synr)
var_org_sagebionetworks_repo_model_oauth_oidc_authorization_request <- org.sagebionetworks.repo.model.oauth.OIDCAuthorizationRequest$new("clientId_example", "scope_example", org.sagebionetworks.repo.model.oauth.OIDCClaimsRequest$new(c(key = org.sagebionetworks.repo.model.oauth.OIDCClaimsRequestDetails$new("essential_example", "value_example", c("values_example"))), c(key = org.sagebionetworks.repo.model.oauth.OIDCClaimsRequestDetails$new("essential_example", "value_example", c("values_example")))), "responseType_example", "redirectUri_example", "nonce_example", "userId_example", "authenticatedAt_example", "authorizedAt_example") # OrgSagebionetworksRepoModelOauthOIDCAuthorizationRequest | 

api_instance <- OpenIDConnectServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$postAuthV1Oauth2Consentcheck(var_org_sagebionetworks_repo_model_oauth_oidc_authorization_requestdata_file = "result.txt")
result <- api_instance$postAuthV1Oauth2Consentcheck(var_org_sagebionetworks_repo_model_oauth_oidc_authorization_request)
dput(result)


####################  postAuthV1Oauth2Description  ####################

library(synr)
var_org_sagebionetworks_repo_model_oauth_oidc_authorization_request <- org.sagebionetworks.repo.model.oauth.OIDCAuthorizationRequest$new("clientId_example", "scope_example", org.sagebionetworks.repo.model.oauth.OIDCClaimsRequest$new(c(key = org.sagebionetworks.repo.model.oauth.OIDCClaimsRequestDetails$new("essential_example", "value_example", c("values_example"))), c(key = org.sagebionetworks.repo.model.oauth.OIDCClaimsRequestDetails$new("essential_example", "value_example", c("values_example")))), "responseType_example", "redirectUri_example", "nonce_example", "userId_example", "authenticatedAt_example", "authorizedAt_example") # OrgSagebionetworksRepoModelOauthOIDCAuthorizationRequest | 

api_instance <- OpenIDConnectServicesApi$new()

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$postAuthV1Oauth2Description(var_org_sagebionetworks_repo_model_oauth_oidc_authorization_requestdata_file = "result.txt")
result <- api_instance$postAuthV1Oauth2Description(var_org_sagebionetworks_repo_model_oauth_oidc_authorization_request)
dput(result)


####################  postAuthV1Oauth2Revoke  ####################

library(synr)
var_verified_oauth_client_id <- "verified_oauth_client_id_example" # character | 
var_org_sagebionetworks_repo_model_oauth_o_auth_token_revocation_request <- org.sagebionetworks.repo.model.oauth.OAuthTokenRevocationRequest$new("token_example", "token_type_hint_example") # OrgSagebionetworksRepoModelOauthOAuthTokenRevocationRequest | 

api_instance <- OpenIDConnectServicesApi$new()

api_instance$postAuthV1Oauth2Revoke(var_verified_oauth_client_id, var_org_sagebionetworks_repo_model_oauth_o_auth_token_revocation_request)


####################  postAuthV1Oauth2Token  ####################

library(synr)
var_verified_oauth_client_id <- "verified_oauth_client_id_example" # character | 
var_grant_type <- org.sagebionetworks.repo.model.oauth.OAuthGrantType$new() # OrgSagebionetworksRepoModelOauthOAuthGrantType | authorization_code or refresh_token
var_code <- "code_example" # character | required if grant_type is authorization_code (Optional)
var_redirect_uri <- "redirect_uri_example" # character |  (Optional)
var_refresh_token <- "refresh_token_example" # character | required if grant_type is refresh_token (Optional)
var_scope <- "scope_example" # character | only provided if grant_type is refresh_token (Optional)

api_instance <- OpenIDConnectServicesApi$new()

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$postAuthV1Oauth2Token(var_verified_oauth_client_id, var_grant_type, code = var_code, redirect_uri = var_redirect_uri, refresh_token = var_refresh_token, scope = var_scopedata_file = "result.txt")
result <- api_instance$postAuthV1Oauth2Token(var_verified_oauth_client_id, var_grant_type, code = var_code, redirect_uri = var_redirect_uri, refresh_token = var_refresh_token, scope = var_scope)
dput(result)


####################  postAuthV1Oauth2Userinfo  ####################

library(synr)
var_synapse_authorization <- "synapse_authorization_example" # character |  (Optional)

api_instance <- OpenIDConnectServicesApi$new()

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$postAuthV1Oauth2Userinfo(synapse_authorization = var_synapse_authorizationdata_file = "result.txt")
result <- api_instance$postAuthV1Oauth2Userinfo(synapse_authorization = var_synapse_authorization)
dput(result)


####################  putAuthV1Oauth2AuditTokensTokenIdMetadata  ####################

library(synr)
var_token_id <- "token_id_example" # character | 
var_org_sagebionetworks_repo_model_oauth_o_auth_refresh_token_information <- org.sagebionetworks.repo.model.oauth.OAuthRefreshTokenInformation$new("tokenId_example", "clientId_example", "principalId_example", "name_example", c("scopes_example"), org.sagebionetworks.repo.model.oauth.OIDCClaimsRequest$new(c(key = org.sagebionetworks.repo.model.oauth.OIDCClaimsRequestDetails$new("essential_example", "value_example", c("values_example"))), c(key = org.sagebionetworks.repo.model.oauth.OIDCClaimsRequestDetails$new("essential_example", "value_example", c("values_example")))), "authorizedOn_example", "lastUsed_example", "modifiedOn_example", "etag_example") # OrgSagebionetworksRepoModelOauthOAuthRefreshTokenInformation | 

api_instance <- OpenIDConnectServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$putAuthV1Oauth2AuditTokensTokenIdMetadata(var_token_id, var_org_sagebionetworks_repo_model_oauth_o_auth_refresh_token_informationdata_file = "result.txt")
result <- api_instance$putAuthV1Oauth2AuditTokensTokenIdMetadata(var_token_id, var_org_sagebionetworks_repo_model_oauth_o_auth_refresh_token_information)
dput(result)


####################  putAuthV1Oauth2ClientId  ####################

library(synr)
var_id <- "id_example" # character | 
var_org_sagebionetworks_repo_model_oauth_o_auth_client <- org.sagebionetworks.repo.model.oauth.OAuthClient$new("client_id_example", "client_name_example", c("redirect_uris_example"), "verified_example", "client_uri_example", "policy_uri_example", "tos_uri_example", "sector_identifier_uri_example", "sector_identifier_example", "userinfo_signed_response_alg_example", "createdOn_example", "modifiedOn_example", "createdBy_example", "etag_example") # OrgSagebionetworksRepoModelOauthOAuthClient | 

api_instance <- OpenIDConnectServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$putAuthV1Oauth2ClientId(var_id, var_org_sagebionetworks_repo_model_oauth_o_auth_clientdata_file = "result.txt")
result <- api_instance$putAuthV1Oauth2ClientId(var_id, var_org_sagebionetworks_repo_model_oauth_o_auth_client)
dput(result)


####################  putAuthV1Oauth2ClientIdVerificationPrecheck  ####################

library(synr)
var_id <- "id_example" # character | 
var_org_sagebionetworks_repo_model_oauth_o_auth_client <- org.sagebionetworks.repo.model.oauth.OAuthClient$new("client_id_example", "client_name_example", c("redirect_uris_example"), "verified_example", "client_uri_example", "policy_uri_example", "tos_uri_example", "sector_identifier_uri_example", "sector_identifier_example", "userinfo_signed_response_alg_example", "createdOn_example", "modifiedOn_example", "createdBy_example", "etag_example") # OrgSagebionetworksRepoModelOauthOAuthClient | 

api_instance <- OpenIDConnectServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$putAuthV1Oauth2ClientIdVerificationPrecheck(var_id, var_org_sagebionetworks_repo_model_oauth_o_auth_clientdata_file = "result.txt")
result <- api_instance$putAuthV1Oauth2ClientIdVerificationPrecheck(var_id, var_org_sagebionetworks_repo_model_oauth_o_auth_client)
dput(result)


}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{api_client}}{Handles the client-server communication.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-OpenIDConnectServicesApi-new}{\code{OpenIDConnectServicesApi$new()}}
\item \href{#method-OpenIDConnectServicesApi-deleteAuthV1Oauth2ClientId}{\code{OpenIDConnectServicesApi$deleteAuthV1Oauth2ClientId()}}
\item \href{#method-OpenIDConnectServicesApi-deleteAuthV1Oauth2ClientIdWithHttpInfo}{\code{OpenIDConnectServicesApi$deleteAuthV1Oauth2ClientIdWithHttpInfo()}}
\item \href{#method-OpenIDConnectServicesApi-getAuthV1Oauth2AuditGrantedClients}{\code{OpenIDConnectServicesApi$getAuthV1Oauth2AuditGrantedClients()}}
\item \href{#method-OpenIDConnectServicesApi-getAuthV1Oauth2AuditGrantedClientsWithHttpInfo}{\code{OpenIDConnectServicesApi$getAuthV1Oauth2AuditGrantedClientsWithHttpInfo()}}
\item \href{#method-OpenIDConnectServicesApi-getAuthV1Oauth2AuditGrantedClientsClientIdTokens}{\code{OpenIDConnectServicesApi$getAuthV1Oauth2AuditGrantedClientsClientIdTokens()}}
\item \href{#method-OpenIDConnectServicesApi-getAuthV1Oauth2AuditGrantedClientsClientIdTokensWithHttpInfo}{\code{OpenIDConnectServicesApi$getAuthV1Oauth2AuditGrantedClientsClientIdTokensWithHttpInfo()}}
\item \href{#method-OpenIDConnectServicesApi-getAuthV1Oauth2AuditTokensTokenIdMetadata}{\code{OpenIDConnectServicesApi$getAuthV1Oauth2AuditTokensTokenIdMetadata()}}
\item \href{#method-OpenIDConnectServicesApi-getAuthV1Oauth2AuditTokensTokenIdMetadataWithHttpInfo}{\code{OpenIDConnectServicesApi$getAuthV1Oauth2AuditTokensTokenIdMetadataWithHttpInfo()}}
\item \href{#method-OpenIDConnectServicesApi-getAuthV1Oauth2Client}{\code{OpenIDConnectServicesApi$getAuthV1Oauth2Client()}}
\item \href{#method-OpenIDConnectServicesApi-getAuthV1Oauth2ClientWithHttpInfo}{\code{OpenIDConnectServicesApi$getAuthV1Oauth2ClientWithHttpInfo()}}
\item \href{#method-OpenIDConnectServicesApi-getAuthV1Oauth2ClientId}{\code{OpenIDConnectServicesApi$getAuthV1Oauth2ClientId()}}
\item \href{#method-OpenIDConnectServicesApi-getAuthV1Oauth2ClientIdWithHttpInfo}{\code{OpenIDConnectServicesApi$getAuthV1Oauth2ClientIdWithHttpInfo()}}
\item \href{#method-OpenIDConnectServicesApi-getAuthV1Oauth2Jwks}{\code{OpenIDConnectServicesApi$getAuthV1Oauth2Jwks()}}
\item \href{#method-OpenIDConnectServicesApi-getAuthV1Oauth2JwksWithHttpInfo}{\code{OpenIDConnectServicesApi$getAuthV1Oauth2JwksWithHttpInfo()}}
\item \href{#method-OpenIDConnectServicesApi-getAuthV1Oauth2TokenTokenIdMetadata}{\code{OpenIDConnectServicesApi$getAuthV1Oauth2TokenTokenIdMetadata()}}
\item \href{#method-OpenIDConnectServicesApi-getAuthV1Oauth2TokenTokenIdMetadataWithHttpInfo}{\code{OpenIDConnectServicesApi$getAuthV1Oauth2TokenTokenIdMetadataWithHttpInfo()}}
\item \href{#method-OpenIDConnectServicesApi-getAuthV1Oauth2Userinfo}{\code{OpenIDConnectServicesApi$getAuthV1Oauth2Userinfo()}}
\item \href{#method-OpenIDConnectServicesApi-getAuthV1Oauth2UserinfoWithHttpInfo}{\code{OpenIDConnectServicesApi$getAuthV1Oauth2UserinfoWithHttpInfo()}}
\item \href{#method-OpenIDConnectServicesApi-getAuthV1WellKnownOpenidConfiguration}{\code{OpenIDConnectServicesApi$getAuthV1WellKnownOpenidConfiguration()}}
\item \href{#method-OpenIDConnectServicesApi-getAuthV1WellKnownOpenidConfigurationWithHttpInfo}{\code{OpenIDConnectServicesApi$getAuthV1WellKnownOpenidConfigurationWithHttpInfo()}}
\item \href{#method-OpenIDConnectServicesApi-postAuthV1Oauth2AuditGrantedClientsClientIdRevoke}{\code{OpenIDConnectServicesApi$postAuthV1Oauth2AuditGrantedClientsClientIdRevoke()}}
\item \href{#method-OpenIDConnectServicesApi-postAuthV1Oauth2AuditGrantedClientsClientIdRevokeWithHttpInfo}{\code{OpenIDConnectServicesApi$postAuthV1Oauth2AuditGrantedClientsClientIdRevokeWithHttpInfo()}}
\item \href{#method-OpenIDConnectServicesApi-postAuthV1Oauth2AuditTokensTokenIdRevoke}{\code{OpenIDConnectServicesApi$postAuthV1Oauth2AuditTokensTokenIdRevoke()}}
\item \href{#method-OpenIDConnectServicesApi-postAuthV1Oauth2AuditTokensTokenIdRevokeWithHttpInfo}{\code{OpenIDConnectServicesApi$postAuthV1Oauth2AuditTokensTokenIdRevokeWithHttpInfo()}}
\item \href{#method-OpenIDConnectServicesApi-postAuthV1Oauth2Client}{\code{OpenIDConnectServicesApi$postAuthV1Oauth2Client()}}
\item \href{#method-OpenIDConnectServicesApi-postAuthV1Oauth2ClientWithHttpInfo}{\code{OpenIDConnectServicesApi$postAuthV1Oauth2ClientWithHttpInfo()}}
\item \href{#method-OpenIDConnectServicesApi-postAuthV1Oauth2ClientSecretId}{\code{OpenIDConnectServicesApi$postAuthV1Oauth2ClientSecretId()}}
\item \href{#method-OpenIDConnectServicesApi-postAuthV1Oauth2ClientSecretIdWithHttpInfo}{\code{OpenIDConnectServicesApi$postAuthV1Oauth2ClientSecretIdWithHttpInfo()}}
\item \href{#method-OpenIDConnectServicesApi-postAuthV1Oauth2Consent}{\code{OpenIDConnectServicesApi$postAuthV1Oauth2Consent()}}
\item \href{#method-OpenIDConnectServicesApi-postAuthV1Oauth2ConsentWithHttpInfo}{\code{OpenIDConnectServicesApi$postAuthV1Oauth2ConsentWithHttpInfo()}}
\item \href{#method-OpenIDConnectServicesApi-postAuthV1Oauth2Consentcheck}{\code{OpenIDConnectServicesApi$postAuthV1Oauth2Consentcheck()}}
\item \href{#method-OpenIDConnectServicesApi-postAuthV1Oauth2ConsentcheckWithHttpInfo}{\code{OpenIDConnectServicesApi$postAuthV1Oauth2ConsentcheckWithHttpInfo()}}
\item \href{#method-OpenIDConnectServicesApi-postAuthV1Oauth2Description}{\code{OpenIDConnectServicesApi$postAuthV1Oauth2Description()}}
\item \href{#method-OpenIDConnectServicesApi-postAuthV1Oauth2DescriptionWithHttpInfo}{\code{OpenIDConnectServicesApi$postAuthV1Oauth2DescriptionWithHttpInfo()}}
\item \href{#method-OpenIDConnectServicesApi-postAuthV1Oauth2Revoke}{\code{OpenIDConnectServicesApi$postAuthV1Oauth2Revoke()}}
\item \href{#method-OpenIDConnectServicesApi-postAuthV1Oauth2RevokeWithHttpInfo}{\code{OpenIDConnectServicesApi$postAuthV1Oauth2RevokeWithHttpInfo()}}
\item \href{#method-OpenIDConnectServicesApi-postAuthV1Oauth2Token}{\code{OpenIDConnectServicesApi$postAuthV1Oauth2Token()}}
\item \href{#method-OpenIDConnectServicesApi-postAuthV1Oauth2TokenWithHttpInfo}{\code{OpenIDConnectServicesApi$postAuthV1Oauth2TokenWithHttpInfo()}}
\item \href{#method-OpenIDConnectServicesApi-postAuthV1Oauth2Userinfo}{\code{OpenIDConnectServicesApi$postAuthV1Oauth2Userinfo()}}
\item \href{#method-OpenIDConnectServicesApi-postAuthV1Oauth2UserinfoWithHttpInfo}{\code{OpenIDConnectServicesApi$postAuthV1Oauth2UserinfoWithHttpInfo()}}
\item \href{#method-OpenIDConnectServicesApi-putAuthV1Oauth2AuditTokensTokenIdMetadata}{\code{OpenIDConnectServicesApi$putAuthV1Oauth2AuditTokensTokenIdMetadata()}}
\item \href{#method-OpenIDConnectServicesApi-putAuthV1Oauth2AuditTokensTokenIdMetadataWithHttpInfo}{\code{OpenIDConnectServicesApi$putAuthV1Oauth2AuditTokensTokenIdMetadataWithHttpInfo()}}
\item \href{#method-OpenIDConnectServicesApi-putAuthV1Oauth2ClientId}{\code{OpenIDConnectServicesApi$putAuthV1Oauth2ClientId()}}
\item \href{#method-OpenIDConnectServicesApi-putAuthV1Oauth2ClientIdWithHttpInfo}{\code{OpenIDConnectServicesApi$putAuthV1Oauth2ClientIdWithHttpInfo()}}
\item \href{#method-OpenIDConnectServicesApi-putAuthV1Oauth2ClientIdVerificationPrecheck}{\code{OpenIDConnectServicesApi$putAuthV1Oauth2ClientIdVerificationPrecheck()}}
\item \href{#method-OpenIDConnectServicesApi-putAuthV1Oauth2ClientIdVerificationPrecheckWithHttpInfo}{\code{OpenIDConnectServicesApi$putAuthV1Oauth2ClientIdVerificationPrecheckWithHttpInfo()}}
\item \href{#method-OpenIDConnectServicesApi-clone}{\code{OpenIDConnectServicesApi$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OpenIDConnectServicesApi-new"></a>}}
\if{latex}{\out{\hypertarget{method-OpenIDConnectServicesApi-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new OpenIDConnectServicesApi.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OpenIDConnectServicesApi$new(api_client)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{api_client}}{An instance of API client.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OpenIDConnectServicesApi-deleteAuthV1Oauth2ClientId"></a>}}
\if{latex}{\out{\hypertarget{method-OpenIDConnectServicesApi-deleteAuthV1Oauth2ClientId}{}}}
\subsection{Method \code{deleteAuthV1Oauth2ClientId()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OpenIDConnectServicesApi$deleteAuthV1Oauth2ClientId(id, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{the ID of the client to delete}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
void
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OpenIDConnectServicesApi-deleteAuthV1Oauth2ClientIdWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-OpenIDConnectServicesApi-deleteAuthV1Oauth2ClientIdWithHttpInfo}{}}}
\subsection{Method \code{deleteAuthV1Oauth2ClientIdWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OpenIDConnectServicesApi$deleteAuthV1Oauth2ClientIdWithHttpInfo(id, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{the ID of the client to delete}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (void) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OpenIDConnectServicesApi-getAuthV1Oauth2AuditGrantedClients"></a>}}
\if{latex}{\out{\hypertarget{method-OpenIDConnectServicesApi-getAuthV1Oauth2AuditGrantedClients}{}}}
\subsection{Method \code{getAuthV1Oauth2AuditGrantedClients()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OpenIDConnectServicesApi$getAuthV1Oauth2AuditGrantedClients(
  next_page_token = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{next_page_token}}{(optional) No description}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelOauthOAuthClientAuthorizationHistoryList
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OpenIDConnectServicesApi-getAuthV1Oauth2AuditGrantedClientsWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-OpenIDConnectServicesApi-getAuthV1Oauth2AuditGrantedClientsWithHttpInfo}{}}}
\subsection{Method \code{getAuthV1Oauth2AuditGrantedClientsWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OpenIDConnectServicesApi$getAuthV1Oauth2AuditGrantedClientsWithHttpInfo(
  next_page_token = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{next_page_token}}{(optional) No description}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelOauthOAuthClientAuthorizationHistoryList) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OpenIDConnectServicesApi-getAuthV1Oauth2AuditGrantedClientsClientIdTokens"></a>}}
\if{latex}{\out{\hypertarget{method-OpenIDConnectServicesApi-getAuthV1Oauth2AuditGrantedClientsClientIdTokens}{}}}
\subsection{Method \code{getAuthV1Oauth2AuditGrantedClientsClientIdTokens()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OpenIDConnectServicesApi$getAuthV1Oauth2AuditGrantedClientsClientIdTokens(
  client_id,
  next_page_token = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{client_id}}{}

\item{\code{next_page_token}}{(optional) No description}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelOauthOAuthRefreshTokenInformationList
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OpenIDConnectServicesApi-getAuthV1Oauth2AuditGrantedClientsClientIdTokensWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-OpenIDConnectServicesApi-getAuthV1Oauth2AuditGrantedClientsClientIdTokensWithHttpInfo}{}}}
\subsection{Method \code{getAuthV1Oauth2AuditGrantedClientsClientIdTokensWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OpenIDConnectServicesApi$getAuthV1Oauth2AuditGrantedClientsClientIdTokensWithHttpInfo(
  client_id,
  next_page_token = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{client_id}}{}

\item{\code{next_page_token}}{(optional) No description}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelOauthOAuthRefreshTokenInformationList) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OpenIDConnectServicesApi-getAuthV1Oauth2AuditTokensTokenIdMetadata"></a>}}
\if{latex}{\out{\hypertarget{method-OpenIDConnectServicesApi-getAuthV1Oauth2AuditTokensTokenIdMetadata}{}}}
\subsection{Method \code{getAuthV1Oauth2AuditTokensTokenIdMetadata()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OpenIDConnectServicesApi$getAuthV1Oauth2AuditTokensTokenIdMetadata(
  token_id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{token_id}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelOauthOAuthRefreshTokenInformation
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OpenIDConnectServicesApi-getAuthV1Oauth2AuditTokensTokenIdMetadataWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-OpenIDConnectServicesApi-getAuthV1Oauth2AuditTokensTokenIdMetadataWithHttpInfo}{}}}
\subsection{Method \code{getAuthV1Oauth2AuditTokensTokenIdMetadataWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OpenIDConnectServicesApi$getAuthV1Oauth2AuditTokensTokenIdMetadataWithHttpInfo(
  token_id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{token_id}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelOauthOAuthRefreshTokenInformation) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OpenIDConnectServicesApi-getAuthV1Oauth2Client"></a>}}
\if{latex}{\out{\hypertarget{method-OpenIDConnectServicesApi-getAuthV1Oauth2Client}{}}}
\subsection{Method \code{getAuthV1Oauth2Client()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OpenIDConnectServicesApi$getAuthV1Oauth2Client(
  next_page_token = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{next_page_token}}{(optional) returned along with a page of results, this is passed to   the server to retrieve the next page.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelOauthOAuthClientList
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OpenIDConnectServicesApi-getAuthV1Oauth2ClientWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-OpenIDConnectServicesApi-getAuthV1Oauth2ClientWithHttpInfo}{}}}
\subsection{Method \code{getAuthV1Oauth2ClientWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OpenIDConnectServicesApi$getAuthV1Oauth2ClientWithHttpInfo(
  next_page_token = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{next_page_token}}{(optional) returned along with a page of results, this is passed to   the server to retrieve the next page.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelOauthOAuthClientList) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OpenIDConnectServicesApi-getAuthV1Oauth2ClientId"></a>}}
\if{latex}{\out{\hypertarget{method-OpenIDConnectServicesApi-getAuthV1Oauth2ClientId}{}}}
\subsection{Method \code{getAuthV1Oauth2ClientId()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OpenIDConnectServicesApi$getAuthV1Oauth2ClientId(id, data_file = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{the ID of the client to retrieve}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelOauthOAuthClient
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OpenIDConnectServicesApi-getAuthV1Oauth2ClientIdWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-OpenIDConnectServicesApi-getAuthV1Oauth2ClientIdWithHttpInfo}{}}}
\subsection{Method \code{getAuthV1Oauth2ClientIdWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OpenIDConnectServicesApi$getAuthV1Oauth2ClientIdWithHttpInfo(
  id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{the ID of the client to retrieve}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelOauthOAuthClient) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OpenIDConnectServicesApi-getAuthV1Oauth2Jwks"></a>}}
\if{latex}{\out{\hypertarget{method-OpenIDConnectServicesApi-getAuthV1Oauth2Jwks}{}}}
\subsection{Method \code{getAuthV1Oauth2Jwks()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OpenIDConnectServicesApi$getAuthV1Oauth2Jwks(data_file = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelOauthJsonWebKeySet
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OpenIDConnectServicesApi-getAuthV1Oauth2JwksWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-OpenIDConnectServicesApi-getAuthV1Oauth2JwksWithHttpInfo}{}}}
\subsection{Method \code{getAuthV1Oauth2JwksWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OpenIDConnectServicesApi$getAuthV1Oauth2JwksWithHttpInfo(data_file = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelOauthJsonWebKeySet) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OpenIDConnectServicesApi-getAuthV1Oauth2TokenTokenIdMetadata"></a>}}
\if{latex}{\out{\hypertarget{method-OpenIDConnectServicesApi-getAuthV1Oauth2TokenTokenIdMetadata}{}}}
\subsection{Method \code{getAuthV1Oauth2TokenTokenIdMetadata()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OpenIDConnectServicesApi$getAuthV1Oauth2TokenTokenIdMetadata(
  verified_oauth_client_id,
  token_id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{verified_oauth_client_id}}{}

\item{\code{token_id}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelOauthOAuthRefreshTokenInformation
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OpenIDConnectServicesApi-getAuthV1Oauth2TokenTokenIdMetadataWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-OpenIDConnectServicesApi-getAuthV1Oauth2TokenTokenIdMetadataWithHttpInfo}{}}}
\subsection{Method \code{getAuthV1Oauth2TokenTokenIdMetadataWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OpenIDConnectServicesApi$getAuthV1Oauth2TokenTokenIdMetadataWithHttpInfo(
  verified_oauth_client_id,
  token_id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{verified_oauth_client_id}}{}

\item{\code{token_id}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelOauthOAuthRefreshTokenInformation) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OpenIDConnectServicesApi-getAuthV1Oauth2Userinfo"></a>}}
\if{latex}{\out{\hypertarget{method-OpenIDConnectServicesApi-getAuthV1Oauth2Userinfo}{}}}
\subsection{Method \code{getAuthV1Oauth2Userinfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OpenIDConnectServicesApi$getAuthV1Oauth2Userinfo(
  synapse_authorization = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{synapse_authorization}}{(optional) No description}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OpenIDConnectServicesApi-getAuthV1Oauth2UserinfoWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-OpenIDConnectServicesApi-getAuthV1Oauth2UserinfoWithHttpInfo}{}}}
\subsection{Method \code{getAuthV1Oauth2UserinfoWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OpenIDConnectServicesApi$getAuthV1Oauth2UserinfoWithHttpInfo(
  synapse_authorization = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{synapse_authorization}}{(optional) No description}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (object) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OpenIDConnectServicesApi-getAuthV1WellKnownOpenidConfiguration"></a>}}
\if{latex}{\out{\hypertarget{method-OpenIDConnectServicesApi-getAuthV1WellKnownOpenidConfiguration}{}}}
\subsection{Method \code{getAuthV1WellKnownOpenidConfiguration()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OpenIDConnectServicesApi$getAuthV1WellKnownOpenidConfiguration(
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelOauthOIDConnectConfiguration
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OpenIDConnectServicesApi-getAuthV1WellKnownOpenidConfigurationWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-OpenIDConnectServicesApi-getAuthV1WellKnownOpenidConfigurationWithHttpInfo}{}}}
\subsection{Method \code{getAuthV1WellKnownOpenidConfigurationWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OpenIDConnectServicesApi$getAuthV1WellKnownOpenidConfigurationWithHttpInfo(
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelOauthOIDConnectConfiguration) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OpenIDConnectServicesApi-postAuthV1Oauth2AuditGrantedClientsClientIdRevoke"></a>}}
\if{latex}{\out{\hypertarget{method-OpenIDConnectServicesApi-postAuthV1Oauth2AuditGrantedClientsClientIdRevoke}{}}}
\subsection{Method \code{postAuthV1Oauth2AuditGrantedClientsClientIdRevoke()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OpenIDConnectServicesApi$postAuthV1Oauth2AuditGrantedClientsClientIdRevoke(
  client_id,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{client_id}}{}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
void
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OpenIDConnectServicesApi-postAuthV1Oauth2AuditGrantedClientsClientIdRevokeWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-OpenIDConnectServicesApi-postAuthV1Oauth2AuditGrantedClientsClientIdRevokeWithHttpInfo}{}}}
\subsection{Method \code{postAuthV1Oauth2AuditGrantedClientsClientIdRevokeWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OpenIDConnectServicesApi$postAuthV1Oauth2AuditGrantedClientsClientIdRevokeWithHttpInfo(
  client_id,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{client_id}}{}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (void) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OpenIDConnectServicesApi-postAuthV1Oauth2AuditTokensTokenIdRevoke"></a>}}
\if{latex}{\out{\hypertarget{method-OpenIDConnectServicesApi-postAuthV1Oauth2AuditTokensTokenIdRevoke}{}}}
\subsection{Method \code{postAuthV1Oauth2AuditTokensTokenIdRevoke()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OpenIDConnectServicesApi$postAuthV1Oauth2AuditTokensTokenIdRevoke(
  token_id,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{token_id}}{}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
void
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OpenIDConnectServicesApi-postAuthV1Oauth2AuditTokensTokenIdRevokeWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-OpenIDConnectServicesApi-postAuthV1Oauth2AuditTokensTokenIdRevokeWithHttpInfo}{}}}
\subsection{Method \code{postAuthV1Oauth2AuditTokensTokenIdRevokeWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OpenIDConnectServicesApi$postAuthV1Oauth2AuditTokensTokenIdRevokeWithHttpInfo(
  token_id,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{token_id}}{}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (void) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OpenIDConnectServicesApi-postAuthV1Oauth2Client"></a>}}
\if{latex}{\out{\hypertarget{method-OpenIDConnectServicesApi-postAuthV1Oauth2Client}{}}}
\subsection{Method \code{postAuthV1Oauth2Client()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OpenIDConnectServicesApi$postAuthV1Oauth2Client(
  org_sagebionetworks_repo_model_oauth_o_auth_client,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org_sagebionetworks_repo_model_oauth_o_auth_client}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelOauthOAuthClient
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OpenIDConnectServicesApi-postAuthV1Oauth2ClientWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-OpenIDConnectServicesApi-postAuthV1Oauth2ClientWithHttpInfo}{}}}
\subsection{Method \code{postAuthV1Oauth2ClientWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OpenIDConnectServicesApi$postAuthV1Oauth2ClientWithHttpInfo(
  org_sagebionetworks_repo_model_oauth_o_auth_client,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org_sagebionetworks_repo_model_oauth_o_auth_client}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelOauthOAuthClient) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OpenIDConnectServicesApi-postAuthV1Oauth2ClientSecretId"></a>}}
\if{latex}{\out{\hypertarget{method-OpenIDConnectServicesApi-postAuthV1Oauth2ClientSecretId}{}}}
\subsection{Method \code{postAuthV1Oauth2ClientSecretId()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OpenIDConnectServicesApi$postAuthV1Oauth2ClientSecretId(
  id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelOauthOAuthClientIdAndSecret
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OpenIDConnectServicesApi-postAuthV1Oauth2ClientSecretIdWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-OpenIDConnectServicesApi-postAuthV1Oauth2ClientSecretIdWithHttpInfo}{}}}
\subsection{Method \code{postAuthV1Oauth2ClientSecretIdWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OpenIDConnectServicesApi$postAuthV1Oauth2ClientSecretIdWithHttpInfo(
  id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelOauthOAuthClientIdAndSecret) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OpenIDConnectServicesApi-postAuthV1Oauth2Consent"></a>}}
\if{latex}{\out{\hypertarget{method-OpenIDConnectServicesApi-postAuthV1Oauth2Consent}{}}}
\subsection{Method \code{postAuthV1Oauth2Consent()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OpenIDConnectServicesApi$postAuthV1Oauth2Consent(
  org_sagebionetworks_repo_model_oauth_oidc_authorization_request,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org_sagebionetworks_repo_model_oauth_oidc_authorization_request}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelOauthOAuthAuthorizationResponse
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OpenIDConnectServicesApi-postAuthV1Oauth2ConsentWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-OpenIDConnectServicesApi-postAuthV1Oauth2ConsentWithHttpInfo}{}}}
\subsection{Method \code{postAuthV1Oauth2ConsentWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OpenIDConnectServicesApi$postAuthV1Oauth2ConsentWithHttpInfo(
  org_sagebionetworks_repo_model_oauth_oidc_authorization_request,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org_sagebionetworks_repo_model_oauth_oidc_authorization_request}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelOauthOAuthAuthorizationResponse) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OpenIDConnectServicesApi-postAuthV1Oauth2Consentcheck"></a>}}
\if{latex}{\out{\hypertarget{method-OpenIDConnectServicesApi-postAuthV1Oauth2Consentcheck}{}}}
\subsection{Method \code{postAuthV1Oauth2Consentcheck()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OpenIDConnectServicesApi$postAuthV1Oauth2Consentcheck(
  org_sagebionetworks_repo_model_oauth_oidc_authorization_request,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org_sagebionetworks_repo_model_oauth_oidc_authorization_request}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelOauthOAuthConsentGrantedResponse
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OpenIDConnectServicesApi-postAuthV1Oauth2ConsentcheckWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-OpenIDConnectServicesApi-postAuthV1Oauth2ConsentcheckWithHttpInfo}{}}}
\subsection{Method \code{postAuthV1Oauth2ConsentcheckWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OpenIDConnectServicesApi$postAuthV1Oauth2ConsentcheckWithHttpInfo(
  org_sagebionetworks_repo_model_oauth_oidc_authorization_request,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org_sagebionetworks_repo_model_oauth_oidc_authorization_request}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelOauthOAuthConsentGrantedResponse) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OpenIDConnectServicesApi-postAuthV1Oauth2Description"></a>}}
\if{latex}{\out{\hypertarget{method-OpenIDConnectServicesApi-postAuthV1Oauth2Description}{}}}
\subsection{Method \code{postAuthV1Oauth2Description()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OpenIDConnectServicesApi$postAuthV1Oauth2Description(
  org_sagebionetworks_repo_model_oauth_oidc_authorization_request,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org_sagebionetworks_repo_model_oauth_oidc_authorization_request}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelOauthOIDCAuthorizationRequestDescription
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OpenIDConnectServicesApi-postAuthV1Oauth2DescriptionWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-OpenIDConnectServicesApi-postAuthV1Oauth2DescriptionWithHttpInfo}{}}}
\subsection{Method \code{postAuthV1Oauth2DescriptionWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OpenIDConnectServicesApi$postAuthV1Oauth2DescriptionWithHttpInfo(
  org_sagebionetworks_repo_model_oauth_oidc_authorization_request,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org_sagebionetworks_repo_model_oauth_oidc_authorization_request}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelOauthOIDCAuthorizationRequestDescription) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OpenIDConnectServicesApi-postAuthV1Oauth2Revoke"></a>}}
\if{latex}{\out{\hypertarget{method-OpenIDConnectServicesApi-postAuthV1Oauth2Revoke}{}}}
\subsection{Method \code{postAuthV1Oauth2Revoke()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OpenIDConnectServicesApi$postAuthV1Oauth2Revoke(
  verified_oauth_client_id,
  org_sagebionetworks_repo_model_oauth_o_auth_token_revocation_request,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{verified_oauth_client_id}}{}

\item{\code{org_sagebionetworks_repo_model_oauth_o_auth_token_revocation_request}}{}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
void
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OpenIDConnectServicesApi-postAuthV1Oauth2RevokeWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-OpenIDConnectServicesApi-postAuthV1Oauth2RevokeWithHttpInfo}{}}}
\subsection{Method \code{postAuthV1Oauth2RevokeWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OpenIDConnectServicesApi$postAuthV1Oauth2RevokeWithHttpInfo(
  verified_oauth_client_id,
  org_sagebionetworks_repo_model_oauth_o_auth_token_revocation_request,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{verified_oauth_client_id}}{}

\item{\code{org_sagebionetworks_repo_model_oauth_o_auth_token_revocation_request}}{}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (void) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OpenIDConnectServicesApi-postAuthV1Oauth2Token"></a>}}
\if{latex}{\out{\hypertarget{method-OpenIDConnectServicesApi-postAuthV1Oauth2Token}{}}}
\subsection{Method \code{postAuthV1Oauth2Token()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OpenIDConnectServicesApi$postAuthV1Oauth2Token(
  verified_oauth_client_id,
  grant_type,
  code = NULL,
  redirect_uri = NULL,
  refresh_token = NULL,
  scope = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{verified_oauth_client_id}}{}

\item{\code{grant_type}}{authorization_code or refresh_token}

\item{\code{code}}{(optional) required if grant_type is authorization_code}

\item{\code{redirect_uri}}{(optional) No description}

\item{\code{refresh_token}}{(optional) required if grant_type is refresh_token}

\item{\code{scope}}{(optional) only provided if grant_type is refresh_token}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelOauthOIDCTokenResponse
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OpenIDConnectServicesApi-postAuthV1Oauth2TokenWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-OpenIDConnectServicesApi-postAuthV1Oauth2TokenWithHttpInfo}{}}}
\subsection{Method \code{postAuthV1Oauth2TokenWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OpenIDConnectServicesApi$postAuthV1Oauth2TokenWithHttpInfo(
  verified_oauth_client_id,
  grant_type,
  code = NULL,
  redirect_uri = NULL,
  refresh_token = NULL,
  scope = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{verified_oauth_client_id}}{}

\item{\code{grant_type}}{authorization_code or refresh_token}

\item{\code{code}}{(optional) required if grant_type is authorization_code}

\item{\code{redirect_uri}}{(optional) No description}

\item{\code{refresh_token}}{(optional) required if grant_type is refresh_token}

\item{\code{scope}}{(optional) only provided if grant_type is refresh_token}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelOauthOIDCTokenResponse) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OpenIDConnectServicesApi-postAuthV1Oauth2Userinfo"></a>}}
\if{latex}{\out{\hypertarget{method-OpenIDConnectServicesApi-postAuthV1Oauth2Userinfo}{}}}
\subsection{Method \code{postAuthV1Oauth2Userinfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OpenIDConnectServicesApi$postAuthV1Oauth2Userinfo(
  synapse_authorization = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{synapse_authorization}}{(optional) No description}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OpenIDConnectServicesApi-postAuthV1Oauth2UserinfoWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-OpenIDConnectServicesApi-postAuthV1Oauth2UserinfoWithHttpInfo}{}}}
\subsection{Method \code{postAuthV1Oauth2UserinfoWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OpenIDConnectServicesApi$postAuthV1Oauth2UserinfoWithHttpInfo(
  synapse_authorization = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{synapse_authorization}}{(optional) No description}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (object) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OpenIDConnectServicesApi-putAuthV1Oauth2AuditTokensTokenIdMetadata"></a>}}
\if{latex}{\out{\hypertarget{method-OpenIDConnectServicesApi-putAuthV1Oauth2AuditTokensTokenIdMetadata}{}}}
\subsection{Method \code{putAuthV1Oauth2AuditTokensTokenIdMetadata()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OpenIDConnectServicesApi$putAuthV1Oauth2AuditTokensTokenIdMetadata(
  token_id,
  org_sagebionetworks_repo_model_oauth_o_auth_refresh_token_information,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{token_id}}{}

\item{\code{org_sagebionetworks_repo_model_oauth_o_auth_refresh_token_information}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelOauthOAuthRefreshTokenInformation
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OpenIDConnectServicesApi-putAuthV1Oauth2AuditTokensTokenIdMetadataWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-OpenIDConnectServicesApi-putAuthV1Oauth2AuditTokensTokenIdMetadataWithHttpInfo}{}}}
\subsection{Method \code{putAuthV1Oauth2AuditTokensTokenIdMetadataWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OpenIDConnectServicesApi$putAuthV1Oauth2AuditTokensTokenIdMetadataWithHttpInfo(
  token_id,
  org_sagebionetworks_repo_model_oauth_o_auth_refresh_token_information,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{token_id}}{}

\item{\code{org_sagebionetworks_repo_model_oauth_o_auth_refresh_token_information}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelOauthOAuthRefreshTokenInformation) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OpenIDConnectServicesApi-putAuthV1Oauth2ClientId"></a>}}
\if{latex}{\out{\hypertarget{method-OpenIDConnectServicesApi-putAuthV1Oauth2ClientId}{}}}
\subsection{Method \code{putAuthV1Oauth2ClientId()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OpenIDConnectServicesApi$putAuthV1Oauth2ClientId(
  id,
  org_sagebionetworks_repo_model_oauth_o_auth_client,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{}

\item{\code{org_sagebionetworks_repo_model_oauth_o_auth_client}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelOauthOAuthClient
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OpenIDConnectServicesApi-putAuthV1Oauth2ClientIdWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-OpenIDConnectServicesApi-putAuthV1Oauth2ClientIdWithHttpInfo}{}}}
\subsection{Method \code{putAuthV1Oauth2ClientIdWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OpenIDConnectServicesApi$putAuthV1Oauth2ClientIdWithHttpInfo(
  id,
  org_sagebionetworks_repo_model_oauth_o_auth_client,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{}

\item{\code{org_sagebionetworks_repo_model_oauth_o_auth_client}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelOauthOAuthClient) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OpenIDConnectServicesApi-putAuthV1Oauth2ClientIdVerificationPrecheck"></a>}}
\if{latex}{\out{\hypertarget{method-OpenIDConnectServicesApi-putAuthV1Oauth2ClientIdVerificationPrecheck}{}}}
\subsection{Method \code{putAuthV1Oauth2ClientIdVerificationPrecheck()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OpenIDConnectServicesApi$putAuthV1Oauth2ClientIdVerificationPrecheck(
  id,
  org_sagebionetworks_repo_model_oauth_o_auth_client,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{}

\item{\code{org_sagebionetworks_repo_model_oauth_o_auth_client}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelOauthOAuthClientVerificationPrecheckResult
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OpenIDConnectServicesApi-putAuthV1Oauth2ClientIdVerificationPrecheckWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-OpenIDConnectServicesApi-putAuthV1Oauth2ClientIdVerificationPrecheckWithHttpInfo}{}}}
\subsection{Method \code{putAuthV1Oauth2ClientIdVerificationPrecheckWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OpenIDConnectServicesApi$putAuthV1Oauth2ClientIdVerificationPrecheckWithHttpInfo(
  id,
  org_sagebionetworks_repo_model_oauth_o_auth_client,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{}

\item{\code{org_sagebionetworks_repo_model_oauth_o_auth_client}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelOauthOAuthClientVerificationPrecheckResult) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OpenIDConnectServicesApi-clone"></a>}}
\if{latex}{\out{\hypertarget{method-OpenIDConnectServicesApi-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OpenIDConnectServicesApi$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
