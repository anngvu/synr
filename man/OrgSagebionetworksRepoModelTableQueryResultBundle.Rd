% Generated by roxygen2: do not edit by hand
% Please edit documentation in
%   R/org_sagebionetworks_repo_model_table_query_result_bundle.R
\docType{class}
\name{OrgSagebionetworksRepoModelTableQueryResultBundle}
\alias{OrgSagebionetworksRepoModelTableQueryResultBundle}
\title{OrgSagebionetworksRepoModelTableQueryResultBundle}
\format{
An \code{R6Class} generator object
}
\description{
A bundle of information about a query result.

OrgSagebionetworksRepoModelTableQueryResultBundle Class
}
\details{
Create a new OrgSagebionetworksRepoModelTableQueryResultBundle
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{concreteType}}{character}

\item{\code{queryResult}}{\link{OrgSagebionetworksRepoModelTableQueryResult} [optional]}

\item{\code{queryCount}}{integer [optional]}

\item{\code{selectColumns}}{The list of SelectColumns from the select clause. Use mask = 0x4 to include in the bundle. list(\link{OrgSagebionetworksRepoModelTableSelectColumn}) [optional]}

\item{\code{maxRowsPerPage}}{integer [optional]}

\item{\code{columnModels}}{The list of ColumnModels for the table. Use mask = 0x10 to include in the bundle. list(\link{OrgSagebionetworksRepoModelTableColumnModel}) [optional]}

\item{\code{facets}}{The list of facets for the search results list(\link{OrgSagebionetworksRepoModelTableFacetColumnResult}) [optional]}

\item{\code{sumFileSizes}}{\link{OrgSagebionetworksRepoModelTableSumFileSizes} [optional]}

\item{\code{lastUpdatedOn}}{character [optional]}

\item{\code{combinedSql}}{character [optional]}

\item{\code{actionsRequired}}{The first 50 actions required to download the files that are part of the query. Use mask = 0x200 to include them in the bundle. list(\link{OrgSagebionetworksRepoModelDownloadActionRequiredCount}) [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-OrgSagebionetworksRepoModelTableQueryResultBundle-new}{\code{OrgSagebionetworksRepoModelTableQueryResultBundle$new()}}
\item \href{#method-OrgSagebionetworksRepoModelTableQueryResultBundle-toJSON}{\code{OrgSagebionetworksRepoModelTableQueryResultBundle$toJSON()}}
\item \href{#method-OrgSagebionetworksRepoModelTableQueryResultBundle-fromJSON}{\code{OrgSagebionetworksRepoModelTableQueryResultBundle$fromJSON()}}
\item \href{#method-OrgSagebionetworksRepoModelTableQueryResultBundle-toJSONString}{\code{OrgSagebionetworksRepoModelTableQueryResultBundle$toJSONString()}}
\item \href{#method-OrgSagebionetworksRepoModelTableQueryResultBundle-fromJSONString}{\code{OrgSagebionetworksRepoModelTableQueryResultBundle$fromJSONString()}}
\item \href{#method-OrgSagebionetworksRepoModelTableQueryResultBundle-validateJSON}{\code{OrgSagebionetworksRepoModelTableQueryResultBundle$validateJSON()}}
\item \href{#method-OrgSagebionetworksRepoModelTableQueryResultBundle-toString}{\code{OrgSagebionetworksRepoModelTableQueryResultBundle$toString()}}
\item \href{#method-OrgSagebionetworksRepoModelTableQueryResultBundle-isValid}{\code{OrgSagebionetworksRepoModelTableQueryResultBundle$isValid()}}
\item \href{#method-OrgSagebionetworksRepoModelTableQueryResultBundle-getInvalidFields}{\code{OrgSagebionetworksRepoModelTableQueryResultBundle$getInvalidFields()}}
\item \href{#method-OrgSagebionetworksRepoModelTableQueryResultBundle-print}{\code{OrgSagebionetworksRepoModelTableQueryResultBundle$print()}}
\item \href{#method-OrgSagebionetworksRepoModelTableQueryResultBundle-clone}{\code{OrgSagebionetworksRepoModelTableQueryResultBundle$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableQueryResultBundle-new"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableQueryResultBundle-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new OrgSagebionetworksRepoModelTableQueryResultBundle class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableQueryResultBundle$new(
  concreteType,
  queryResult = NULL,
  queryCount = NULL,
  selectColumns = NULL,
  maxRowsPerPage = NULL,
  columnModels = NULL,
  facets = NULL,
  sumFileSizes = NULL,
  lastUpdatedOn = NULL,
  combinedSql = NULL,
  actionsRequired = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{concreteType}}{concreteType}

\item{\code{queryResult}}{queryResult}

\item{\code{queryCount}}{queryCount}

\item{\code{selectColumns}}{The list of SelectColumns from the select clause. Use mask = 0x4 to include in the bundle.}

\item{\code{maxRowsPerPage}}{maxRowsPerPage}

\item{\code{columnModels}}{The list of ColumnModels for the table. Use mask = 0x10 to include in the bundle.}

\item{\code{facets}}{The list of facets for the search results}

\item{\code{sumFileSizes}}{sumFileSizes}

\item{\code{lastUpdatedOn}}{lastUpdatedOn}

\item{\code{combinedSql}}{combinedSql}

\item{\code{actionsRequired}}{The first 50 actions required to download the files that are part of the query. Use mask = 0x200 to include them in the bundle.}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableQueryResultBundle-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableQueryResultBundle-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableQueryResultBundle$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
OrgSagebionetworksRepoModelTableQueryResultBundle in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableQueryResultBundle-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableQueryResultBundle-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of OrgSagebionetworksRepoModelTableQueryResultBundle
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableQueryResultBundle$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of OrgSagebionetworksRepoModelTableQueryResultBundle
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableQueryResultBundle-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableQueryResultBundle-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableQueryResultBundle$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
OrgSagebionetworksRepoModelTableQueryResultBundle in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableQueryResultBundle-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableQueryResultBundle-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of OrgSagebionetworksRepoModelTableQueryResultBundle
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableQueryResultBundle$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of OrgSagebionetworksRepoModelTableQueryResultBundle
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableQueryResultBundle-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableQueryResultBundle-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to OrgSagebionetworksRepoModelTableQueryResultBundle and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableQueryResultBundle$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableQueryResultBundle-toString"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableQueryResultBundle-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableQueryResultBundle$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of OrgSagebionetworksRepoModelTableQueryResultBundle
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableQueryResultBundle-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableQueryResultBundle-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableQueryResultBundle$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableQueryResultBundle-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableQueryResultBundle-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableQueryResultBundle$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableQueryResultBundle-print"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableQueryResultBundle-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableQueryResultBundle$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableQueryResultBundle-clone"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableQueryResultBundle-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableQueryResultBundle$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
