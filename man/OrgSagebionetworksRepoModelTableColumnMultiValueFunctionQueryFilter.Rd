% Generated by roxygen2: do not edit by hand
% Please edit documentation in
%   R/org_sagebionetworks_repo_model_table_column_multi_value_function_query_filter.R
\docType{class}
\name{OrgSagebionetworksRepoModelTableColumnMultiValueFunctionQueryFilter}
\alias{OrgSagebionetworksRepoModelTableColumnMultiValueFunctionQueryFilter}
\title{OrgSagebionetworksRepoModelTableColumnMultiValueFunctionQueryFilter}
\format{
An \code{R6Class} generator object
}
\description{
A filter that applies multi-value columns functions.

OrgSagebionetworksRepoModelTableColumnMultiValueFunctionQueryFilter Class
}
\details{
Create a new OrgSagebionetworksRepoModelTableColumnMultiValueFunctionQueryFilter
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{concreteType}}{character}

\item{\code{isDefiningCondition}}{character [optional]}

\item{\code{values}}{Values to be used with the filter. list(character) [optional]}

\item{\code{columnName}}{character [optional]}

\item{\code{function}}{character [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-OrgSagebionetworksRepoModelTableColumnMultiValueFunctionQueryFilter-new}{\code{OrgSagebionetworksRepoModelTableColumnMultiValueFunctionQueryFilter$new()}}
\item \href{#method-OrgSagebionetworksRepoModelTableColumnMultiValueFunctionQueryFilter-toJSON}{\code{OrgSagebionetworksRepoModelTableColumnMultiValueFunctionQueryFilter$toJSON()}}
\item \href{#method-OrgSagebionetworksRepoModelTableColumnMultiValueFunctionQueryFilter-fromJSON}{\code{OrgSagebionetworksRepoModelTableColumnMultiValueFunctionQueryFilter$fromJSON()}}
\item \href{#method-OrgSagebionetworksRepoModelTableColumnMultiValueFunctionQueryFilter-toJSONString}{\code{OrgSagebionetworksRepoModelTableColumnMultiValueFunctionQueryFilter$toJSONString()}}
\item \href{#method-OrgSagebionetworksRepoModelTableColumnMultiValueFunctionQueryFilter-fromJSONString}{\code{OrgSagebionetworksRepoModelTableColumnMultiValueFunctionQueryFilter$fromJSONString()}}
\item \href{#method-OrgSagebionetworksRepoModelTableColumnMultiValueFunctionQueryFilter-validateJSON}{\code{OrgSagebionetworksRepoModelTableColumnMultiValueFunctionQueryFilter$validateJSON()}}
\item \href{#method-OrgSagebionetworksRepoModelTableColumnMultiValueFunctionQueryFilter-toString}{\code{OrgSagebionetworksRepoModelTableColumnMultiValueFunctionQueryFilter$toString()}}
\item \href{#method-OrgSagebionetworksRepoModelTableColumnMultiValueFunctionQueryFilter-isValid}{\code{OrgSagebionetworksRepoModelTableColumnMultiValueFunctionQueryFilter$isValid()}}
\item \href{#method-OrgSagebionetworksRepoModelTableColumnMultiValueFunctionQueryFilter-getInvalidFields}{\code{OrgSagebionetworksRepoModelTableColumnMultiValueFunctionQueryFilter$getInvalidFields()}}
\item \href{#method-OrgSagebionetworksRepoModelTableColumnMultiValueFunctionQueryFilter-print}{\code{OrgSagebionetworksRepoModelTableColumnMultiValueFunctionQueryFilter$print()}}
\item \href{#method-OrgSagebionetworksRepoModelTableColumnMultiValueFunctionQueryFilter-clone}{\code{OrgSagebionetworksRepoModelTableColumnMultiValueFunctionQueryFilter$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableColumnMultiValueFunctionQueryFilter-new"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableColumnMultiValueFunctionQueryFilter-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new OrgSagebionetworksRepoModelTableColumnMultiValueFunctionQueryFilter class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableColumnMultiValueFunctionQueryFilter$new(
  concreteType,
  isDefiningCondition = NULL,
  values = NULL,
  columnName = NULL,
  `function` = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{concreteType}}{concreteType}

\item{\code{isDefiningCondition}}{isDefiningCondition}

\item{\code{values}}{Values to be used with the filter.}

\item{\code{columnName}}{columnName}

\item{\code{function}}{function}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableColumnMultiValueFunctionQueryFilter-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableColumnMultiValueFunctionQueryFilter-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableColumnMultiValueFunctionQueryFilter$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
OrgSagebionetworksRepoModelTableColumnMultiValueFunctionQueryFilter in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableColumnMultiValueFunctionQueryFilter-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableColumnMultiValueFunctionQueryFilter-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of OrgSagebionetworksRepoModelTableColumnMultiValueFunctionQueryFilter
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableColumnMultiValueFunctionQueryFilter$fromJSON(
  input_json
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of OrgSagebionetworksRepoModelTableColumnMultiValueFunctionQueryFilter
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableColumnMultiValueFunctionQueryFilter-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableColumnMultiValueFunctionQueryFilter-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableColumnMultiValueFunctionQueryFilter$toJSONString(
  
)}\if{html}{\out{</div>}}
}

\subsection{Returns}{
OrgSagebionetworksRepoModelTableColumnMultiValueFunctionQueryFilter in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableColumnMultiValueFunctionQueryFilter-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableColumnMultiValueFunctionQueryFilter-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of OrgSagebionetworksRepoModelTableColumnMultiValueFunctionQueryFilter
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableColumnMultiValueFunctionQueryFilter$fromJSONString(
  input_json
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of OrgSagebionetworksRepoModelTableColumnMultiValueFunctionQueryFilter
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableColumnMultiValueFunctionQueryFilter-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableColumnMultiValueFunctionQueryFilter-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to OrgSagebionetworksRepoModelTableColumnMultiValueFunctionQueryFilter and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableColumnMultiValueFunctionQueryFilter$validateJSON(
  input
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableColumnMultiValueFunctionQueryFilter-toString"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableColumnMultiValueFunctionQueryFilter-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableColumnMultiValueFunctionQueryFilter$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of OrgSagebionetworksRepoModelTableColumnMultiValueFunctionQueryFilter
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableColumnMultiValueFunctionQueryFilter-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableColumnMultiValueFunctionQueryFilter-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableColumnMultiValueFunctionQueryFilter$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableColumnMultiValueFunctionQueryFilter-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableColumnMultiValueFunctionQueryFilter-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableColumnMultiValueFunctionQueryFilter$getInvalidFields(
  
)}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableColumnMultiValueFunctionQueryFilter-print"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableColumnMultiValueFunctionQueryFilter-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableColumnMultiValueFunctionQueryFilter$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableColumnMultiValueFunctionQueryFilter-clone"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableColumnMultiValueFunctionQueryFilter-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableColumnMultiValueFunctionQueryFilter$clone(
  deep = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
