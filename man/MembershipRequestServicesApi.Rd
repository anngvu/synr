% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/membership_request_services_api.R
\docType{class}
\name{MembershipRequestServicesApi}
\alias{MembershipRequestServicesApi}
\title{MembershipRequestServices operations}
\format{
An \code{R6Class} generator object
}
\description{
MembershipRequestServicesApi
}
\details{
Synapse REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: v1
Generated by: https://openapi-generator.tech
}
\section{Methods}{

\describe{
\strong{ deleteRepoV1MembershipRequestId } \emph{  }

\itemize{
\item \emph{ @param } id character


\item status code : 204 | Void


\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1MembershipRequestId } \emph{  }

\itemize{
\item \emph{ @param } id character
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelMembershipRequest} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelMembershipRequest
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1MembershipRequestOpenRequestCount } \emph{  }

\itemize{
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelCount} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelCount
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1TeamIdOpenRequest } \emph{  }

\itemize{
\item \emph{ @param } id character
\item \emph{ @param } requestor_id character
\item \emph{ @param } limit integer
\item \emph{ @param } offset integer
\item \emph{ @returnType } \link{PaginatedResultsOfMembershipRequest} \cr


\item status code : 200 | Auto-generated description

\item return type : PaginatedResultsOfMembershipRequest
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1UserIdOpenRequest } \emph{  }

\itemize{
\item \emph{ @param } id character
\item \emph{ @param } team_id character
\item \emph{ @param } limit integer
\item \emph{ @param } offset integer
\item \emph{ @returnType } \link{PaginatedResultsOfMembershipRequest} \cr


\item status code : 200 | Auto-generated description

\item return type : PaginatedResultsOfMembershipRequest
\item response headers :

\tabular{ll}{
}
}

\strong{ postRepoV1MembershipRequest } \emph{  }

\itemize{
\item \emph{ @param } accept_request_endpoint character
\item \emph{ @param } notification_unsubscribe_endpoint character
\item \emph{ @param } org_sagebionetworks_repo_model_membership_request \link{OrgSagebionetworksRepoModelMembershipRequest}
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelMembershipRequest} \cr


\item status code : 201 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelMembershipRequest
\item response headers :

\tabular{ll}{
}
}

}
}

\examples{
\dontrun{
####################  deleteRepoV1MembershipRequestId  ####################

library(synr)
var_id <- "id_example" # character | 

api_instance <- MembershipRequestServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

api_instance$deleteRepoV1MembershipRequestId(var_id)


####################  getRepoV1MembershipRequestId  ####################

library(synr)
var_id <- "id_example" # character | the Team ID

api_instance <- MembershipRequestServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1MembershipRequestId(var_iddata_file = "result.txt")
result <- api_instance$getRepoV1MembershipRequestId(var_id)
dput(result)


####################  getRepoV1MembershipRequestOpenRequestCount  ####################

library(synr)

api_instance <- MembershipRequestServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1MembershipRequestOpenRequestCount(data_file = "result.txt")
result <- api_instance$getRepoV1MembershipRequestOpenRequestCount()
dput(result)


####################  getRepoV1TeamIdOpenRequest  ####################

library(synr)
var_id <- "id_example" # character | Team ID
var_requestor_id <- "requestor_id_example" # character | the ID of the user requesting admission to the Team (Optional)
var_limit <- 56 # integer | the maximum number of requests to return (default 10) (Optional)
var_offset <- 56 # integer | the starting index of the returned results (default 0) (Optional)

api_instance <- MembershipRequestServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1TeamIdOpenRequest(var_id, requestor_id = var_requestor_id, limit = var_limit, offset = var_offsetdata_file = "result.txt")
result <- api_instance$getRepoV1TeamIdOpenRequest(var_id, requestor_id = var_requestor_id, limit = var_limit, offset = var_offset)
dput(result)


####################  getRepoV1UserIdOpenRequest  ####################

library(synr)
var_id <- "id_example" # character | User ID
var_team_id <- "team_id_example" # character |  (Optional)
var_limit <- 56 # integer | the maximum number of requests to return (default 10) (Optional)
var_offset <- 56 # integer | the starting index of the returned results (default 0) (Optional)

api_instance <- MembershipRequestServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1UserIdOpenRequest(var_id, team_id = var_team_id, limit = var_limit, offset = var_offsetdata_file = "result.txt")
result <- api_instance$getRepoV1UserIdOpenRequest(var_id, team_id = var_team_id, limit = var_limit, offset = var_offset)
dput(result)


####################  postRepoV1MembershipRequest  ####################

library(synr)
var_accept_request_endpoint <- "accept_request_endpoint_example" # character | The portal end-point for one-click acceptance of the membership  request.  A signed, serialized token is appended to create the complete:  ,<a href=\"${org.sagebionetworks.repo.model.JoinTeamSignedToken}\">,JoinTeamSignedToken,</a>,  In normal operation, this parameter should be omitted.
var_notification_unsubscribe_endpoint <- "notification_unsubscribe_endpoint_example" # character | The portal prefix for one-click email unsubscription.  A signed, serialized token is appended to create the complete:  ,<a href=\"${org.sagebionetworks.repo.model.message.NotificationSettingsSignedToken}\">,NotificationSettingsSignedToken,</a>,.  In normal operation, this parameter should be omitted.
var_org_sagebionetworks_repo_model_membership_request <- org.sagebionetworks.repo.model.MembershipRequest$new("id_example", "teamId_example", "userId_example", "message_example", "expiresOn_example", "createdOn_example", "createdBy_example") # OrgSagebionetworksRepoModelMembershipRequest | 

api_instance <- MembershipRequestServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$postRepoV1MembershipRequest(var_accept_request_endpoint, var_notification_unsubscribe_endpoint, var_org_sagebionetworks_repo_model_membership_requestdata_file = "result.txt")
result <- api_instance$postRepoV1MembershipRequest(var_accept_request_endpoint, var_notification_unsubscribe_endpoint, var_org_sagebionetworks_repo_model_membership_request)
dput(result)


}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{api_client}}{Handles the client-server communication.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-MembershipRequestServicesApi-new}{\code{MembershipRequestServicesApi$new()}}
\item \href{#method-MembershipRequestServicesApi-deleteRepoV1MembershipRequestId}{\code{MembershipRequestServicesApi$deleteRepoV1MembershipRequestId()}}
\item \href{#method-MembershipRequestServicesApi-deleteRepoV1MembershipRequestIdWithHttpInfo}{\code{MembershipRequestServicesApi$deleteRepoV1MembershipRequestIdWithHttpInfo()}}
\item \href{#method-MembershipRequestServicesApi-getRepoV1MembershipRequestId}{\code{MembershipRequestServicesApi$getRepoV1MembershipRequestId()}}
\item \href{#method-MembershipRequestServicesApi-getRepoV1MembershipRequestIdWithHttpInfo}{\code{MembershipRequestServicesApi$getRepoV1MembershipRequestIdWithHttpInfo()}}
\item \href{#method-MembershipRequestServicesApi-getRepoV1MembershipRequestOpenRequestCount}{\code{MembershipRequestServicesApi$getRepoV1MembershipRequestOpenRequestCount()}}
\item \href{#method-MembershipRequestServicesApi-getRepoV1MembershipRequestOpenRequestCountWithHttpInfo}{\code{MembershipRequestServicesApi$getRepoV1MembershipRequestOpenRequestCountWithHttpInfo()}}
\item \href{#method-MembershipRequestServicesApi-getRepoV1TeamIdOpenRequest}{\code{MembershipRequestServicesApi$getRepoV1TeamIdOpenRequest()}}
\item \href{#method-MembershipRequestServicesApi-getRepoV1TeamIdOpenRequestWithHttpInfo}{\code{MembershipRequestServicesApi$getRepoV1TeamIdOpenRequestWithHttpInfo()}}
\item \href{#method-MembershipRequestServicesApi-getRepoV1UserIdOpenRequest}{\code{MembershipRequestServicesApi$getRepoV1UserIdOpenRequest()}}
\item \href{#method-MembershipRequestServicesApi-getRepoV1UserIdOpenRequestWithHttpInfo}{\code{MembershipRequestServicesApi$getRepoV1UserIdOpenRequestWithHttpInfo()}}
\item \href{#method-MembershipRequestServicesApi-postRepoV1MembershipRequest}{\code{MembershipRequestServicesApi$postRepoV1MembershipRequest()}}
\item \href{#method-MembershipRequestServicesApi-postRepoV1MembershipRequestWithHttpInfo}{\code{MembershipRequestServicesApi$postRepoV1MembershipRequestWithHttpInfo()}}
\item \href{#method-MembershipRequestServicesApi-clone}{\code{MembershipRequestServicesApi$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MembershipRequestServicesApi-new"></a>}}
\if{latex}{\out{\hypertarget{method-MembershipRequestServicesApi-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new MembershipRequestServicesApi.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MembershipRequestServicesApi$new(api_client)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{api_client}}{An instance of API client.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MembershipRequestServicesApi-deleteRepoV1MembershipRequestId"></a>}}
\if{latex}{\out{\hypertarget{method-MembershipRequestServicesApi-deleteRepoV1MembershipRequestId}{}}}
\subsection{Method \code{deleteRepoV1MembershipRequestId()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MembershipRequestServicesApi$deleteRepoV1MembershipRequestId(id, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
void
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MembershipRequestServicesApi-deleteRepoV1MembershipRequestIdWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-MembershipRequestServicesApi-deleteRepoV1MembershipRequestIdWithHttpInfo}{}}}
\subsection{Method \code{deleteRepoV1MembershipRequestIdWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MembershipRequestServicesApi$deleteRepoV1MembershipRequestIdWithHttpInfo(
  id,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (void) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MembershipRequestServicesApi-getRepoV1MembershipRequestId"></a>}}
\if{latex}{\out{\hypertarget{method-MembershipRequestServicesApi-getRepoV1MembershipRequestId}{}}}
\subsection{Method \code{getRepoV1MembershipRequestId()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MembershipRequestServicesApi$getRepoV1MembershipRequestId(
  id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{the Team ID}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelMembershipRequest
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MembershipRequestServicesApi-getRepoV1MembershipRequestIdWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-MembershipRequestServicesApi-getRepoV1MembershipRequestIdWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1MembershipRequestIdWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MembershipRequestServicesApi$getRepoV1MembershipRequestIdWithHttpInfo(
  id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{the Team ID}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelMembershipRequest) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MembershipRequestServicesApi-getRepoV1MembershipRequestOpenRequestCount"></a>}}
\if{latex}{\out{\hypertarget{method-MembershipRequestServicesApi-getRepoV1MembershipRequestOpenRequestCount}{}}}
\subsection{Method \code{getRepoV1MembershipRequestOpenRequestCount()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MembershipRequestServicesApi$getRepoV1MembershipRequestOpenRequestCount(
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelCount
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MembershipRequestServicesApi-getRepoV1MembershipRequestOpenRequestCountWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-MembershipRequestServicesApi-getRepoV1MembershipRequestOpenRequestCountWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1MembershipRequestOpenRequestCountWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MembershipRequestServicesApi$getRepoV1MembershipRequestOpenRequestCountWithHttpInfo(
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelCount) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MembershipRequestServicesApi-getRepoV1TeamIdOpenRequest"></a>}}
\if{latex}{\out{\hypertarget{method-MembershipRequestServicesApi-getRepoV1TeamIdOpenRequest}{}}}
\subsection{Method \code{getRepoV1TeamIdOpenRequest()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MembershipRequestServicesApi$getRepoV1TeamIdOpenRequest(
  id,
  requestor_id = NULL,
  limit = NULL,
  offset = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{Team ID}

\item{\code{requestor_id}}{(optional) the ID of the user requesting admission to the Team}

\item{\code{limit}}{(optional) the maximum number of requests to return (default 10)}

\item{\code{offset}}{(optional) the starting index of the returned results (default 0)}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
PaginatedResultsOfMembershipRequest
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MembershipRequestServicesApi-getRepoV1TeamIdOpenRequestWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-MembershipRequestServicesApi-getRepoV1TeamIdOpenRequestWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1TeamIdOpenRequestWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MembershipRequestServicesApi$getRepoV1TeamIdOpenRequestWithHttpInfo(
  id,
  requestor_id = NULL,
  limit = NULL,
  offset = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{Team ID}

\item{\code{requestor_id}}{(optional) the ID of the user requesting admission to the Team}

\item{\code{limit}}{(optional) the maximum number of requests to return (default 10)}

\item{\code{offset}}{(optional) the starting index of the returned results (default 0)}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (PaginatedResultsOfMembershipRequest) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MembershipRequestServicesApi-getRepoV1UserIdOpenRequest"></a>}}
\if{latex}{\out{\hypertarget{method-MembershipRequestServicesApi-getRepoV1UserIdOpenRequest}{}}}
\subsection{Method \code{getRepoV1UserIdOpenRequest()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MembershipRequestServicesApi$getRepoV1UserIdOpenRequest(
  id,
  team_id = NULL,
  limit = NULL,
  offset = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{User ID}

\item{\code{team_id}}{(optional) No description}

\item{\code{limit}}{(optional) the maximum number of requests to return (default 10)}

\item{\code{offset}}{(optional) the starting index of the returned results (default 0)}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
PaginatedResultsOfMembershipRequest
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MembershipRequestServicesApi-getRepoV1UserIdOpenRequestWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-MembershipRequestServicesApi-getRepoV1UserIdOpenRequestWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1UserIdOpenRequestWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MembershipRequestServicesApi$getRepoV1UserIdOpenRequestWithHttpInfo(
  id,
  team_id = NULL,
  limit = NULL,
  offset = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{User ID}

\item{\code{team_id}}{(optional) No description}

\item{\code{limit}}{(optional) the maximum number of requests to return (default 10)}

\item{\code{offset}}{(optional) the starting index of the returned results (default 0)}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (PaginatedResultsOfMembershipRequest) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MembershipRequestServicesApi-postRepoV1MembershipRequest"></a>}}
\if{latex}{\out{\hypertarget{method-MembershipRequestServicesApi-postRepoV1MembershipRequest}{}}}
\subsection{Method \code{postRepoV1MembershipRequest()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MembershipRequestServicesApi$postRepoV1MembershipRequest(
  accept_request_endpoint,
  notification_unsubscribe_endpoint,
  org_sagebionetworks_repo_model_membership_request,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{accept_request_endpoint}}{The portal end-point for one-click acceptance of the membership  request.  A signed, serialized token is appended to create the complete:  ,<a href=\"${org.sagebionetworks.repo.model.JoinTeamSignedToken}\">,JoinTeamSignedToken,</a>,  In normal operation, this parameter should be omitted.}

\item{\code{notification_unsubscribe_endpoint}}{The portal prefix for one-click email unsubscription.  A signed, serialized token is appended to create the complete:  ,<a href=\"${org.sagebionetworks.repo.model.message.NotificationSettingsSignedToken}\">,NotificationSettingsSignedToken,</a>,.  In normal operation, this parameter should be omitted.}

\item{\code{org_sagebionetworks_repo_model_membership_request}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelMembershipRequest
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MembershipRequestServicesApi-postRepoV1MembershipRequestWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-MembershipRequestServicesApi-postRepoV1MembershipRequestWithHttpInfo}{}}}
\subsection{Method \code{postRepoV1MembershipRequestWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MembershipRequestServicesApi$postRepoV1MembershipRequestWithHttpInfo(
  accept_request_endpoint,
  notification_unsubscribe_endpoint,
  org_sagebionetworks_repo_model_membership_request,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{accept_request_endpoint}}{The portal end-point for one-click acceptance of the membership  request.  A signed, serialized token is appended to create the complete:  ,<a href=\"${org.sagebionetworks.repo.model.JoinTeamSignedToken}\">,JoinTeamSignedToken,</a>,  In normal operation, this parameter should be omitted.}

\item{\code{notification_unsubscribe_endpoint}}{The portal prefix for one-click email unsubscription.  A signed, serialized token is appended to create the complete:  ,<a href=\"${org.sagebionetworks.repo.model.message.NotificationSettingsSignedToken}\">,NotificationSettingsSignedToken,</a>,.  In normal operation, this parameter should be omitted.}

\item{\code{org_sagebionetworks_repo_model_membership_request}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelMembershipRequest) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MembershipRequestServicesApi-clone"></a>}}
\if{latex}{\out{\hypertarget{method-MembershipRequestServicesApi-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MembershipRequestServicesApi$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
