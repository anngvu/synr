% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/list_wrapper_of_upload_destination_location.R
\docType{class}
\name{ListWrapperOfUploadDestinationLocation}
\alias{ListWrapperOfUploadDestinationLocation}
\title{ListWrapperOfUploadDestinationLocation}
\format{
An \code{R6Class} generator object
}
\description{
ListWrapperOfUploadDestinationLocation Class

ListWrapperOfUploadDestinationLocation Class
}
\details{
Create a new ListWrapperOfUploadDestinationLocation
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{list}}{list(\link{OrgSagebionetworksRepoModelFileUploadDestinationLocation}) [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-ListWrapperOfUploadDestinationLocation-new}{\code{ListWrapperOfUploadDestinationLocation$new()}}
\item \href{#method-ListWrapperOfUploadDestinationLocation-toJSON}{\code{ListWrapperOfUploadDestinationLocation$toJSON()}}
\item \href{#method-ListWrapperOfUploadDestinationLocation-fromJSON}{\code{ListWrapperOfUploadDestinationLocation$fromJSON()}}
\item \href{#method-ListWrapperOfUploadDestinationLocation-toJSONString}{\code{ListWrapperOfUploadDestinationLocation$toJSONString()}}
\item \href{#method-ListWrapperOfUploadDestinationLocation-fromJSONString}{\code{ListWrapperOfUploadDestinationLocation$fromJSONString()}}
\item \href{#method-ListWrapperOfUploadDestinationLocation-validateJSON}{\code{ListWrapperOfUploadDestinationLocation$validateJSON()}}
\item \href{#method-ListWrapperOfUploadDestinationLocation-toString}{\code{ListWrapperOfUploadDestinationLocation$toString()}}
\item \href{#method-ListWrapperOfUploadDestinationLocation-isValid}{\code{ListWrapperOfUploadDestinationLocation$isValid()}}
\item \href{#method-ListWrapperOfUploadDestinationLocation-getInvalidFields}{\code{ListWrapperOfUploadDestinationLocation$getInvalidFields()}}
\item \href{#method-ListWrapperOfUploadDestinationLocation-print}{\code{ListWrapperOfUploadDestinationLocation$print()}}
\item \href{#method-ListWrapperOfUploadDestinationLocation-clone}{\code{ListWrapperOfUploadDestinationLocation$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ListWrapperOfUploadDestinationLocation-new"></a>}}
\if{latex}{\out{\hypertarget{method-ListWrapperOfUploadDestinationLocation-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new ListWrapperOfUploadDestinationLocation class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ListWrapperOfUploadDestinationLocation$new(list = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{list}}{list}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ListWrapperOfUploadDestinationLocation-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-ListWrapperOfUploadDestinationLocation-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ListWrapperOfUploadDestinationLocation$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
ListWrapperOfUploadDestinationLocation in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ListWrapperOfUploadDestinationLocation-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-ListWrapperOfUploadDestinationLocation-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of ListWrapperOfUploadDestinationLocation
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ListWrapperOfUploadDestinationLocation$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of ListWrapperOfUploadDestinationLocation
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ListWrapperOfUploadDestinationLocation-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-ListWrapperOfUploadDestinationLocation-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ListWrapperOfUploadDestinationLocation$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
ListWrapperOfUploadDestinationLocation in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ListWrapperOfUploadDestinationLocation-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-ListWrapperOfUploadDestinationLocation-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of ListWrapperOfUploadDestinationLocation
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ListWrapperOfUploadDestinationLocation$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of ListWrapperOfUploadDestinationLocation
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ListWrapperOfUploadDestinationLocation-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-ListWrapperOfUploadDestinationLocation-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to ListWrapperOfUploadDestinationLocation and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ListWrapperOfUploadDestinationLocation$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ListWrapperOfUploadDestinationLocation-toString"></a>}}
\if{latex}{\out{\hypertarget{method-ListWrapperOfUploadDestinationLocation-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ListWrapperOfUploadDestinationLocation$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of ListWrapperOfUploadDestinationLocation
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ListWrapperOfUploadDestinationLocation-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-ListWrapperOfUploadDestinationLocation-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ListWrapperOfUploadDestinationLocation$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ListWrapperOfUploadDestinationLocation-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-ListWrapperOfUploadDestinationLocation-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ListWrapperOfUploadDestinationLocation$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ListWrapperOfUploadDestinationLocation-print"></a>}}
\if{latex}{\out{\hypertarget{method-ListWrapperOfUploadDestinationLocation-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ListWrapperOfUploadDestinationLocation$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ListWrapperOfUploadDestinationLocation-clone"></a>}}
\if{latex}{\out{\hypertarget{method-ListWrapperOfUploadDestinationLocation-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ListWrapperOfUploadDestinationLocation$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
