% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/access_requirement_services_api.R
\docType{class}
\name{AccessRequirementServicesApi}
\alias{AccessRequirementServicesApi}
\title{AccessRequirementServices operations}
\format{
An \code{R6Class} generator object
}
\description{
AccessRequirementServicesApi
}
\details{
Synapse REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: v1
Generated by: https://openapi-generator.tech
}
\section{Methods}{

\describe{
\strong{ deleteRepoV1AccessRequirementRequirementId } \emph{  }

\itemize{
\item \emph{ @param } requirement_id character


\item status code : 200 | Void


\item response headers :

\tabular{ll}{
}
}

\strong{ deleteRepoV1AccessRequirementRequirementIdAcl } \emph{  }

\itemize{
\item \emph{ @param } requirement_id character


\item status code : 200 | Void


\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1AccessRequirementRequirementId } \emph{  }

\itemize{
\item \emph{ @param } requirement_id character
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelAccessRequirement} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelAccessRequirement
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1AccessRequirementRequirementIdAcl } \emph{  }

\itemize{
\item \emph{ @param } requirement_id character
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelAccessControlList} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelAccessControlList
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1AccessRequirementRequirementIdSubjects } \emph{  }

\itemize{
\item \emph{ @param } requirement_id character
\item \emph{ @param } next_page_token character
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelRestrictableObjectDescriptorResponse} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelRestrictableObjectDescriptorResponse
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1EntityIdAccessRequirement } \emph{  }

\itemize{
\item \emph{ @param } id character
\item \emph{ @param } limit numeric
\item \emph{ @param } offset numeric
\item \emph{ @returnType } \link{PaginatedResultsOfAccessRequirement} \cr


\item status code : 200 | Auto-generated description

\item return type : PaginatedResultsOfAccessRequirement
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1TeamIdAccessRequirement } \emph{  }

\itemize{
\item \emph{ @param } id character
\item \emph{ @param } limit numeric
\item \emph{ @param } offset numeric
\item \emph{ @returnType } \link{PaginatedResultsOfAccessRequirement} \cr


\item status code : 200 | Auto-generated description

\item return type : PaginatedResultsOfAccessRequirement
\item response headers :

\tabular{ll}{
}
}

\strong{ postRepoV1AccessRequirement } \emph{  }

\itemize{
\item \emph{ @param } org_sagebionetworks_repo_model_access_requirement \link{OrgSagebionetworksRepoModelAccessRequirement}
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelAccessRequirement} \cr


\item status code : 201 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelAccessRequirement
\item response headers :

\tabular{ll}{
}
}

\strong{ postRepoV1AccessRequirementRequirementIdAcl } \emph{  }

\itemize{
\item \emph{ @param } requirement_id character
\item \emph{ @param } org_sagebionetworks_repo_model_access_control_list \link{OrgSagebionetworksRepoModelAccessControlList}
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelAccessControlList} \cr


\item status code : 201 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelAccessControlList
\item response headers :

\tabular{ll}{
}
}

\strong{ postRepoV1AccessRequirementSearch } \emph{  }

\itemize{
\item \emph{ @param } org_sagebionetworks_repo_model_dataaccess_access_requirement_search_request \link{OrgSagebionetworksRepoModelDataaccessAccessRequirementSearchRequest}
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelDataaccessAccessRequirementSearchResponse} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelDataaccessAccessRequirementSearchResponse
\item response headers :

\tabular{ll}{
}
}

\strong{ postRepoV1EntityIdLockAccessRequirement } \emph{  }

\itemize{
\item \emph{ @param } id character
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelAccessRequirement} \cr


\item status code : 201 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelAccessRequirement
\item response headers :

\tabular{ll}{
}
}

\strong{ putRepoV1AccessRequirementConversion } \emph{  }

\itemize{
\item \emph{ @param } org_sagebionetworks_repo_model_dataaccess_access_requirement_conversion_request \link{OrgSagebionetworksRepoModelDataaccessAccessRequirementConversionRequest}
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelAccessRequirement} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelAccessRequirement
\item response headers :

\tabular{ll}{
}
}

\strong{ putRepoV1AccessRequirementRequirementId } \emph{  }

\itemize{
\item \emph{ @param } requirement_id character
\item \emph{ @param } org_sagebionetworks_repo_model_access_requirement \link{OrgSagebionetworksRepoModelAccessRequirement}
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelAccessRequirement} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelAccessRequirement
\item response headers :

\tabular{ll}{
}
}

\strong{ putRepoV1AccessRequirementRequirementIdAcl } \emph{  }

\itemize{
\item \emph{ @param } requirement_id character
\item \emph{ @param } org_sagebionetworks_repo_model_access_control_list \link{OrgSagebionetworksRepoModelAccessControlList}
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelAccessControlList} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelAccessControlList
\item response headers :

\tabular{ll}{
}
}

}
}

\examples{
\dontrun{
####################  deleteRepoV1AccessRequirementRequirementId  ####################

library(synr)
var_requirement_id <- "requirement_id_example" # character | the ID of the requirement to delete

api_instance <- AccessRequirementServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

api_instance$deleteRepoV1AccessRequirementRequirementId(var_requirement_id)


####################  deleteRepoV1AccessRequirementRequirementIdAcl  ####################

library(synr)
var_requirement_id <- "requirement_id_example" # character | 

api_instance <- AccessRequirementServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

api_instance$deleteRepoV1AccessRequirementRequirementIdAcl(var_requirement_id)


####################  getRepoV1AccessRequirementRequirementId  ####################

library(synr)
var_requirement_id <- "requirement_id_example" # character | 

api_instance <- AccessRequirementServicesApi$new()

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1AccessRequirementRequirementId(var_requirement_iddata_file = "result.txt")
result <- api_instance$getRepoV1AccessRequirementRequirementId(var_requirement_id)
dput(result)


####################  getRepoV1AccessRequirementRequirementIdAcl  ####################

library(synr)
var_requirement_id <- "requirement_id_example" # character | 

api_instance <- AccessRequirementServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1AccessRequirementRequirementIdAcl(var_requirement_iddata_file = "result.txt")
result <- api_instance$getRepoV1AccessRequirementRequirementIdAcl(var_requirement_id)
dput(result)


####################  getRepoV1AccessRequirementRequirementIdSubjects  ####################

library(synr)
var_requirement_id <- "requirement_id_example" # character | 
var_next_page_token <- "next_page_token_example" # character |  (Optional)

api_instance <- AccessRequirementServicesApi$new()

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1AccessRequirementRequirementIdSubjects(var_requirement_id, next_page_token = var_next_page_tokendata_file = "result.txt")
result <- api_instance$getRepoV1AccessRequirementRequirementIdSubjects(var_requirement_id, next_page_token = var_next_page_token)
dput(result)


####################  getRepoV1EntityIdAccessRequirement  ####################

library(synr)
var_id <- "id_example" # character | 
var_limit <- 3.4 # numeric | - Limits the size of the page returned. For example, a page size of 10 require limit = 10. The maximum limit for this call is 50. (Optional)
var_offset <- 3.4 # numeric | - The index of the pagination offset. For a page size of 10, the first page would be at offset = 0, and the second page would be at offset = 10. (Optional)

api_instance <- AccessRequirementServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1EntityIdAccessRequirement(var_id, limit = var_limit, offset = var_offsetdata_file = "result.txt")
result <- api_instance$getRepoV1EntityIdAccessRequirement(var_id, limit = var_limit, offset = var_offset)
dput(result)


####################  getRepoV1TeamIdAccessRequirement  ####################

library(synr)
var_id <- "id_example" # character | the ID of the Team whose Access Requirements are retrieved.
var_limit <- 3.4 # numeric | - Limits the size of the page returned. For example, a page size of 10 require limit = 10. The maximum limit for this call is 50. (Optional)
var_offset <- 3.4 # numeric | - The index of the pagination offset. For a page size of 10, the first page would be at offset = 0, and the second page would be at offset = 10. (Optional)

api_instance <- AccessRequirementServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1TeamIdAccessRequirement(var_id, limit = var_limit, offset = var_offsetdata_file = "result.txt")
result <- api_instance$getRepoV1TeamIdAccessRequirement(var_id, limit = var_limit, offset = var_offset)
dput(result)


####################  postRepoV1AccessRequirement  ####################

library(synr)
var_org_sagebionetworks_repo_model_access_requirement <- org.sagebionetworks.repo.model.AccessRequirement$new("concreteType_example", 123, 123, "description_example", "name_example", "etag_example", "createdOn_example", "modifiedOn_example", "createdBy_example", "modifiedBy_example", "subjectsDefinedByAnnotations_example", c(org.sagebionetworks.repo.model.RestrictableObjectDescriptor$new("id_example", "type_example")), "accessType_example", "url_example", "termsOfUse_example", "isCertifiedUserRequired_example", "isValidatedProfileRequired_example", "isDUCRequired_example", "ducTemplateFileHandleId_example", "isIRBApprovalRequired_example", "areOtherAttachmentsRequired_example", 123, "isIDUPublic_example", "isIDURequired_example", "isTwoFaRequired_example", "actContactInfo_example", "openJiraIssue_example", "jiraKey_example") # OrgSagebionetworksRepoModelAccessRequirement | 

api_instance <- AccessRequirementServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$postRepoV1AccessRequirement(var_org_sagebionetworks_repo_model_access_requirementdata_file = "result.txt")
result <- api_instance$postRepoV1AccessRequirement(var_org_sagebionetworks_repo_model_access_requirement)
dput(result)


####################  postRepoV1AccessRequirementRequirementIdAcl  ####################

library(synr)
var_requirement_id <- "requirement_id_example" # character | 
var_org_sagebionetworks_repo_model_access_control_list <- org.sagebionetworks.repo.model.AccessControlList$new("id_example", "createdBy_example", "creationDate_example", "modifiedBy_example", "modifiedOn_example", "etag_example", c(org.sagebionetworks.repo.model.ResourceAccess$new(123, c("accessType_example")))) # OrgSagebionetworksRepoModelAccessControlList | 

api_instance <- AccessRequirementServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$postRepoV1AccessRequirementRequirementIdAcl(var_requirement_id, var_org_sagebionetworks_repo_model_access_control_listdata_file = "result.txt")
result <- api_instance$postRepoV1AccessRequirementRequirementIdAcl(var_requirement_id, var_org_sagebionetworks_repo_model_access_control_list)
dput(result)


####################  postRepoV1AccessRequirementSearch  ####################

library(synr)
var_org_sagebionetworks_repo_model_dataaccess_access_requirement_search_request <- org.sagebionetworks.repo.model.dataaccess.AccessRequirementSearchRequest$new("nameContains_example", c(123), "relatedProjectId_example", "reviewerId_example", "accessType_example", "type_example", c(org.sagebionetworks.repo.model.dataaccess.AccessRequirementSearchSort$new("field_example", "direction_example")), "nextPageToken_example") # OrgSagebionetworksRepoModelDataaccessAccessRequirementSearchRequest | 

api_instance <- AccessRequirementServicesApi$new()

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$postRepoV1AccessRequirementSearch(var_org_sagebionetworks_repo_model_dataaccess_access_requirement_search_requestdata_file = "result.txt")
result <- api_instance$postRepoV1AccessRequirementSearch(var_org_sagebionetworks_repo_model_dataaccess_access_requirement_search_request)
dput(result)


####################  postRepoV1EntityIdLockAccessRequirement  ####################

library(synr)
var_id <- "id_example" # character | the ID of the entity to which an Access Requirement will be applied

api_instance <- AccessRequirementServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$postRepoV1EntityIdLockAccessRequirement(var_iddata_file = "result.txt")
result <- api_instance$postRepoV1EntityIdLockAccessRequirement(var_id)
dput(result)


####################  putRepoV1AccessRequirementConversion  ####################

library(synr)
var_org_sagebionetworks_repo_model_dataaccess_access_requirement_conversion_request <- org.sagebionetworks.repo.model.dataaccess.AccessRequirementConversionRequest$new("accessRequirementId_example", "etag_example", 123) # OrgSagebionetworksRepoModelDataaccessAccessRequirementConversionRequest | 

api_instance <- AccessRequirementServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$putRepoV1AccessRequirementConversion(var_org_sagebionetworks_repo_model_dataaccess_access_requirement_conversion_requestdata_file = "result.txt")
result <- api_instance$putRepoV1AccessRequirementConversion(var_org_sagebionetworks_repo_model_dataaccess_access_requirement_conversion_request)
dput(result)


####################  putRepoV1AccessRequirementRequirementId  ####################

library(synr)
var_requirement_id <- "requirement_id_example" # character | the ID of the Access Requirement to be modified.
var_org_sagebionetworks_repo_model_access_requirement <- org.sagebionetworks.repo.model.AccessRequirement$new("concreteType_example", 123, 123, "description_example", "name_example", "etag_example", "createdOn_example", "modifiedOn_example", "createdBy_example", "modifiedBy_example", "subjectsDefinedByAnnotations_example", c(org.sagebionetworks.repo.model.RestrictableObjectDescriptor$new("id_example", "type_example")), "accessType_example", "url_example", "termsOfUse_example", "isCertifiedUserRequired_example", "isValidatedProfileRequired_example", "isDUCRequired_example", "ducTemplateFileHandleId_example", "isIRBApprovalRequired_example", "areOtherAttachmentsRequired_example", 123, "isIDUPublic_example", "isIDURequired_example", "isTwoFaRequired_example", "actContactInfo_example", "openJiraIssue_example", "jiraKey_example") # OrgSagebionetworksRepoModelAccessRequirement | 

api_instance <- AccessRequirementServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$putRepoV1AccessRequirementRequirementId(var_requirement_id, var_org_sagebionetworks_repo_model_access_requirementdata_file = "result.txt")
result <- api_instance$putRepoV1AccessRequirementRequirementId(var_requirement_id, var_org_sagebionetworks_repo_model_access_requirement)
dput(result)


####################  putRepoV1AccessRequirementRequirementIdAcl  ####################

library(synr)
var_requirement_id <- "requirement_id_example" # character | 
var_org_sagebionetworks_repo_model_access_control_list <- org.sagebionetworks.repo.model.AccessControlList$new("id_example", "createdBy_example", "creationDate_example", "modifiedBy_example", "modifiedOn_example", "etag_example", c(org.sagebionetworks.repo.model.ResourceAccess$new(123, c("accessType_example")))) # OrgSagebionetworksRepoModelAccessControlList | 

api_instance <- AccessRequirementServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$putRepoV1AccessRequirementRequirementIdAcl(var_requirement_id, var_org_sagebionetworks_repo_model_access_control_listdata_file = "result.txt")
result <- api_instance$putRepoV1AccessRequirementRequirementIdAcl(var_requirement_id, var_org_sagebionetworks_repo_model_access_control_list)
dput(result)


}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{api_client}}{Handles the client-server communication.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-AccessRequirementServicesApi-new}{\code{AccessRequirementServicesApi$new()}}
\item \href{#method-AccessRequirementServicesApi-deleteRepoV1AccessRequirementRequirementId}{\code{AccessRequirementServicesApi$deleteRepoV1AccessRequirementRequirementId()}}
\item \href{#method-AccessRequirementServicesApi-deleteRepoV1AccessRequirementRequirementIdWithHttpInfo}{\code{AccessRequirementServicesApi$deleteRepoV1AccessRequirementRequirementIdWithHttpInfo()}}
\item \href{#method-AccessRequirementServicesApi-deleteRepoV1AccessRequirementRequirementIdAcl}{\code{AccessRequirementServicesApi$deleteRepoV1AccessRequirementRequirementIdAcl()}}
\item \href{#method-AccessRequirementServicesApi-deleteRepoV1AccessRequirementRequirementIdAclWithHttpInfo}{\code{AccessRequirementServicesApi$deleteRepoV1AccessRequirementRequirementIdAclWithHttpInfo()}}
\item \href{#method-AccessRequirementServicesApi-getRepoV1AccessRequirementRequirementId}{\code{AccessRequirementServicesApi$getRepoV1AccessRequirementRequirementId()}}
\item \href{#method-AccessRequirementServicesApi-getRepoV1AccessRequirementRequirementIdWithHttpInfo}{\code{AccessRequirementServicesApi$getRepoV1AccessRequirementRequirementIdWithHttpInfo()}}
\item \href{#method-AccessRequirementServicesApi-getRepoV1AccessRequirementRequirementIdAcl}{\code{AccessRequirementServicesApi$getRepoV1AccessRequirementRequirementIdAcl()}}
\item \href{#method-AccessRequirementServicesApi-getRepoV1AccessRequirementRequirementIdAclWithHttpInfo}{\code{AccessRequirementServicesApi$getRepoV1AccessRequirementRequirementIdAclWithHttpInfo()}}
\item \href{#method-AccessRequirementServicesApi-getRepoV1AccessRequirementRequirementIdSubjects}{\code{AccessRequirementServicesApi$getRepoV1AccessRequirementRequirementIdSubjects()}}
\item \href{#method-AccessRequirementServicesApi-getRepoV1AccessRequirementRequirementIdSubjectsWithHttpInfo}{\code{AccessRequirementServicesApi$getRepoV1AccessRequirementRequirementIdSubjectsWithHttpInfo()}}
\item \href{#method-AccessRequirementServicesApi-getRepoV1EntityIdAccessRequirement}{\code{AccessRequirementServicesApi$getRepoV1EntityIdAccessRequirement()}}
\item \href{#method-AccessRequirementServicesApi-getRepoV1EntityIdAccessRequirementWithHttpInfo}{\code{AccessRequirementServicesApi$getRepoV1EntityIdAccessRequirementWithHttpInfo()}}
\item \href{#method-AccessRequirementServicesApi-getRepoV1TeamIdAccessRequirement}{\code{AccessRequirementServicesApi$getRepoV1TeamIdAccessRequirement()}}
\item \href{#method-AccessRequirementServicesApi-getRepoV1TeamIdAccessRequirementWithHttpInfo}{\code{AccessRequirementServicesApi$getRepoV1TeamIdAccessRequirementWithHttpInfo()}}
\item \href{#method-AccessRequirementServicesApi-postRepoV1AccessRequirement}{\code{AccessRequirementServicesApi$postRepoV1AccessRequirement()}}
\item \href{#method-AccessRequirementServicesApi-postRepoV1AccessRequirementWithHttpInfo}{\code{AccessRequirementServicesApi$postRepoV1AccessRequirementWithHttpInfo()}}
\item \href{#method-AccessRequirementServicesApi-postRepoV1AccessRequirementRequirementIdAcl}{\code{AccessRequirementServicesApi$postRepoV1AccessRequirementRequirementIdAcl()}}
\item \href{#method-AccessRequirementServicesApi-postRepoV1AccessRequirementRequirementIdAclWithHttpInfo}{\code{AccessRequirementServicesApi$postRepoV1AccessRequirementRequirementIdAclWithHttpInfo()}}
\item \href{#method-AccessRequirementServicesApi-postRepoV1AccessRequirementSearch}{\code{AccessRequirementServicesApi$postRepoV1AccessRequirementSearch()}}
\item \href{#method-AccessRequirementServicesApi-postRepoV1AccessRequirementSearchWithHttpInfo}{\code{AccessRequirementServicesApi$postRepoV1AccessRequirementSearchWithHttpInfo()}}
\item \href{#method-AccessRequirementServicesApi-postRepoV1EntityIdLockAccessRequirement}{\code{AccessRequirementServicesApi$postRepoV1EntityIdLockAccessRequirement()}}
\item \href{#method-AccessRequirementServicesApi-postRepoV1EntityIdLockAccessRequirementWithHttpInfo}{\code{AccessRequirementServicesApi$postRepoV1EntityIdLockAccessRequirementWithHttpInfo()}}
\item \href{#method-AccessRequirementServicesApi-putRepoV1AccessRequirementConversion}{\code{AccessRequirementServicesApi$putRepoV1AccessRequirementConversion()}}
\item \href{#method-AccessRequirementServicesApi-putRepoV1AccessRequirementConversionWithHttpInfo}{\code{AccessRequirementServicesApi$putRepoV1AccessRequirementConversionWithHttpInfo()}}
\item \href{#method-AccessRequirementServicesApi-putRepoV1AccessRequirementRequirementId}{\code{AccessRequirementServicesApi$putRepoV1AccessRequirementRequirementId()}}
\item \href{#method-AccessRequirementServicesApi-putRepoV1AccessRequirementRequirementIdWithHttpInfo}{\code{AccessRequirementServicesApi$putRepoV1AccessRequirementRequirementIdWithHttpInfo()}}
\item \href{#method-AccessRequirementServicesApi-putRepoV1AccessRequirementRequirementIdAcl}{\code{AccessRequirementServicesApi$putRepoV1AccessRequirementRequirementIdAcl()}}
\item \href{#method-AccessRequirementServicesApi-putRepoV1AccessRequirementRequirementIdAclWithHttpInfo}{\code{AccessRequirementServicesApi$putRepoV1AccessRequirementRequirementIdAclWithHttpInfo()}}
\item \href{#method-AccessRequirementServicesApi-clone}{\code{AccessRequirementServicesApi$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AccessRequirementServicesApi-new"></a>}}
\if{latex}{\out{\hypertarget{method-AccessRequirementServicesApi-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new AccessRequirementServicesApi.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AccessRequirementServicesApi$new(api_client)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{api_client}}{An instance of API client.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AccessRequirementServicesApi-deleteRepoV1AccessRequirementRequirementId"></a>}}
\if{latex}{\out{\hypertarget{method-AccessRequirementServicesApi-deleteRepoV1AccessRequirementRequirementId}{}}}
\subsection{Method \code{deleteRepoV1AccessRequirementRequirementId()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AccessRequirementServicesApi$deleteRepoV1AccessRequirementRequirementId(
  requirement_id,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{requirement_id}}{the ID of the requirement to delete}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
void
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AccessRequirementServicesApi-deleteRepoV1AccessRequirementRequirementIdWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-AccessRequirementServicesApi-deleteRepoV1AccessRequirementRequirementIdWithHttpInfo}{}}}
\subsection{Method \code{deleteRepoV1AccessRequirementRequirementIdWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AccessRequirementServicesApi$deleteRepoV1AccessRequirementRequirementIdWithHttpInfo(
  requirement_id,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{requirement_id}}{the ID of the requirement to delete}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (void) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AccessRequirementServicesApi-deleteRepoV1AccessRequirementRequirementIdAcl"></a>}}
\if{latex}{\out{\hypertarget{method-AccessRequirementServicesApi-deleteRepoV1AccessRequirementRequirementIdAcl}{}}}
\subsection{Method \code{deleteRepoV1AccessRequirementRequirementIdAcl()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AccessRequirementServicesApi$deleteRepoV1AccessRequirementRequirementIdAcl(
  requirement_id,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{requirement_id}}{}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
void
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AccessRequirementServicesApi-deleteRepoV1AccessRequirementRequirementIdAclWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-AccessRequirementServicesApi-deleteRepoV1AccessRequirementRequirementIdAclWithHttpInfo}{}}}
\subsection{Method \code{deleteRepoV1AccessRequirementRequirementIdAclWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AccessRequirementServicesApi$deleteRepoV1AccessRequirementRequirementIdAclWithHttpInfo(
  requirement_id,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{requirement_id}}{}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (void) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AccessRequirementServicesApi-getRepoV1AccessRequirementRequirementId"></a>}}
\if{latex}{\out{\hypertarget{method-AccessRequirementServicesApi-getRepoV1AccessRequirementRequirementId}{}}}
\subsection{Method \code{getRepoV1AccessRequirementRequirementId()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AccessRequirementServicesApi$getRepoV1AccessRequirementRequirementId(
  requirement_id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{requirement_id}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelAccessRequirement
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AccessRequirementServicesApi-getRepoV1AccessRequirementRequirementIdWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-AccessRequirementServicesApi-getRepoV1AccessRequirementRequirementIdWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1AccessRequirementRequirementIdWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AccessRequirementServicesApi$getRepoV1AccessRequirementRequirementIdWithHttpInfo(
  requirement_id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{requirement_id}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelAccessRequirement) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AccessRequirementServicesApi-getRepoV1AccessRequirementRequirementIdAcl"></a>}}
\if{latex}{\out{\hypertarget{method-AccessRequirementServicesApi-getRepoV1AccessRequirementRequirementIdAcl}{}}}
\subsection{Method \code{getRepoV1AccessRequirementRequirementIdAcl()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AccessRequirementServicesApi$getRepoV1AccessRequirementRequirementIdAcl(
  requirement_id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{requirement_id}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelAccessControlList
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AccessRequirementServicesApi-getRepoV1AccessRequirementRequirementIdAclWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-AccessRequirementServicesApi-getRepoV1AccessRequirementRequirementIdAclWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1AccessRequirementRequirementIdAclWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AccessRequirementServicesApi$getRepoV1AccessRequirementRequirementIdAclWithHttpInfo(
  requirement_id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{requirement_id}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelAccessControlList) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AccessRequirementServicesApi-getRepoV1AccessRequirementRequirementIdSubjects"></a>}}
\if{latex}{\out{\hypertarget{method-AccessRequirementServicesApi-getRepoV1AccessRequirementRequirementIdSubjects}{}}}
\subsection{Method \code{getRepoV1AccessRequirementRequirementIdSubjects()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AccessRequirementServicesApi$getRepoV1AccessRequirementRequirementIdSubjects(
  requirement_id,
  next_page_token = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{requirement_id}}{}

\item{\code{next_page_token}}{(optional) No description}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelRestrictableObjectDescriptorResponse
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AccessRequirementServicesApi-getRepoV1AccessRequirementRequirementIdSubjectsWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-AccessRequirementServicesApi-getRepoV1AccessRequirementRequirementIdSubjectsWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1AccessRequirementRequirementIdSubjectsWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AccessRequirementServicesApi$getRepoV1AccessRequirementRequirementIdSubjectsWithHttpInfo(
  requirement_id,
  next_page_token = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{requirement_id}}{}

\item{\code{next_page_token}}{(optional) No description}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelRestrictableObjectDescriptorResponse) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AccessRequirementServicesApi-getRepoV1EntityIdAccessRequirement"></a>}}
\if{latex}{\out{\hypertarget{method-AccessRequirementServicesApi-getRepoV1EntityIdAccessRequirement}{}}}
\subsection{Method \code{getRepoV1EntityIdAccessRequirement()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AccessRequirementServicesApi$getRepoV1EntityIdAccessRequirement(
  id,
  limit = NULL,
  offset = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{}

\item{\code{limit}}{(optional) - Limits the size of the page returned. For example, a page size of 10 require limit = 10. The maximum limit for this call is 50.}

\item{\code{offset}}{(optional) - The index of the pagination offset. For a page size of 10, the first page would be at offset = 0, and the second page would be at offset = 10.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
PaginatedResultsOfAccessRequirement
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AccessRequirementServicesApi-getRepoV1EntityIdAccessRequirementWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-AccessRequirementServicesApi-getRepoV1EntityIdAccessRequirementWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1EntityIdAccessRequirementWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AccessRequirementServicesApi$getRepoV1EntityIdAccessRequirementWithHttpInfo(
  id,
  limit = NULL,
  offset = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{}

\item{\code{limit}}{(optional) - Limits the size of the page returned. For example, a page size of 10 require limit = 10. The maximum limit for this call is 50.}

\item{\code{offset}}{(optional) - The index of the pagination offset. For a page size of 10, the first page would be at offset = 0, and the second page would be at offset = 10.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (PaginatedResultsOfAccessRequirement) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AccessRequirementServicesApi-getRepoV1TeamIdAccessRequirement"></a>}}
\if{latex}{\out{\hypertarget{method-AccessRequirementServicesApi-getRepoV1TeamIdAccessRequirement}{}}}
\subsection{Method \code{getRepoV1TeamIdAccessRequirement()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AccessRequirementServicesApi$getRepoV1TeamIdAccessRequirement(
  id,
  limit = NULL,
  offset = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{the ID of the Team whose Access Requirements are retrieved.}

\item{\code{limit}}{(optional) - Limits the size of the page returned. For example, a page size of 10 require limit = 10. The maximum limit for this call is 50.}

\item{\code{offset}}{(optional) - The index of the pagination offset. For a page size of 10, the first page would be at offset = 0, and the second page would be at offset = 10.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
PaginatedResultsOfAccessRequirement
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AccessRequirementServicesApi-getRepoV1TeamIdAccessRequirementWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-AccessRequirementServicesApi-getRepoV1TeamIdAccessRequirementWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1TeamIdAccessRequirementWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AccessRequirementServicesApi$getRepoV1TeamIdAccessRequirementWithHttpInfo(
  id,
  limit = NULL,
  offset = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{the ID of the Team whose Access Requirements are retrieved.}

\item{\code{limit}}{(optional) - Limits the size of the page returned. For example, a page size of 10 require limit = 10. The maximum limit for this call is 50.}

\item{\code{offset}}{(optional) - The index of the pagination offset. For a page size of 10, the first page would be at offset = 0, and the second page would be at offset = 10.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (PaginatedResultsOfAccessRequirement) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AccessRequirementServicesApi-postRepoV1AccessRequirement"></a>}}
\if{latex}{\out{\hypertarget{method-AccessRequirementServicesApi-postRepoV1AccessRequirement}{}}}
\subsection{Method \code{postRepoV1AccessRequirement()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AccessRequirementServicesApi$postRepoV1AccessRequirement(
  org_sagebionetworks_repo_model_access_requirement,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org_sagebionetworks_repo_model_access_requirement}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelAccessRequirement
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AccessRequirementServicesApi-postRepoV1AccessRequirementWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-AccessRequirementServicesApi-postRepoV1AccessRequirementWithHttpInfo}{}}}
\subsection{Method \code{postRepoV1AccessRequirementWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AccessRequirementServicesApi$postRepoV1AccessRequirementWithHttpInfo(
  org_sagebionetworks_repo_model_access_requirement,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org_sagebionetworks_repo_model_access_requirement}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelAccessRequirement) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AccessRequirementServicesApi-postRepoV1AccessRequirementRequirementIdAcl"></a>}}
\if{latex}{\out{\hypertarget{method-AccessRequirementServicesApi-postRepoV1AccessRequirementRequirementIdAcl}{}}}
\subsection{Method \code{postRepoV1AccessRequirementRequirementIdAcl()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AccessRequirementServicesApi$postRepoV1AccessRequirementRequirementIdAcl(
  requirement_id,
  org_sagebionetworks_repo_model_access_control_list,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{requirement_id}}{}

\item{\code{org_sagebionetworks_repo_model_access_control_list}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelAccessControlList
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AccessRequirementServicesApi-postRepoV1AccessRequirementRequirementIdAclWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-AccessRequirementServicesApi-postRepoV1AccessRequirementRequirementIdAclWithHttpInfo}{}}}
\subsection{Method \code{postRepoV1AccessRequirementRequirementIdAclWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AccessRequirementServicesApi$postRepoV1AccessRequirementRequirementIdAclWithHttpInfo(
  requirement_id,
  org_sagebionetworks_repo_model_access_control_list,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{requirement_id}}{}

\item{\code{org_sagebionetworks_repo_model_access_control_list}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelAccessControlList) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AccessRequirementServicesApi-postRepoV1AccessRequirementSearch"></a>}}
\if{latex}{\out{\hypertarget{method-AccessRequirementServicesApi-postRepoV1AccessRequirementSearch}{}}}
\subsection{Method \code{postRepoV1AccessRequirementSearch()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AccessRequirementServicesApi$postRepoV1AccessRequirementSearch(
  org_sagebionetworks_repo_model_dataaccess_access_requirement_search_request,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org_sagebionetworks_repo_model_dataaccess_access_requirement_search_request}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelDataaccessAccessRequirementSearchResponse
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AccessRequirementServicesApi-postRepoV1AccessRequirementSearchWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-AccessRequirementServicesApi-postRepoV1AccessRequirementSearchWithHttpInfo}{}}}
\subsection{Method \code{postRepoV1AccessRequirementSearchWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AccessRequirementServicesApi$postRepoV1AccessRequirementSearchWithHttpInfo(
  org_sagebionetworks_repo_model_dataaccess_access_requirement_search_request,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org_sagebionetworks_repo_model_dataaccess_access_requirement_search_request}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelDataaccessAccessRequirementSearchResponse) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AccessRequirementServicesApi-postRepoV1EntityIdLockAccessRequirement"></a>}}
\if{latex}{\out{\hypertarget{method-AccessRequirementServicesApi-postRepoV1EntityIdLockAccessRequirement}{}}}
\subsection{Method \code{postRepoV1EntityIdLockAccessRequirement()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AccessRequirementServicesApi$postRepoV1EntityIdLockAccessRequirement(
  id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{the ID of the entity to which an Access Requirement will be applied}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelAccessRequirement
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AccessRequirementServicesApi-postRepoV1EntityIdLockAccessRequirementWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-AccessRequirementServicesApi-postRepoV1EntityIdLockAccessRequirementWithHttpInfo}{}}}
\subsection{Method \code{postRepoV1EntityIdLockAccessRequirementWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AccessRequirementServicesApi$postRepoV1EntityIdLockAccessRequirementWithHttpInfo(
  id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{the ID of the entity to which an Access Requirement will be applied}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelAccessRequirement) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AccessRequirementServicesApi-putRepoV1AccessRequirementConversion"></a>}}
\if{latex}{\out{\hypertarget{method-AccessRequirementServicesApi-putRepoV1AccessRequirementConversion}{}}}
\subsection{Method \code{putRepoV1AccessRequirementConversion()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AccessRequirementServicesApi$putRepoV1AccessRequirementConversion(
  org_sagebionetworks_repo_model_dataaccess_access_requirement_conversion_request,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org_sagebionetworks_repo_model_dataaccess_access_requirement_conversion_request}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelAccessRequirement
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AccessRequirementServicesApi-putRepoV1AccessRequirementConversionWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-AccessRequirementServicesApi-putRepoV1AccessRequirementConversionWithHttpInfo}{}}}
\subsection{Method \code{putRepoV1AccessRequirementConversionWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AccessRequirementServicesApi$putRepoV1AccessRequirementConversionWithHttpInfo(
  org_sagebionetworks_repo_model_dataaccess_access_requirement_conversion_request,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org_sagebionetworks_repo_model_dataaccess_access_requirement_conversion_request}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelAccessRequirement) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AccessRequirementServicesApi-putRepoV1AccessRequirementRequirementId"></a>}}
\if{latex}{\out{\hypertarget{method-AccessRequirementServicesApi-putRepoV1AccessRequirementRequirementId}{}}}
\subsection{Method \code{putRepoV1AccessRequirementRequirementId()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AccessRequirementServicesApi$putRepoV1AccessRequirementRequirementId(
  requirement_id,
  org_sagebionetworks_repo_model_access_requirement,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{requirement_id}}{the ID of the Access Requirement to be modified.}

\item{\code{org_sagebionetworks_repo_model_access_requirement}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelAccessRequirement
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AccessRequirementServicesApi-putRepoV1AccessRequirementRequirementIdWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-AccessRequirementServicesApi-putRepoV1AccessRequirementRequirementIdWithHttpInfo}{}}}
\subsection{Method \code{putRepoV1AccessRequirementRequirementIdWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AccessRequirementServicesApi$putRepoV1AccessRequirementRequirementIdWithHttpInfo(
  requirement_id,
  org_sagebionetworks_repo_model_access_requirement,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{requirement_id}}{the ID of the Access Requirement to be modified.}

\item{\code{org_sagebionetworks_repo_model_access_requirement}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelAccessRequirement) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AccessRequirementServicesApi-putRepoV1AccessRequirementRequirementIdAcl"></a>}}
\if{latex}{\out{\hypertarget{method-AccessRequirementServicesApi-putRepoV1AccessRequirementRequirementIdAcl}{}}}
\subsection{Method \code{putRepoV1AccessRequirementRequirementIdAcl()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AccessRequirementServicesApi$putRepoV1AccessRequirementRequirementIdAcl(
  requirement_id,
  org_sagebionetworks_repo_model_access_control_list,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{requirement_id}}{}

\item{\code{org_sagebionetworks_repo_model_access_control_list}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelAccessControlList
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AccessRequirementServicesApi-putRepoV1AccessRequirementRequirementIdAclWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-AccessRequirementServicesApi-putRepoV1AccessRequirementRequirementIdAclWithHttpInfo}{}}}
\subsection{Method \code{putRepoV1AccessRequirementRequirementIdAclWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AccessRequirementServicesApi$putRepoV1AccessRequirementRequirementIdAclWithHttpInfo(
  requirement_id,
  org_sagebionetworks_repo_model_access_control_list,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{requirement_id}}{}

\item{\code{org_sagebionetworks_repo_model_access_control_list}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelAccessControlList) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AccessRequirementServicesApi-clone"></a>}}
\if{latex}{\out{\hypertarget{method-AccessRequirementServicesApi-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AccessRequirementServicesApi$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
