% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/org_sagebionetworks_repo_model_trashed_entity.R
\docType{class}
\name{OrgSagebionetworksRepoModelTrashedEntity}
\alias{OrgSagebionetworksRepoModelTrashedEntity}
\title{OrgSagebionetworksRepoModelTrashedEntity}
\format{
An \code{R6Class} generator object
}
\description{
JSON schema for the TrashEntity POJO. A trashed entity is an entity in the trash can.

OrgSagebionetworksRepoModelTrashedEntity Class
}
\details{
Create a new OrgSagebionetworksRepoModelTrashedEntity
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{entityId}}{character [optional]}

\item{\code{entityName}}{character [optional]}

\item{\code{entityType}}{character [optional]}

\item{\code{deletedByPrincipalId}}{character [optional]}

\item{\code{deletedOn}}{character [optional]}

\item{\code{originalParentId}}{character [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-OrgSagebionetworksRepoModelTrashedEntity-new}{\code{OrgSagebionetworksRepoModelTrashedEntity$new()}}
\item \href{#method-OrgSagebionetworksRepoModelTrashedEntity-toJSON}{\code{OrgSagebionetworksRepoModelTrashedEntity$toJSON()}}
\item \href{#method-OrgSagebionetworksRepoModelTrashedEntity-fromJSON}{\code{OrgSagebionetworksRepoModelTrashedEntity$fromJSON()}}
\item \href{#method-OrgSagebionetworksRepoModelTrashedEntity-toJSONString}{\code{OrgSagebionetworksRepoModelTrashedEntity$toJSONString()}}
\item \href{#method-OrgSagebionetworksRepoModelTrashedEntity-fromJSONString}{\code{OrgSagebionetworksRepoModelTrashedEntity$fromJSONString()}}
\item \href{#method-OrgSagebionetworksRepoModelTrashedEntity-validateJSON}{\code{OrgSagebionetworksRepoModelTrashedEntity$validateJSON()}}
\item \href{#method-OrgSagebionetworksRepoModelTrashedEntity-toString}{\code{OrgSagebionetworksRepoModelTrashedEntity$toString()}}
\item \href{#method-OrgSagebionetworksRepoModelTrashedEntity-isValid}{\code{OrgSagebionetworksRepoModelTrashedEntity$isValid()}}
\item \href{#method-OrgSagebionetworksRepoModelTrashedEntity-getInvalidFields}{\code{OrgSagebionetworksRepoModelTrashedEntity$getInvalidFields()}}
\item \href{#method-OrgSagebionetworksRepoModelTrashedEntity-print}{\code{OrgSagebionetworksRepoModelTrashedEntity$print()}}
\item \href{#method-OrgSagebionetworksRepoModelTrashedEntity-clone}{\code{OrgSagebionetworksRepoModelTrashedEntity$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTrashedEntity-new"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTrashedEntity-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new OrgSagebionetworksRepoModelTrashedEntity class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTrashedEntity$new(
  entityId = NULL,
  entityName = NULL,
  entityType = NULL,
  deletedByPrincipalId = NULL,
  deletedOn = NULL,
  originalParentId = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{entityId}}{entityId}

\item{\code{entityName}}{entityName}

\item{\code{entityType}}{entityType}

\item{\code{deletedByPrincipalId}}{deletedByPrincipalId}

\item{\code{deletedOn}}{deletedOn}

\item{\code{originalParentId}}{originalParentId}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTrashedEntity-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTrashedEntity-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTrashedEntity$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
OrgSagebionetworksRepoModelTrashedEntity in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTrashedEntity-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTrashedEntity-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of OrgSagebionetworksRepoModelTrashedEntity
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTrashedEntity$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of OrgSagebionetworksRepoModelTrashedEntity
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTrashedEntity-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTrashedEntity-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTrashedEntity$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
OrgSagebionetworksRepoModelTrashedEntity in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTrashedEntity-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTrashedEntity-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of OrgSagebionetworksRepoModelTrashedEntity
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTrashedEntity$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of OrgSagebionetworksRepoModelTrashedEntity
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTrashedEntity-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTrashedEntity-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to OrgSagebionetworksRepoModelTrashedEntity and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTrashedEntity$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTrashedEntity-toString"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTrashedEntity-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTrashedEntity$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of OrgSagebionetworksRepoModelTrashedEntity
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTrashedEntity-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTrashedEntity-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTrashedEntity$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTrashedEntity-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTrashedEntity-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTrashedEntity$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTrashedEntity-print"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTrashedEntity-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTrashedEntity$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTrashedEntity-clone"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTrashedEntity-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTrashedEntity$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
