% Generated by roxygen2: do not edit by hand
% Please edit documentation in
%   R/org_sagebionetworks_repo_model_schema_validation_results.R
\docType{class}
\name{OrgSagebionetworksRepoModelSchemaValidationResults}
\alias{OrgSagebionetworksRepoModelSchemaValidationResults}
\title{OrgSagebionetworksRepoModelSchemaValidationResults}
\format{
An \code{R6Class} generator object
}
\description{
Results of validating an object against a schema

OrgSagebionetworksRepoModelSchemaValidationResults Class
}
\details{
Create a new OrgSagebionetworksRepoModelSchemaValidationResults
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{objectId}}{character [optional]}

\item{\code{objectType}}{character [optional]}

\item{\code{objectEtag}}{character [optional]}

\item{\code{schema$id}}{character [optional]}

\item{\code{isValid}}{character [optional]}

\item{\code{validatedOn}}{character [optional]}

\item{\code{validationErrorMessage}}{character [optional]}

\item{\code{allValidationMessages}}{If the object is not valid according to the schema, a the flat list of error messages will be provided with one error message per sub-schema. list(character) [optional]}

\item{\code{validationException}}{\link{OrgSagebionetworksRepoModelSchemaValidationException} [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-OrgSagebionetworksRepoModelSchemaValidationResults-new}{\code{OrgSagebionetworksRepoModelSchemaValidationResults$new()}}
\item \href{#method-OrgSagebionetworksRepoModelSchemaValidationResults-toJSON}{\code{OrgSagebionetworksRepoModelSchemaValidationResults$toJSON()}}
\item \href{#method-OrgSagebionetworksRepoModelSchemaValidationResults-fromJSON}{\code{OrgSagebionetworksRepoModelSchemaValidationResults$fromJSON()}}
\item \href{#method-OrgSagebionetworksRepoModelSchemaValidationResults-toJSONString}{\code{OrgSagebionetworksRepoModelSchemaValidationResults$toJSONString()}}
\item \href{#method-OrgSagebionetworksRepoModelSchemaValidationResults-fromJSONString}{\code{OrgSagebionetworksRepoModelSchemaValidationResults$fromJSONString()}}
\item \href{#method-OrgSagebionetworksRepoModelSchemaValidationResults-validateJSON}{\code{OrgSagebionetworksRepoModelSchemaValidationResults$validateJSON()}}
\item \href{#method-OrgSagebionetworksRepoModelSchemaValidationResults-toString}{\code{OrgSagebionetworksRepoModelSchemaValidationResults$toString()}}
\item \href{#method-OrgSagebionetworksRepoModelSchemaValidationResults-getInvalidFields}{\code{OrgSagebionetworksRepoModelSchemaValidationResults$getInvalidFields()}}
\item \href{#method-OrgSagebionetworksRepoModelSchemaValidationResults-print}{\code{OrgSagebionetworksRepoModelSchemaValidationResults$print()}}
\item \href{#method-OrgSagebionetworksRepoModelSchemaValidationResults-clone}{\code{OrgSagebionetworksRepoModelSchemaValidationResults$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelSchemaValidationResults-new"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelSchemaValidationResults-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new OrgSagebionetworksRepoModelSchemaValidationResults class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelSchemaValidationResults$new(
  objectId = NULL,
  objectType = NULL,
  objectEtag = NULL,
  `schema$id` = NULL,
  isValid = NULL,
  validatedOn = NULL,
  validationErrorMessage = NULL,
  allValidationMessages = NULL,
  validationException = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{objectId}}{objectId}

\item{\code{objectType}}{objectType}

\item{\code{objectEtag}}{objectEtag}

\item{\code{schema$id}}{schema$id}

\item{\code{isValid}}{isValid}

\item{\code{validatedOn}}{validatedOn}

\item{\code{validationErrorMessage}}{validationErrorMessage}

\item{\code{allValidationMessages}}{If the object is not valid according to the schema, a the flat list of error messages will be provided with one error message per sub-schema.}

\item{\code{validationException}}{validationException}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelSchemaValidationResults-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelSchemaValidationResults-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelSchemaValidationResults$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
OrgSagebionetworksRepoModelSchemaValidationResults in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelSchemaValidationResults-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelSchemaValidationResults-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of OrgSagebionetworksRepoModelSchemaValidationResults
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelSchemaValidationResults$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of OrgSagebionetworksRepoModelSchemaValidationResults
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelSchemaValidationResults-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelSchemaValidationResults-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelSchemaValidationResults$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
OrgSagebionetworksRepoModelSchemaValidationResults in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelSchemaValidationResults-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelSchemaValidationResults-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of OrgSagebionetworksRepoModelSchemaValidationResults
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelSchemaValidationResults$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of OrgSagebionetworksRepoModelSchemaValidationResults
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelSchemaValidationResults-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelSchemaValidationResults-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to OrgSagebionetworksRepoModelSchemaValidationResults and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelSchemaValidationResults$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelSchemaValidationResults-toString"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelSchemaValidationResults-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelSchemaValidationResults$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of OrgSagebionetworksRepoModelSchemaValidationResults
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelSchemaValidationResults-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelSchemaValidationResults-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return true if the values in all fields are valid.


Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelSchemaValidationResults$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelSchemaValidationResults-print"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelSchemaValidationResults-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelSchemaValidationResults$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelSchemaValidationResults-clone"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelSchemaValidationResults-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelSchemaValidationResults$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
