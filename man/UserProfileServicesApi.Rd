% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/user_profile_services_api.R
\docType{class}
\name{UserProfileServicesApi}
\alias{UserProfileServicesApi}
\title{UserProfileServices operations}
\format{
An \code{R6Class} generator object
}
\description{
UserProfileServicesApi
}
\details{
Synapse REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: v1
Generated by: https://openapi-generator.tech
}
\section{Methods}{

\describe{
\strong{ deleteRepoV1FavoriteId } \emph{  }

\itemize{
\item \emph{ @param } id character


\item status code : 204 | Void


\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1Favorite } \emph{  }

\itemize{
\item \emph{ @param } offset integer
\item \emph{ @param } limit integer
\item \emph{ @param } sort \link{OrgSagebionetworksRepoModelFavoriteSortBy}
\item \emph{ @param } sort_direction \link{OrgSagebionetworksRepoModelFavoriteSortDirection}
\item \emph{ @returnType } \link{PaginatedResultsOfEntityHeader} \cr


\item status code : 200 | Auto-generated description

\item return type : PaginatedResultsOfEntityHeader
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1Projects } \emph{  }

\itemize{
\item \emph{ @param } team_id numeric
\item \emph{ @param } filter \link{OrgSagebionetworksRepoModelProjectListType}
\item \emph{ @param } sort \link{OrgSagebionetworksRepoModelProjectListSortColumn}
\item \emph{ @param } sort_direction \link{OrgSagebionetworksRepoModelEntityQuerySortDirection}
\item \emph{ @param } next_page_token character
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelProjectHeaderList} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelProjectHeaderList
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1ProjectsUserPrincipalId } \emph{  }

\itemize{
\item \emph{ @param } principal_id numeric
\item \emph{ @param } team_id numeric
\item \emph{ @param } filter \link{OrgSagebionetworksRepoModelProjectListType}
\item \emph{ @param } sort \link{OrgSagebionetworksRepoModelProjectListSortColumn}
\item \emph{ @param } sort_direction \link{OrgSagebionetworksRepoModelEntityQuerySortDirection}
\item \emph{ @param } next_page_token character
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelProjectHeaderList} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelProjectHeaderList
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1User } \emph{  }

\itemize{
\item \emph{ @param } offset integer
\item \emph{ @param } limit integer
\item \emph{ @param } sort character
\item \emph{ @param } ascending character
\item \emph{ @returnType } \link{PaginatedResultsOfUserProfile} \cr


\item status code : 200 | Auto-generated description

\item return type : PaginatedResultsOfUserProfile
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1UserBundle } \emph{  }

\itemize{
\item \emph{ @param } mask integer
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelUserBundle} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelUserBundle
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1UserGroupHeaders } \emph{  }

\itemize{
\item \emph{ @param } prefix character
\item \emph{ @param } type_filter \link{OrgSagebionetworksRepoModelPrincipalTypeFilter}
\item \emph{ @param } offset integer
\item \emph{ @param } limit integer
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelUserGroupHeaderResponsePage} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelUserGroupHeaderResponsePage
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1UserGroupHeadersBatch } \emph{  }

\itemize{
\item \emph{ @param } ids character
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelUserGroupHeaderResponsePage} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelUserGroupHeaderResponsePage
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1UserIdBundle } \emph{  }

\itemize{
\item \emph{ @param } mask integer
\item \emph{ @param } id character
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelUserBundle} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelUserBundle
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1UserProfile } \emph{  }

\itemize{
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelUserProfile} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelUserProfile
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1UserProfileProfileId } \emph{  }

\itemize{
\item \emph{ @param } profile_id character
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelUserProfile} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelUserProfile
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1UserProfileProfileIdImage } \emph{  }

\itemize{
\item \emph{ @param } profile_id character
\item \emph{ @param } redirect character
\item \emph{ @returnType } \link{AnyType} \cr


\item status code : 200 | Status 200 will be returned if the 'redirect' boolean param is false

\item return type : AnyType
\item response headers :

\tabular{ll}{
}
\item status code : 307 | Status 307 will be returned if the 'redirect' boolean param is true or null


\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1UserProfileProfileIdImagePreview } \emph{  }

\itemize{
\item \emph{ @param } profile_id character
\item \emph{ @param } redirect character
\item \emph{ @returnType } \link{AnyType} \cr


\item status code : 200 | Status 200 will be returned if the 'redirect' boolean param is false

\item return type : AnyType
\item response headers :

\tabular{ll}{
}
\item status code : 307 | Status 307 will be returned if the 'redirect' boolean param is true or null


\item response headers :

\tabular{ll}{
}
}

\strong{ postRepoV1FavoriteId } \emph{  }

\itemize{
\item \emph{ @param } id character
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelEntityHeader} \cr


\item status code : 201 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelEntityHeader
\item response headers :

\tabular{ll}{
}
}

\strong{ postRepoV1UserGroupHeadersAliases } \emph{  }

\itemize{
\item \emph{ @param } org_sagebionetworks_repo_model_principal_alias_list \link{OrgSagebionetworksRepoModelPrincipalAliasList}
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelPrincipalUserGroupHeaderResponse} \cr


\item status code : 200 | The list UserGroupHeaders that match the requested Aliases. The order          of the request is preserved in the response. If a requested alias          does not match an existing user name or team name then no header          will be returned.

\item return type : OrgSagebionetworksRepoModelPrincipalUserGroupHeaderResponse
\item response headers :

\tabular{ll}{
}
}

\strong{ postRepoV1UserProfile } \emph{  }

\itemize{
\item \emph{ @param } org_sagebionetworks_repo_model_id_list \link{OrgSagebionetworksRepoModelIdList}
\item \emph{ @returnType } \link{ListWrapperOfUserProfile} \cr


\item status code : 200 | Auto-generated description

\item return type : ListWrapperOfUserProfile
\item response headers :

\tabular{ll}{
}
}

\strong{ putRepoV1NotificationSettings } \emph{  }

\itemize{
\item \emph{ @param } org_sagebionetworks_repo_model_message_notification_settings_signed_token \link{OrgSagebionetworksRepoModelMessageNotificationSettingsSignedToken}
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelResponseMessage} \cr


\item status code : 200 | A success message, if successful.

\item return type : OrgSagebionetworksRepoModelResponseMessage
\item response headers :

\tabular{ll}{
}
}

\strong{ putRepoV1UserProfile } \emph{  }

\itemize{
\item \emph{ @param } org_sagebionetworks_repo_model_user_profile \link{OrgSagebionetworksRepoModelUserProfile}
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelUserProfile} \cr


\item status code : 200 | The updated ,<a href=\"${org.sagebionetworks.repo.model.UserProfile}\">,UserProfile,</a>

\item return type : OrgSagebionetworksRepoModelUserProfile
\item response headers :

\tabular{ll}{
}
}

}
}

\examples{
\dontrun{
####################  deleteRepoV1FavoriteId  ####################

library(synr)
var_id <- "id_example" # character | Entity ID of the ,<a href=\"${org.sagebionetworks.repo.model.Entity}\">,Entity,</a>, that should be removed as a favorite

api_instance <- UserProfileServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

api_instance$deleteRepoV1FavoriteId(var_id)


####################  getRepoV1Favorite  ####################

library(synr)
var_offset <- 56 # integer | The offset index determines where this page will start from. An index of 0 is the first item. ,<p>,<i>,Default is 0,</i>,</p> (Optional)
var_limit <- 56 # integer | Limits the number of items that will be fetched for this page. ,<p>,<i>,Default is 10,</i>,</p> (Optional)
var_sort <- org.sagebionetworks.repo.model.favorite.SortBy$new() # OrgSagebionetworksRepoModelFavoriteSortBy | Determines which field to use to sort the retrieved favorites. See ,<a href=\"${org.sagebionetworks.repo.model.favorite.SortBy}\">,SortBy,</a>,. ,<p>,<i>,Default is \"FAVORITED_ON\",</i>,</p>,. (Optional)
var_sort_direction <- org.sagebionetworks.repo.model.favorite.SortDirection$new() # OrgSagebionetworksRepoModelFavoriteSortDirection | The direction for sorting the retrieved favorites. See ,<a href=\"${org.sagebionetworks.repo.model.favorite.SortDirection}\">,SortDirection,</a>,. ,<p>,<i>,Default is \"DESC\",</i>,</p>,. (Optional)

api_instance <- UserProfileServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1Favorite(offset = var_offset, limit = var_limit, sort = var_sort, sort_direction = var_sort_directiondata_file = "result.txt")
result <- api_instance$getRepoV1Favorite(offset = var_offset, limit = var_limit, sort = var_sort, sort_direction = var_sort_direction)
dput(result)


####################  getRepoV1Projects  ####################

library(synr)
var_team_id <- 3.4 # numeric | If the projectFilter is 'TEAM' then this is the ID of the team through which the returned projects are shared with the user. (Optional)
var_filter <- org.sagebionetworks.repo.model.ProjectListType$new() # OrgSagebionetworksRepoModelProjectListType | see above (Optional)
var_sort <- org.sagebionetworks.repo.model.ProjectListSortColumn$new() # OrgSagebionetworksRepoModelProjectListSortColumn |  (Optional)
var_sort_direction <- org.sagebionetworks.repo.model.entity.query.SortDirection$new() # OrgSagebionetworksRepoModelEntityQuerySortDirection | The optional ,<a href=\"${org.sagebionetworks.repo.model.entity.query.SortDirection}\">,sort direction,</a>,.      ,<i>,Default sort descending,</i> (Optional)
var_next_page_token <- "next_page_token_example" # character | a token returned with the previous page of results (Optional)

api_instance <- UserProfileServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1Projects(team_id = var_team_id, filter = var_filter, sort = var_sort, sort_direction = var_sort_direction, next_page_token = var_next_page_tokendata_file = "result.txt")
result <- api_instance$getRepoV1Projects(team_id = var_team_id, filter = var_filter, sort = var_sort, sort_direction = var_sort_direction, next_page_token = var_next_page_token)
dput(result)


####################  getRepoV1ProjectsUserPrincipalId  ####################

library(synr)
var_principal_id <- 3.4 # numeric | The ID of the user to list projects for
var_team_id <- 3.4 # numeric | If the projectFilter is 'TEAM' then this is the ID of the team through which the returned projects are shared with 'principalId'. (Optional)
var_filter <- org.sagebionetworks.repo.model.ProjectListType$new() # OrgSagebionetworksRepoModelProjectListType | see above (Optional)
var_sort <- org.sagebionetworks.repo.model.ProjectListSortColumn$new() # OrgSagebionetworksRepoModelProjectListSortColumn |  (Optional)
var_sort_direction <- org.sagebionetworks.repo.model.entity.query.SortDirection$new() # OrgSagebionetworksRepoModelEntityQuerySortDirection | The optional ,<a href=\"${org.sagebionetworks.repo.model.entity.query.SortDirection}\">,sort direction,</a>,.      ,<i>,Default sort descending,</i> (Optional)
var_next_page_token <- "next_page_token_example" # character | a token returned with the previous page of results (Optional)

api_instance <- UserProfileServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1ProjectsUserPrincipalId(var_principal_id, team_id = var_team_id, filter = var_filter, sort = var_sort, sort_direction = var_sort_direction, next_page_token = var_next_page_tokendata_file = "result.txt")
result <- api_instance$getRepoV1ProjectsUserPrincipalId(var_principal_id, team_id = var_team_id, filter = var_filter, sort = var_sort, sort_direction = var_sort_direction, next_page_token = var_next_page_token)
dput(result)


####################  getRepoV1User  ####################

library(synr)
var_offset <- 56 # integer | The offset index determines where this page will start from. An index of 0 is the first item. ,<p>,<i>,Default is 0,</i>,</p> (Optional)
var_limit <- 56 # integer | Limits the number of items that will be fetched for this page. ,<p>,<i>,Default is 100,</i>,</p> (Optional)
var_sort <- "sort_example" # character | Used to indicate upon which field(s) to sort. ,<p>,<i>,Default is NONE,</i>,</p> (Optional)
var_ascending <- "ascending_example" # character | Used to indicate whether the sort direction is ascending or not.  ,<p>,<i>,Default is true,</i>,</p> (Optional)

api_instance <- UserProfileServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1User(offset = var_offset, limit = var_limit, sort = var_sort, ascending = var_ascendingdata_file = "result.txt")
result <- api_instance$getRepoV1User(offset = var_offset, limit = var_limit, sort = var_sort, ascending = var_ascending)
dput(result)


####################  getRepoV1UserBundle  ####################

library(synr)
var_mask <- 56 # integer | integer flag defining which components to include in the bundle    ,<p>, This integer is used as a bit-string of flags to specify which parts to include    in the UserBundle. The mask is defined as follows:  ,<ul>,  ,<li>, UserProfile  = 0x1 ,</li>,  ,<li>, ORCID  = 0x2 ,</li>,  ,<li>, VerificationSubmission  = 0x4 ,</li>,  ,<li>, IsCertified = 0x8 ,</li>,  ,<li>, Is Verified  = 0x10 ,</li>,  ,<li>, Is ACT Member = 0x20 ,</li>,  ,<li>, Is AR Reviewer = 0x40 ,</li>,  ,</ul>,  ,</p>

api_instance <- UserProfileServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1UserBundle(var_maskdata_file = "result.txt")
result <- api_instance$getRepoV1UserBundle(var_mask)
dput(result)


####################  getRepoV1UserGroupHeaders  ####################

library(synr)
var_prefix <- "prefix_example" # character |  (Optional)
var_type_filter <- org.sagebionetworks.repo.model.principal.TypeFilter$new() # OrgSagebionetworksRepoModelPrincipalTypeFilter | Restrict the results to a type of principal.              Available options: ,<a href=\"${org.sagebionetworks.repo.model.principal.TypeFilter}\">,TypeFilter,</a>,. (Optional)
var_offset <- 56 # integer | The offset index determines where this page will start from.             An index of 0 is the first item.             ,<p>,             ,<i>,Default is 0,</i>,             ,</p> (Optional)
var_limit <- 56 # integer | Limits the number of items that will be fetched for this page.             ,<p>,             ,<i>,Default is 10,</i>,             ,</p> (Optional)

api_instance <- UserProfileServicesApi$new()

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1UserGroupHeaders(prefix = var_prefix, type_filter = var_type_filter, offset = var_offset, limit = var_limitdata_file = "result.txt")
result <- api_instance$getRepoV1UserGroupHeaders(prefix = var_prefix, type_filter = var_type_filter, offset = var_offset, limit = var_limit)
dput(result)


####################  getRepoV1UserGroupHeadersBatch  ####################

library(synr)
var_ids <- "ids_example" # character | IDs are specified as request parameters at the end of the URL, separated by commas.  ,<p>,For example: ,<pre class=\"prettyprint\">,ids=1001,819,</pre>,</p>

api_instance <- UserProfileServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1UserGroupHeadersBatch(var_idsdata_file = "result.txt")
result <- api_instance$getRepoV1UserGroupHeadersBatch(var_ids)
dput(result)


####################  getRepoV1UserIdBundle  ####################

library(synr)
var_mask <- 56 # integer | integer flag defining which components to include in the bundle    ,<p>, This integer is used as a bit-string of flags to specify which parts to include    in the UserBundle. The mask is defined as follows:  ,<ul>,  ,<li>, UserProfile  = 0x1 ,</li>,  ,<li>, ORCID  = 0x2 ,</li>,  ,<li>, VerificationSubmission  = 0x4 ,</li>,  ,<li>, IsCertified = 0x8 ,</li>,  ,<li>, Is Verified  = 0x10 ,</li>,  ,<li>, Is ACT Member = 0x20 ,</li>,  ,<li>, Is AR Reviewer = 0x40 ,</li>,  ,</ul>,  ,</p>
var_id <- "id_example" # character | 

api_instance <- UserProfileServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1UserIdBundle(var_mask, var_iddata_file = "result.txt")
result <- api_instance$getRepoV1UserIdBundle(var_mask, var_id)
dput(result)


####################  getRepoV1UserProfile  ####################

library(synr)

api_instance <- UserProfileServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1UserProfile(data_file = "result.txt")
result <- api_instance$getRepoV1UserProfile()
dput(result)


####################  getRepoV1UserProfileProfileId  ####################

library(synr)
var_profile_id <- "profile_id_example" # character | The target profile owner ID (the \"id\" field returned in the \"/user\" request).

api_instance <- UserProfileServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1UserProfileProfileId(var_profile_iddata_file = "result.txt")
result <- api_instance$getRepoV1UserProfileProfileId(var_profile_id)
dput(result)


####################  getRepoV1UserProfileProfileIdImage  ####################

library(synr)
var_profile_id <- "profile_id_example" # character | 
var_redirect <- "redirect_example" # character | When set to false, the URL will be returned as text/plain             instead of redirecting. (Optional)

api_instance <- UserProfileServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1UserProfileProfileIdImage(var_profile_id, redirect = var_redirectdata_file = "result.txt")
result <- api_instance$getRepoV1UserProfileProfileIdImage(var_profile_id, redirect = var_redirect)
dput(result)


####################  getRepoV1UserProfileProfileIdImagePreview  ####################

library(synr)
var_profile_id <- "profile_id_example" # character | 
var_redirect <- "redirect_example" # character | When set to false, the URL will be returned as text/plain             instead of redirecting. (Optional)

api_instance <- UserProfileServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1UserProfileProfileIdImagePreview(var_profile_id, redirect = var_redirectdata_file = "result.txt")
result <- api_instance$getRepoV1UserProfileProfileIdImagePreview(var_profile_id, redirect = var_redirect)
dput(result)


####################  postRepoV1FavoriteId  ####################

library(synr)
var_id <- "id_example" # character | Entity ID of the favorite ,<a href=\"${org.sagebionetworks.repo.model.Entity}\">,Entity,</a>

api_instance <- UserProfileServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$postRepoV1FavoriteId(var_iddata_file = "result.txt")
result <- api_instance$postRepoV1FavoriteId(var_id)
dput(result)


####################  postRepoV1UserGroupHeadersAliases  ####################

library(synr)
var_org_sagebionetworks_repo_model_principal_alias_list <- org.sagebionetworks.repo.model.principal.AliasList$new(c("list_example")) # OrgSagebionetworksRepoModelPrincipalAliasList | 

api_instance <- UserProfileServicesApi$new()

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$postRepoV1UserGroupHeadersAliases(var_org_sagebionetworks_repo_model_principal_alias_listdata_file = "result.txt")
result <- api_instance$postRepoV1UserGroupHeadersAliases(var_org_sagebionetworks_repo_model_principal_alias_list)
dput(result)


####################  postRepoV1UserProfile  ####################

library(synr)
var_org_sagebionetworks_repo_model_id_list <- org.sagebionetworks.repo.model.IdList$new(c(123)) # OrgSagebionetworksRepoModelIdList | 

api_instance <- UserProfileServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$postRepoV1UserProfile(var_org_sagebionetworks_repo_model_id_listdata_file = "result.txt")
result <- api_instance$postRepoV1UserProfile(var_org_sagebionetworks_repo_model_id_list)
dput(result)


####################  putRepoV1NotificationSettings  ####################

library(synr)
var_org_sagebionetworks_repo_model_message_notification_settings_signed_token <- org.sagebionetworks.repo.model.message.NotificationSettingsSignedToken$new("org.sagebionetworks.repo.model.message.NotificationSettingsSignedToken", "hmac_example", 123, "expiresOn_example", "createdOn_example", "userId_example", org.sagebionetworks.repo.model.message.Settings$new("sendEmailNotifications_example", "markEmailedMessagesAsRead_example")) # OrgSagebionetworksRepoModelMessageNotificationSettingsSignedToken | 

api_instance <- UserProfileServicesApi$new()

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$putRepoV1NotificationSettings(var_org_sagebionetworks_repo_model_message_notification_settings_signed_tokendata_file = "result.txt")
result <- api_instance$putRepoV1NotificationSettings(var_org_sagebionetworks_repo_model_message_notification_settings_signed_token)
dput(result)


####################  putRepoV1UserProfile  ####################

library(synr)
var_org_sagebionetworks_repo_model_user_profile <- org.sagebionetworks.repo.model.UserProfile$new("ownerId_example", "etag_example", "firstName_example", "lastName_example", "email_example", c("emails_example"), c("openIds_example"), "userName_example", "displayName_example", "rStudioUrl_example", "summary_example", "position_example", "location_example", "industry_example", "company_example", "profilePicureFileHandleId_example", "url_example", "teamName_example", org.sagebionetworks.repo.model.message.Settings$new("sendEmailNotifications_example", "markEmailedMessagesAsRead_example"), c(org.sagebionetworks.repo.model.UserPreference$new("concreteType_example", "name_example", "value_example")), "createdOn_example", "twoFactorAuthEnabled_example") # OrgSagebionetworksRepoModelUserProfile | 

api_instance <- UserProfileServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$putRepoV1UserProfile(var_org_sagebionetworks_repo_model_user_profiledata_file = "result.txt")
result <- api_instance$putRepoV1UserProfile(var_org_sagebionetworks_repo_model_user_profile)
dput(result)


}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{api_client}}{Handles the client-server communication.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-UserProfileServicesApi-new}{\code{UserProfileServicesApi$new()}}
\item \href{#method-UserProfileServicesApi-deleteRepoV1FavoriteId}{\code{UserProfileServicesApi$deleteRepoV1FavoriteId()}}
\item \href{#method-UserProfileServicesApi-deleteRepoV1FavoriteIdWithHttpInfo}{\code{UserProfileServicesApi$deleteRepoV1FavoriteIdWithHttpInfo()}}
\item \href{#method-UserProfileServicesApi-getRepoV1Favorite}{\code{UserProfileServicesApi$getRepoV1Favorite()}}
\item \href{#method-UserProfileServicesApi-getRepoV1FavoriteWithHttpInfo}{\code{UserProfileServicesApi$getRepoV1FavoriteWithHttpInfo()}}
\item \href{#method-UserProfileServicesApi-getRepoV1Projects}{\code{UserProfileServicesApi$getRepoV1Projects()}}
\item \href{#method-UserProfileServicesApi-getRepoV1ProjectsWithHttpInfo}{\code{UserProfileServicesApi$getRepoV1ProjectsWithHttpInfo()}}
\item \href{#method-UserProfileServicesApi-getRepoV1ProjectsUserPrincipalId}{\code{UserProfileServicesApi$getRepoV1ProjectsUserPrincipalId()}}
\item \href{#method-UserProfileServicesApi-getRepoV1ProjectsUserPrincipalIdWithHttpInfo}{\code{UserProfileServicesApi$getRepoV1ProjectsUserPrincipalIdWithHttpInfo()}}
\item \href{#method-UserProfileServicesApi-getRepoV1User}{\code{UserProfileServicesApi$getRepoV1User()}}
\item \href{#method-UserProfileServicesApi-getRepoV1UserWithHttpInfo}{\code{UserProfileServicesApi$getRepoV1UserWithHttpInfo()}}
\item \href{#method-UserProfileServicesApi-getRepoV1UserBundle}{\code{UserProfileServicesApi$getRepoV1UserBundle()}}
\item \href{#method-UserProfileServicesApi-getRepoV1UserBundleWithHttpInfo}{\code{UserProfileServicesApi$getRepoV1UserBundleWithHttpInfo()}}
\item \href{#method-UserProfileServicesApi-getRepoV1UserGroupHeaders}{\code{UserProfileServicesApi$getRepoV1UserGroupHeaders()}}
\item \href{#method-UserProfileServicesApi-getRepoV1UserGroupHeadersWithHttpInfo}{\code{UserProfileServicesApi$getRepoV1UserGroupHeadersWithHttpInfo()}}
\item \href{#method-UserProfileServicesApi-getRepoV1UserGroupHeadersBatch}{\code{UserProfileServicesApi$getRepoV1UserGroupHeadersBatch()}}
\item \href{#method-UserProfileServicesApi-getRepoV1UserGroupHeadersBatchWithHttpInfo}{\code{UserProfileServicesApi$getRepoV1UserGroupHeadersBatchWithHttpInfo()}}
\item \href{#method-UserProfileServicesApi-getRepoV1UserIdBundle}{\code{UserProfileServicesApi$getRepoV1UserIdBundle()}}
\item \href{#method-UserProfileServicesApi-getRepoV1UserIdBundleWithHttpInfo}{\code{UserProfileServicesApi$getRepoV1UserIdBundleWithHttpInfo()}}
\item \href{#method-UserProfileServicesApi-getRepoV1UserProfile}{\code{UserProfileServicesApi$getRepoV1UserProfile()}}
\item \href{#method-UserProfileServicesApi-getRepoV1UserProfileWithHttpInfo}{\code{UserProfileServicesApi$getRepoV1UserProfileWithHttpInfo()}}
\item \href{#method-UserProfileServicesApi-getRepoV1UserProfileProfileId}{\code{UserProfileServicesApi$getRepoV1UserProfileProfileId()}}
\item \href{#method-UserProfileServicesApi-getRepoV1UserProfileProfileIdWithHttpInfo}{\code{UserProfileServicesApi$getRepoV1UserProfileProfileIdWithHttpInfo()}}
\item \href{#method-UserProfileServicesApi-getRepoV1UserProfileProfileIdImage}{\code{UserProfileServicesApi$getRepoV1UserProfileProfileIdImage()}}
\item \href{#method-UserProfileServicesApi-getRepoV1UserProfileProfileIdImageWithHttpInfo}{\code{UserProfileServicesApi$getRepoV1UserProfileProfileIdImageWithHttpInfo()}}
\item \href{#method-UserProfileServicesApi-getRepoV1UserProfileProfileIdImagePreview}{\code{UserProfileServicesApi$getRepoV1UserProfileProfileIdImagePreview()}}
\item \href{#method-UserProfileServicesApi-getRepoV1UserProfileProfileIdImagePreviewWithHttpInfo}{\code{UserProfileServicesApi$getRepoV1UserProfileProfileIdImagePreviewWithHttpInfo()}}
\item \href{#method-UserProfileServicesApi-postRepoV1FavoriteId}{\code{UserProfileServicesApi$postRepoV1FavoriteId()}}
\item \href{#method-UserProfileServicesApi-postRepoV1FavoriteIdWithHttpInfo}{\code{UserProfileServicesApi$postRepoV1FavoriteIdWithHttpInfo()}}
\item \href{#method-UserProfileServicesApi-postRepoV1UserGroupHeadersAliases}{\code{UserProfileServicesApi$postRepoV1UserGroupHeadersAliases()}}
\item \href{#method-UserProfileServicesApi-postRepoV1UserGroupHeadersAliasesWithHttpInfo}{\code{UserProfileServicesApi$postRepoV1UserGroupHeadersAliasesWithHttpInfo()}}
\item \href{#method-UserProfileServicesApi-postRepoV1UserProfile}{\code{UserProfileServicesApi$postRepoV1UserProfile()}}
\item \href{#method-UserProfileServicesApi-postRepoV1UserProfileWithHttpInfo}{\code{UserProfileServicesApi$postRepoV1UserProfileWithHttpInfo()}}
\item \href{#method-UserProfileServicesApi-putRepoV1NotificationSettings}{\code{UserProfileServicesApi$putRepoV1NotificationSettings()}}
\item \href{#method-UserProfileServicesApi-putRepoV1NotificationSettingsWithHttpInfo}{\code{UserProfileServicesApi$putRepoV1NotificationSettingsWithHttpInfo()}}
\item \href{#method-UserProfileServicesApi-putRepoV1UserProfile}{\code{UserProfileServicesApi$putRepoV1UserProfile()}}
\item \href{#method-UserProfileServicesApi-putRepoV1UserProfileWithHttpInfo}{\code{UserProfileServicesApi$putRepoV1UserProfileWithHttpInfo()}}
\item \href{#method-UserProfileServicesApi-clone}{\code{UserProfileServicesApi$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UserProfileServicesApi-new"></a>}}
\if{latex}{\out{\hypertarget{method-UserProfileServicesApi-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new UserProfileServicesApi.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UserProfileServicesApi$new(api_client)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{api_client}}{An instance of API client.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UserProfileServicesApi-deleteRepoV1FavoriteId"></a>}}
\if{latex}{\out{\hypertarget{method-UserProfileServicesApi-deleteRepoV1FavoriteId}{}}}
\subsection{Method \code{deleteRepoV1FavoriteId()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UserProfileServicesApi$deleteRepoV1FavoriteId(id, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{Entity ID of the ,<a href=\"${org.sagebionetworks.repo.model.Entity}\">,Entity,</a>, that should be removed as a favorite}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
void
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UserProfileServicesApi-deleteRepoV1FavoriteIdWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-UserProfileServicesApi-deleteRepoV1FavoriteIdWithHttpInfo}{}}}
\subsection{Method \code{deleteRepoV1FavoriteIdWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UserProfileServicesApi$deleteRepoV1FavoriteIdWithHttpInfo(id, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{Entity ID of the ,<a href=\"${org.sagebionetworks.repo.model.Entity}\">,Entity,</a>, that should be removed as a favorite}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (void) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UserProfileServicesApi-getRepoV1Favorite"></a>}}
\if{latex}{\out{\hypertarget{method-UserProfileServicesApi-getRepoV1Favorite}{}}}
\subsection{Method \code{getRepoV1Favorite()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UserProfileServicesApi$getRepoV1Favorite(
  offset = NULL,
  limit = NULL,
  sort = NULL,
  sort_direction = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{offset}}{(optional) The offset index determines where this page will start from. An index of 0 is the first item. ,<p>,<i>,Default is 0,</i>,</p>}

\item{\code{limit}}{(optional) Limits the number of items that will be fetched for this page. ,<p>,<i>,Default is 10,</i>,</p>}

\item{\code{sort}}{(optional) Determines which field to use to sort the retrieved favorites. See ,<a href=\"${org.sagebionetworks.repo.model.favorite.SortBy}\">,SortBy,</a>,. ,<p>,<i>,Default is \"FAVORITED_ON\",</i>,</p>,.}

\item{\code{sort_direction}}{(optional) The direction for sorting the retrieved favorites. See ,<a href=\"${org.sagebionetworks.repo.model.favorite.SortDirection}\">,SortDirection,</a>,. ,<p>,<i>,Default is \"DESC\",</i>,</p>,.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
PaginatedResultsOfEntityHeader
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UserProfileServicesApi-getRepoV1FavoriteWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-UserProfileServicesApi-getRepoV1FavoriteWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1FavoriteWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UserProfileServicesApi$getRepoV1FavoriteWithHttpInfo(
  offset = NULL,
  limit = NULL,
  sort = NULL,
  sort_direction = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{offset}}{(optional) The offset index determines where this page will start from. An index of 0 is the first item. ,<p>,<i>,Default is 0,</i>,</p>}

\item{\code{limit}}{(optional) Limits the number of items that will be fetched for this page. ,<p>,<i>,Default is 10,</i>,</p>}

\item{\code{sort}}{(optional) Determines which field to use to sort the retrieved favorites. See ,<a href=\"${org.sagebionetworks.repo.model.favorite.SortBy}\">,SortBy,</a>,. ,<p>,<i>,Default is \"FAVORITED_ON\",</i>,</p>,.}

\item{\code{sort_direction}}{(optional) The direction for sorting the retrieved favorites. See ,<a href=\"${org.sagebionetworks.repo.model.favorite.SortDirection}\">,SortDirection,</a>,. ,<p>,<i>,Default is \"DESC\",</i>,</p>,.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (PaginatedResultsOfEntityHeader) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UserProfileServicesApi-getRepoV1Projects"></a>}}
\if{latex}{\out{\hypertarget{method-UserProfileServicesApi-getRepoV1Projects}{}}}
\subsection{Method \code{getRepoV1Projects()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UserProfileServicesApi$getRepoV1Projects(
  team_id = NULL,
  filter = NULL,
  sort = NULL,
  sort_direction = NULL,
  next_page_token = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{team_id}}{(optional) If the projectFilter is 'TEAM' then this is the ID of the team through which the returned projects are shared with the user.}

\item{\code{filter}}{(optional) see above}

\item{\code{sort}}{(optional) No description}

\item{\code{sort_direction}}{(optional) The optional ,<a href=\"${org.sagebionetworks.repo.model.entity.query.SortDirection}\">,sort direction,</a>,.      ,<i>,Default sort descending,</i>}

\item{\code{next_page_token}}{(optional) a token returned with the previous page of results}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelProjectHeaderList
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UserProfileServicesApi-getRepoV1ProjectsWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-UserProfileServicesApi-getRepoV1ProjectsWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1ProjectsWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UserProfileServicesApi$getRepoV1ProjectsWithHttpInfo(
  team_id = NULL,
  filter = NULL,
  sort = NULL,
  sort_direction = NULL,
  next_page_token = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{team_id}}{(optional) If the projectFilter is 'TEAM' then this is the ID of the team through which the returned projects are shared with the user.}

\item{\code{filter}}{(optional) see above}

\item{\code{sort}}{(optional) No description}

\item{\code{sort_direction}}{(optional) The optional ,<a href=\"${org.sagebionetworks.repo.model.entity.query.SortDirection}\">,sort direction,</a>,.      ,<i>,Default sort descending,</i>}

\item{\code{next_page_token}}{(optional) a token returned with the previous page of results}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelProjectHeaderList) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UserProfileServicesApi-getRepoV1ProjectsUserPrincipalId"></a>}}
\if{latex}{\out{\hypertarget{method-UserProfileServicesApi-getRepoV1ProjectsUserPrincipalId}{}}}
\subsection{Method \code{getRepoV1ProjectsUserPrincipalId()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UserProfileServicesApi$getRepoV1ProjectsUserPrincipalId(
  principal_id,
  team_id = NULL,
  filter = NULL,
  sort = NULL,
  sort_direction = NULL,
  next_page_token = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{principal_id}}{The ID of the user to list projects for}

\item{\code{team_id}}{(optional) If the projectFilter is 'TEAM' then this is the ID of the team through which the returned projects are shared with 'principalId'.}

\item{\code{filter}}{(optional) see above}

\item{\code{sort}}{(optional) No description}

\item{\code{sort_direction}}{(optional) The optional ,<a href=\"${org.sagebionetworks.repo.model.entity.query.SortDirection}\">,sort direction,</a>,.      ,<i>,Default sort descending,</i>}

\item{\code{next_page_token}}{(optional) a token returned with the previous page of results}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelProjectHeaderList
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UserProfileServicesApi-getRepoV1ProjectsUserPrincipalIdWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-UserProfileServicesApi-getRepoV1ProjectsUserPrincipalIdWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1ProjectsUserPrincipalIdWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UserProfileServicesApi$getRepoV1ProjectsUserPrincipalIdWithHttpInfo(
  principal_id,
  team_id = NULL,
  filter = NULL,
  sort = NULL,
  sort_direction = NULL,
  next_page_token = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{principal_id}}{The ID of the user to list projects for}

\item{\code{team_id}}{(optional) If the projectFilter is 'TEAM' then this is the ID of the team through which the returned projects are shared with 'principalId'.}

\item{\code{filter}}{(optional) see above}

\item{\code{sort}}{(optional) No description}

\item{\code{sort_direction}}{(optional) The optional ,<a href=\"${org.sagebionetworks.repo.model.entity.query.SortDirection}\">,sort direction,</a>,.      ,<i>,Default sort descending,</i>}

\item{\code{next_page_token}}{(optional) a token returned with the previous page of results}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelProjectHeaderList) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UserProfileServicesApi-getRepoV1User"></a>}}
\if{latex}{\out{\hypertarget{method-UserProfileServicesApi-getRepoV1User}{}}}
\subsection{Method \code{getRepoV1User()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UserProfileServicesApi$getRepoV1User(
  offset = NULL,
  limit = NULL,
  sort = NULL,
  ascending = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{offset}}{(optional) The offset index determines where this page will start from. An index of 0 is the first item. ,<p>,<i>,Default is 0,</i>,</p>}

\item{\code{limit}}{(optional) Limits the number of items that will be fetched for this page. ,<p>,<i>,Default is 100,</i>,</p>}

\item{\code{sort}}{(optional) Used to indicate upon which field(s) to sort. ,<p>,<i>,Default is NONE,</i>,</p>}

\item{\code{ascending}}{(optional) Used to indicate whether the sort direction is ascending or not.  ,<p>,<i>,Default is true,</i>,</p>}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
PaginatedResultsOfUserProfile
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UserProfileServicesApi-getRepoV1UserWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-UserProfileServicesApi-getRepoV1UserWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1UserWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UserProfileServicesApi$getRepoV1UserWithHttpInfo(
  offset = NULL,
  limit = NULL,
  sort = NULL,
  ascending = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{offset}}{(optional) The offset index determines where this page will start from. An index of 0 is the first item. ,<p>,<i>,Default is 0,</i>,</p>}

\item{\code{limit}}{(optional) Limits the number of items that will be fetched for this page. ,<p>,<i>,Default is 100,</i>,</p>}

\item{\code{sort}}{(optional) Used to indicate upon which field(s) to sort. ,<p>,<i>,Default is NONE,</i>,</p>}

\item{\code{ascending}}{(optional) Used to indicate whether the sort direction is ascending or not.  ,<p>,<i>,Default is true,</i>,</p>}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (PaginatedResultsOfUserProfile) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UserProfileServicesApi-getRepoV1UserBundle"></a>}}
\if{latex}{\out{\hypertarget{method-UserProfileServicesApi-getRepoV1UserBundle}{}}}
\subsection{Method \code{getRepoV1UserBundle()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UserProfileServicesApi$getRepoV1UserBundle(mask, data_file = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{mask}}{integer flag defining which components to include in the bundle    ,<p>, This integer is used as a bit-string of flags to specify which parts to include    in the UserBundle. The mask is defined as follows:  ,<ul>,  ,<li>, UserProfile  = 0x1 ,</li>,  ,<li>, ORCID  = 0x2 ,</li>,  ,<li>, VerificationSubmission  = 0x4 ,</li>,  ,<li>, IsCertified = 0x8 ,</li>,  ,<li>, Is Verified  = 0x10 ,</li>,  ,<li>, Is ACT Member = 0x20 ,</li>,  ,<li>, Is AR Reviewer = 0x40 ,</li>,  ,</ul>,  ,</p>}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelUserBundle
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UserProfileServicesApi-getRepoV1UserBundleWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-UserProfileServicesApi-getRepoV1UserBundleWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1UserBundleWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UserProfileServicesApi$getRepoV1UserBundleWithHttpInfo(
  mask,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{mask}}{integer flag defining which components to include in the bundle    ,<p>, This integer is used as a bit-string of flags to specify which parts to include    in the UserBundle. The mask is defined as follows:  ,<ul>,  ,<li>, UserProfile  = 0x1 ,</li>,  ,<li>, ORCID  = 0x2 ,</li>,  ,<li>, VerificationSubmission  = 0x4 ,</li>,  ,<li>, IsCertified = 0x8 ,</li>,  ,<li>, Is Verified  = 0x10 ,</li>,  ,<li>, Is ACT Member = 0x20 ,</li>,  ,<li>, Is AR Reviewer = 0x40 ,</li>,  ,</ul>,  ,</p>}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelUserBundle) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UserProfileServicesApi-getRepoV1UserGroupHeaders"></a>}}
\if{latex}{\out{\hypertarget{method-UserProfileServicesApi-getRepoV1UserGroupHeaders}{}}}
\subsection{Method \code{getRepoV1UserGroupHeaders()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UserProfileServicesApi$getRepoV1UserGroupHeaders(
  prefix = NULL,
  type_filter = NULL,
  offset = NULL,
  limit = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{prefix}}{(optional) No description}

\item{\code{type_filter}}{(optional) Restrict the results to a type of principal.              Available options: ,<a href=\"${org.sagebionetworks.repo.model.principal.TypeFilter}\">,TypeFilter,</a>,.}

\item{\code{offset}}{(optional) The offset index determines where this page will start from.             An index of 0 is the first item.             ,<p>,             ,<i>,Default is 0,</i>,             ,</p>}

\item{\code{limit}}{(optional) Limits the number of items that will be fetched for this page.             ,<p>,             ,<i>,Default is 10,</i>,             ,</p>}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelUserGroupHeaderResponsePage
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UserProfileServicesApi-getRepoV1UserGroupHeadersWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-UserProfileServicesApi-getRepoV1UserGroupHeadersWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1UserGroupHeadersWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UserProfileServicesApi$getRepoV1UserGroupHeadersWithHttpInfo(
  prefix = NULL,
  type_filter = NULL,
  offset = NULL,
  limit = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{prefix}}{(optional) No description}

\item{\code{type_filter}}{(optional) Restrict the results to a type of principal.              Available options: ,<a href=\"${org.sagebionetworks.repo.model.principal.TypeFilter}\">,TypeFilter,</a>,.}

\item{\code{offset}}{(optional) The offset index determines where this page will start from.             An index of 0 is the first item.             ,<p>,             ,<i>,Default is 0,</i>,             ,</p>}

\item{\code{limit}}{(optional) Limits the number of items that will be fetched for this page.             ,<p>,             ,<i>,Default is 10,</i>,             ,</p>}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelUserGroupHeaderResponsePage) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UserProfileServicesApi-getRepoV1UserGroupHeadersBatch"></a>}}
\if{latex}{\out{\hypertarget{method-UserProfileServicesApi-getRepoV1UserGroupHeadersBatch}{}}}
\subsection{Method \code{getRepoV1UserGroupHeadersBatch()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UserProfileServicesApi$getRepoV1UserGroupHeadersBatch(
  ids,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{ids}}{IDs are specified as request parameters at the end of the URL, separated by commas.  ,<p>,For example: ,<pre class=\"prettyprint\">,ids=1001,819,</pre>,</p>}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelUserGroupHeaderResponsePage
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UserProfileServicesApi-getRepoV1UserGroupHeadersBatchWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-UserProfileServicesApi-getRepoV1UserGroupHeadersBatchWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1UserGroupHeadersBatchWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UserProfileServicesApi$getRepoV1UserGroupHeadersBatchWithHttpInfo(
  ids,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{ids}}{IDs are specified as request parameters at the end of the URL, separated by commas.  ,<p>,For example: ,<pre class=\"prettyprint\">,ids=1001,819,</pre>,</p>}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelUserGroupHeaderResponsePage) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UserProfileServicesApi-getRepoV1UserIdBundle"></a>}}
\if{latex}{\out{\hypertarget{method-UserProfileServicesApi-getRepoV1UserIdBundle}{}}}
\subsection{Method \code{getRepoV1UserIdBundle()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UserProfileServicesApi$getRepoV1UserIdBundle(mask, id, data_file = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{mask}}{integer flag defining which components to include in the bundle    ,<p>, This integer is used as a bit-string of flags to specify which parts to include    in the UserBundle. The mask is defined as follows:  ,<ul>,  ,<li>, UserProfile  = 0x1 ,</li>,  ,<li>, ORCID  = 0x2 ,</li>,  ,<li>, VerificationSubmission  = 0x4 ,</li>,  ,<li>, IsCertified = 0x8 ,</li>,  ,<li>, Is Verified  = 0x10 ,</li>,  ,<li>, Is ACT Member = 0x20 ,</li>,  ,<li>, Is AR Reviewer = 0x40 ,</li>,  ,</ul>,  ,</p>}

\item{\code{id}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelUserBundle
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UserProfileServicesApi-getRepoV1UserIdBundleWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-UserProfileServicesApi-getRepoV1UserIdBundleWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1UserIdBundleWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UserProfileServicesApi$getRepoV1UserIdBundleWithHttpInfo(
  mask,
  id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{mask}}{integer flag defining which components to include in the bundle    ,<p>, This integer is used as a bit-string of flags to specify which parts to include    in the UserBundle. The mask is defined as follows:  ,<ul>,  ,<li>, UserProfile  = 0x1 ,</li>,  ,<li>, ORCID  = 0x2 ,</li>,  ,<li>, VerificationSubmission  = 0x4 ,</li>,  ,<li>, IsCertified = 0x8 ,</li>,  ,<li>, Is Verified  = 0x10 ,</li>,  ,<li>, Is ACT Member = 0x20 ,</li>,  ,<li>, Is AR Reviewer = 0x40 ,</li>,  ,</ul>,  ,</p>}

\item{\code{id}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelUserBundle) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UserProfileServicesApi-getRepoV1UserProfile"></a>}}
\if{latex}{\out{\hypertarget{method-UserProfileServicesApi-getRepoV1UserProfile}{}}}
\subsection{Method \code{getRepoV1UserProfile()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UserProfileServicesApi$getRepoV1UserProfile(data_file = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelUserProfile
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UserProfileServicesApi-getRepoV1UserProfileWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-UserProfileServicesApi-getRepoV1UserProfileWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1UserProfileWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UserProfileServicesApi$getRepoV1UserProfileWithHttpInfo(data_file = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelUserProfile) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UserProfileServicesApi-getRepoV1UserProfileProfileId"></a>}}
\if{latex}{\out{\hypertarget{method-UserProfileServicesApi-getRepoV1UserProfileProfileId}{}}}
\subsection{Method \code{getRepoV1UserProfileProfileId()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UserProfileServicesApi$getRepoV1UserProfileProfileId(
  profile_id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{profile_id}}{The target profile owner ID (the \"id\" field returned in the \"/user\" request).}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelUserProfile
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UserProfileServicesApi-getRepoV1UserProfileProfileIdWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-UserProfileServicesApi-getRepoV1UserProfileProfileIdWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1UserProfileProfileIdWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UserProfileServicesApi$getRepoV1UserProfileProfileIdWithHttpInfo(
  profile_id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{profile_id}}{The target profile owner ID (the \"id\" field returned in the \"/user\" request).}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelUserProfile) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UserProfileServicesApi-getRepoV1UserProfileProfileIdImage"></a>}}
\if{latex}{\out{\hypertarget{method-UserProfileServicesApi-getRepoV1UserProfileProfileIdImage}{}}}
\subsection{Method \code{getRepoV1UserProfileProfileIdImage()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UserProfileServicesApi$getRepoV1UserProfileProfileIdImage(
  profile_id,
  redirect = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{profile_id}}{}

\item{\code{redirect}}{(optional) When set to false, the URL will be returned as text/plain             instead of redirecting.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
AnyType
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UserProfileServicesApi-getRepoV1UserProfileProfileIdImageWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-UserProfileServicesApi-getRepoV1UserProfileProfileIdImageWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1UserProfileProfileIdImageWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UserProfileServicesApi$getRepoV1UserProfileProfileIdImageWithHttpInfo(
  profile_id,
  redirect = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{profile_id}}{}

\item{\code{redirect}}{(optional) When set to false, the URL will be returned as text/plain             instead of redirecting.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (AnyType) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UserProfileServicesApi-getRepoV1UserProfileProfileIdImagePreview"></a>}}
\if{latex}{\out{\hypertarget{method-UserProfileServicesApi-getRepoV1UserProfileProfileIdImagePreview}{}}}
\subsection{Method \code{getRepoV1UserProfileProfileIdImagePreview()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UserProfileServicesApi$getRepoV1UserProfileProfileIdImagePreview(
  profile_id,
  redirect = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{profile_id}}{}

\item{\code{redirect}}{(optional) When set to false, the URL will be returned as text/plain             instead of redirecting.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
AnyType
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UserProfileServicesApi-getRepoV1UserProfileProfileIdImagePreviewWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-UserProfileServicesApi-getRepoV1UserProfileProfileIdImagePreviewWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1UserProfileProfileIdImagePreviewWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UserProfileServicesApi$getRepoV1UserProfileProfileIdImagePreviewWithHttpInfo(
  profile_id,
  redirect = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{profile_id}}{}

\item{\code{redirect}}{(optional) When set to false, the URL will be returned as text/plain             instead of redirecting.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (AnyType) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UserProfileServicesApi-postRepoV1FavoriteId"></a>}}
\if{latex}{\out{\hypertarget{method-UserProfileServicesApi-postRepoV1FavoriteId}{}}}
\subsection{Method \code{postRepoV1FavoriteId()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UserProfileServicesApi$postRepoV1FavoriteId(id, data_file = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{Entity ID of the favorite ,<a href=\"${org.sagebionetworks.repo.model.Entity}\">,Entity,</a>}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelEntityHeader
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UserProfileServicesApi-postRepoV1FavoriteIdWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-UserProfileServicesApi-postRepoV1FavoriteIdWithHttpInfo}{}}}
\subsection{Method \code{postRepoV1FavoriteIdWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UserProfileServicesApi$postRepoV1FavoriteIdWithHttpInfo(
  id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{Entity ID of the favorite ,<a href=\"${org.sagebionetworks.repo.model.Entity}\">,Entity,</a>}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelEntityHeader) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UserProfileServicesApi-postRepoV1UserGroupHeadersAliases"></a>}}
\if{latex}{\out{\hypertarget{method-UserProfileServicesApi-postRepoV1UserGroupHeadersAliases}{}}}
\subsection{Method \code{postRepoV1UserGroupHeadersAliases()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UserProfileServicesApi$postRepoV1UserGroupHeadersAliases(
  org_sagebionetworks_repo_model_principal_alias_list,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org_sagebionetworks_repo_model_principal_alias_list}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelPrincipalUserGroupHeaderResponse
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UserProfileServicesApi-postRepoV1UserGroupHeadersAliasesWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-UserProfileServicesApi-postRepoV1UserGroupHeadersAliasesWithHttpInfo}{}}}
\subsection{Method \code{postRepoV1UserGroupHeadersAliasesWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UserProfileServicesApi$postRepoV1UserGroupHeadersAliasesWithHttpInfo(
  org_sagebionetworks_repo_model_principal_alias_list,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org_sagebionetworks_repo_model_principal_alias_list}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelPrincipalUserGroupHeaderResponse) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UserProfileServicesApi-postRepoV1UserProfile"></a>}}
\if{latex}{\out{\hypertarget{method-UserProfileServicesApi-postRepoV1UserProfile}{}}}
\subsection{Method \code{postRepoV1UserProfile()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UserProfileServicesApi$postRepoV1UserProfile(
  org_sagebionetworks_repo_model_id_list,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org_sagebionetworks_repo_model_id_list}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
ListWrapperOfUserProfile
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UserProfileServicesApi-postRepoV1UserProfileWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-UserProfileServicesApi-postRepoV1UserProfileWithHttpInfo}{}}}
\subsection{Method \code{postRepoV1UserProfileWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UserProfileServicesApi$postRepoV1UserProfileWithHttpInfo(
  org_sagebionetworks_repo_model_id_list,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org_sagebionetworks_repo_model_id_list}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (ListWrapperOfUserProfile) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UserProfileServicesApi-putRepoV1NotificationSettings"></a>}}
\if{latex}{\out{\hypertarget{method-UserProfileServicesApi-putRepoV1NotificationSettings}{}}}
\subsection{Method \code{putRepoV1NotificationSettings()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UserProfileServicesApi$putRepoV1NotificationSettings(
  org_sagebionetworks_repo_model_message_notification_settings_signed_token,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org_sagebionetworks_repo_model_message_notification_settings_signed_token}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelResponseMessage
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UserProfileServicesApi-putRepoV1NotificationSettingsWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-UserProfileServicesApi-putRepoV1NotificationSettingsWithHttpInfo}{}}}
\subsection{Method \code{putRepoV1NotificationSettingsWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UserProfileServicesApi$putRepoV1NotificationSettingsWithHttpInfo(
  org_sagebionetworks_repo_model_message_notification_settings_signed_token,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org_sagebionetworks_repo_model_message_notification_settings_signed_token}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelResponseMessage) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UserProfileServicesApi-putRepoV1UserProfile"></a>}}
\if{latex}{\out{\hypertarget{method-UserProfileServicesApi-putRepoV1UserProfile}{}}}
\subsection{Method \code{putRepoV1UserProfile()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UserProfileServicesApi$putRepoV1UserProfile(
  org_sagebionetworks_repo_model_user_profile,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org_sagebionetworks_repo_model_user_profile}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelUserProfile
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UserProfileServicesApi-putRepoV1UserProfileWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-UserProfileServicesApi-putRepoV1UserProfileWithHttpInfo}{}}}
\subsection{Method \code{putRepoV1UserProfileWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UserProfileServicesApi$putRepoV1UserProfileWithHttpInfo(
  org_sagebionetworks_repo_model_user_profile,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org_sagebionetworks_repo_model_user_profile}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelUserProfile) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UserProfileServicesApi-clone"></a>}}
\if{latex}{\out{\hypertarget{method-UserProfileServicesApi-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UserProfileServicesApi$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
