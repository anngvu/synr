% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/wiki_page_services_api.R
\docType{class}
\name{WikiPageServicesApi}
\alias{WikiPageServicesApi}
\title{WikiPageServices operations}
\format{
An \code{R6Class} generator object
}
\description{
WikiPageServicesApi
}
\details{
Synapse REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: v1
Generated by: https://openapi-generator.tech
}
\section{Methods}{

\describe{
\strong{ deleteRepoV1EntityOwnerIdWikiWikiId } \emph{  }

\itemize{
\item \emph{ @param } owner_id character
\item \emph{ @param } wiki_id character


\item status code : 200 | Void


\item response headers :

\tabular{ll}{
}
}

\strong{ deleteRepoV1EvaluationOwnerIdWikiWikiId } \emph{  }

\itemize{
\item \emph{ @param } owner_id character
\item \emph{ @param } wiki_id character


\item status code : 200 | Void


\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1AccessRequirementOwnerIdWikiWikiId } \emph{  }

\itemize{
\item \emph{ @param } owner_id character
\item \emph{ @param } wiki_id character
\item \emph{ @param } wiki_version numeric
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelWikiWikiPage} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelWikiWikiPage
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1AccessRequirementOwnerIdWikikey } \emph{  }

\itemize{
\item \emph{ @param } owner_id character
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelDaoWikiPageKey} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelDaoWikiPageKey
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1EntityOwnerIdWiki } \emph{  }

\itemize{
\item \emph{ @param } owner_id character
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelWikiWikiPage} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelWikiWikiPage
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1EntityOwnerIdWikiWikiId } \emph{  }

\itemize{
\item \emph{ @param } owner_id character
\item \emph{ @param } wiki_id character
\item \emph{ @param } wiki_version numeric
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelWikiWikiPage} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelWikiWikiPage
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1EntityOwnerIdWikiWikiIdAttachment } \emph{  }

\itemize{
\item \emph{ @param } owner_id character
\item \emph{ @param } wiki_id character
\item \emph{ @param } file_name character
\item \emph{ @param } redirect character
\item \emph{ @returnType } \link{AnyType} \cr


\item status code : 200 | Status 200 will be returned if the 'redirect' boolean param is false

\item return type : AnyType
\item response headers :

\tabular{ll}{
}
\item status code : 307 | Status 307 will be returned if the 'redirect' boolean param is true or null


\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1EntityOwnerIdWikiWikiIdAttachmenthandles } \emph{  }

\itemize{
\item \emph{ @param } owner_id character
\item \emph{ @param } wiki_id character
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelFileFileHandleResults} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelFileFileHandleResults
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1EntityOwnerIdWikiWikiIdAttachmentpreview } \emph{  }

\itemize{
\item \emph{ @param } owner_id character
\item \emph{ @param } wiki_id character
\item \emph{ @param } file_name character
\item \emph{ @param } redirect character
\item \emph{ @returnType } \link{AnyType} \cr


\item status code : 200 | Status 200 will be returned if the 'redirect' boolean param is false

\item return type : AnyType
\item response headers :

\tabular{ll}{
}
\item status code : 307 | Status 307 will be returned if the 'redirect' boolean param is true or null


\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1EntityOwnerIdWikiheadertree } \emph{  }

\itemize{
\item \emph{ @param } owner_id character
\item \emph{ @param } offset numeric
\item \emph{ @param } limit numeric
\item \emph{ @returnType } \link{PaginatedResultsOfWikiHeader} \cr


\item status code : 200 | Auto-generated description

\item return type : PaginatedResultsOfWikiHeader
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1EntityOwnerIdWikikey } \emph{  }

\itemize{
\item \emph{ @param } owner_id character
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelDaoWikiPageKey} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelDaoWikiPageKey
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1EvaluationOwnerIdWiki } \emph{  }

\itemize{
\item \emph{ @param } owner_id character
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelWikiWikiPage} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelWikiWikiPage
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1EvaluationOwnerIdWikiWikiId } \emph{  }

\itemize{
\item \emph{ @param } owner_id character
\item \emph{ @param } wiki_id character
\item \emph{ @param } wiki_version numeric
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelWikiWikiPage} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelWikiWikiPage
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1EvaluationOwnerIdWikiWikiIdAttachment } \emph{  }

\itemize{
\item \emph{ @param } owner_id character
\item \emph{ @param } wiki_id character
\item \emph{ @param } file_name character
\item \emph{ @param } redirect character
\item \emph{ @returnType } \link{AnyType} \cr


\item status code : 200 | Status 200 will be returned if the 'redirect' boolean param is false

\item return type : AnyType
\item response headers :

\tabular{ll}{
}
\item status code : 307 | Status 307 will be returned if the 'redirect' boolean param is true or null


\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1EvaluationOwnerIdWikiWikiIdAttachmenthandles } \emph{  }

\itemize{
\item \emph{ @param } owner_id character
\item \emph{ @param } wiki_id character
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelFileFileHandleResults} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelFileFileHandleResults
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1EvaluationOwnerIdWikiWikiIdAttachmentpreview } \emph{  }

\itemize{
\item \emph{ @param } owner_id character
\item \emph{ @param } wiki_id character
\item \emph{ @param } file_name character
\item \emph{ @param } redirect character
\item \emph{ @returnType } \link{AnyType} \cr


\item status code : 200 | Status 200 will be returned if the 'redirect' boolean param is false

\item return type : AnyType
\item response headers :

\tabular{ll}{
}
\item status code : 307 | Status 307 will be returned if the 'redirect' boolean param is true or null


\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1EvaluationOwnerIdWikiheadertree } \emph{  }

\itemize{
\item \emph{ @param } owner_id character
\item \emph{ @param } offset numeric
\item \emph{ @param } limit numeric
\item \emph{ @returnType } \link{PaginatedResultsOfWikiHeader} \cr


\item status code : 200 | Auto-generated description

\item return type : PaginatedResultsOfWikiHeader
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1EvaluationOwnerIdWikikey } \emph{  }

\itemize{
\item \emph{ @param } owner_id character
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelDaoWikiPageKey} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelDaoWikiPageKey
\item response headers :

\tabular{ll}{
}
}

\strong{ postRepoV1AccessRequirementOwnerIdWiki } \emph{  }

\itemize{
\item \emph{ @param } owner_id character
\item \emph{ @param } org_sagebionetworks_repo_model_wiki_wiki_page \link{OrgSagebionetworksRepoModelWikiWikiPage}
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelWikiWikiPage} \cr


\item status code : 201 | -

\item return type : OrgSagebionetworksRepoModelWikiWikiPage
\item response headers :

\tabular{ll}{
}
}

\strong{ postRepoV1EntityOwnerIdWiki } \emph{  }

\itemize{
\item \emph{ @param } owner_id character
\item \emph{ @param } org_sagebionetworks_repo_model_wiki_wiki_page \link{OrgSagebionetworksRepoModelWikiWikiPage}
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelWikiWikiPage} \cr


\item status code : 201 | -

\item return type : OrgSagebionetworksRepoModelWikiWikiPage
\item response headers :

\tabular{ll}{
}
}

\strong{ postRepoV1EvaluationOwnerIdWiki } \emph{  }

\itemize{
\item \emph{ @param } owner_id character
\item \emph{ @param } org_sagebionetworks_repo_model_wiki_wiki_page \link{OrgSagebionetworksRepoModelWikiWikiPage}
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelWikiWikiPage} \cr


\item status code : 201 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelWikiWikiPage
\item response headers :

\tabular{ll}{
}
}

\strong{ putRepoV1AccessRequirementOwnerIdWikiWikiId } \emph{  }

\itemize{
\item \emph{ @param } owner_id character
\item \emph{ @param } wiki_id character
\item \emph{ @param } org_sagebionetworks_repo_model_wiki_wiki_page \link{OrgSagebionetworksRepoModelWikiWikiPage}
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelWikiWikiPage} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelWikiWikiPage
\item response headers :

\tabular{ll}{
}
}

\strong{ putRepoV1EntityOwnerIdWikiWikiId } \emph{  }

\itemize{
\item \emph{ @param } owner_id character
\item \emph{ @param } wiki_id character
\item \emph{ @param } org_sagebionetworks_repo_model_wiki_wiki_page \link{OrgSagebionetworksRepoModelWikiWikiPage}
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelWikiWikiPage} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelWikiWikiPage
\item response headers :

\tabular{ll}{
}
}

\strong{ putRepoV1EvaluationOwnerIdWikiWikiId } \emph{  }

\itemize{
\item \emph{ @param } owner_id character
\item \emph{ @param } wiki_id character
\item \emph{ @param } org_sagebionetworks_repo_model_wiki_wiki_page \link{OrgSagebionetworksRepoModelWikiWikiPage}
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelWikiWikiPage} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelWikiWikiPage
\item response headers :

\tabular{ll}{
}
}

}
}

\examples{
\dontrun{
####################  deleteRepoV1EntityOwnerIdWikiWikiId  ####################

library(synr)
var_owner_id <- "owner_id_example" # character | The ID of the owning Entity.
var_wiki_id <- "wiki_id_example" # character | The ID of the WikiPage to delete.

api_instance <- WikiPageServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

api_instance$deleteRepoV1EntityOwnerIdWikiWikiId(var_owner_id, var_wiki_id)


####################  deleteRepoV1EvaluationOwnerIdWikiWikiId  ####################

library(synr)
var_owner_id <- "owner_id_example" # character | The ID of the owning Evaluations.
var_wiki_id <- "wiki_id_example" # character | The ID of the WikiPage to delete.

api_instance <- WikiPageServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

api_instance$deleteRepoV1EvaluationOwnerIdWikiWikiId(var_owner_id, var_wiki_id)


####################  getRepoV1AccessRequirementOwnerIdWikiWikiId  ####################

library(synr)
var_owner_id <- "owner_id_example" # character | The ID of the owning Entity.
var_wiki_id <- "wiki_id_example" # character | The ID of the WikiPage to get.
var_wiki_version <- 3.4 # numeric | When included returns a specific version of a wiki. (Optional)

api_instance <- WikiPageServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1AccessRequirementOwnerIdWikiWikiId(var_owner_id, var_wiki_id, wiki_version = var_wiki_versiondata_file = "result.txt")
result <- api_instance$getRepoV1AccessRequirementOwnerIdWikiWikiId(var_owner_id, var_wiki_id, wiki_version = var_wiki_version)
dput(result)


####################  getRepoV1AccessRequirementOwnerIdWikikey  ####################

library(synr)
var_owner_id <- "owner_id_example" # character | The ID of the owning Access Requirement.

api_instance <- WikiPageServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1AccessRequirementOwnerIdWikikey(var_owner_iddata_file = "result.txt")
result <- api_instance$getRepoV1AccessRequirementOwnerIdWikikey(var_owner_id)
dput(result)


####################  getRepoV1EntityOwnerIdWiki  ####################

library(synr)
var_owner_id <- "owner_id_example" # character | The ID of the owning Entity.

api_instance <- WikiPageServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1EntityOwnerIdWiki(var_owner_iddata_file = "result.txt")
result <- api_instance$getRepoV1EntityOwnerIdWiki(var_owner_id)
dput(result)


####################  getRepoV1EntityOwnerIdWikiWikiId  ####################

library(synr)
var_owner_id <- "owner_id_example" # character | The ID of the owning Entity.
var_wiki_id <- "wiki_id_example" # character | The ID of the WikiPage to get.
var_wiki_version <- 3.4 # numeric | When included returns a specific version of a wiki. (Optional)

api_instance <- WikiPageServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1EntityOwnerIdWikiWikiId(var_owner_id, var_wiki_id, wiki_version = var_wiki_versiondata_file = "result.txt")
result <- api_instance$getRepoV1EntityOwnerIdWikiWikiId(var_owner_id, var_wiki_id, wiki_version = var_wiki_version)
dput(result)


####################  getRepoV1EntityOwnerIdWikiWikiIdAttachment  ####################

library(synr)
var_owner_id <- "owner_id_example" # character | The ID of the owning Entity
var_wiki_id <- "wiki_id_example" # character | The ID of the WikiPage
var_file_name <- "file_name_example" # character | The name of the file to get. The file names can be found in             the FileHandles from the ,<a href=\"${GET.entity.ownerId.wiki.wikiId.attachmenthandles}\">,GET             /entity/{ownerId}/wiki/{wikiId}/attachmenthandles,</a>, method.
var_redirect <- "redirect_example" # character | When set to false, the URL will be returned as text/plain             instead of redirecting. (Optional)

api_instance <- WikiPageServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1EntityOwnerIdWikiWikiIdAttachment(var_owner_id, var_wiki_id, var_file_name, redirect = var_redirectdata_file = "result.txt")
result <- api_instance$getRepoV1EntityOwnerIdWikiWikiIdAttachment(var_owner_id, var_wiki_id, var_file_name, redirect = var_redirect)
dput(result)


####################  getRepoV1EntityOwnerIdWikiWikiIdAttachmenthandles  ####################

library(synr)
var_owner_id <- "owner_id_example" # character | The ID of the owning Entity.
var_wiki_id <- "wiki_id_example" # character | The ID of the WikiPage.

api_instance <- WikiPageServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1EntityOwnerIdWikiWikiIdAttachmenthandles(var_owner_id, var_wiki_iddata_file = "result.txt")
result <- api_instance$getRepoV1EntityOwnerIdWikiWikiIdAttachmenthandles(var_owner_id, var_wiki_id)
dput(result)


####################  getRepoV1EntityOwnerIdWikiWikiIdAttachmentpreview  ####################

library(synr)
var_owner_id <- "owner_id_example" # character | The ID of the owning Entity
var_wiki_id <- "wiki_id_example" # character | The ID of the WikiPage
var_file_name <- "file_name_example" # character | The name of the file to get. The file names can be found in             the FileHandles from the ,<a href=\"${GET.entity.ownerId.wiki.wikiId.attachmenthandles}\">,GET             /entity/{ownerId}/wiki/{wikiId}/attachmenthandles,</a>, method.
var_redirect <- "redirect_example" # character | When set to false, the URL will be returned as text/plain             instead of redirecting. (Optional)

api_instance <- WikiPageServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1EntityOwnerIdWikiWikiIdAttachmentpreview(var_owner_id, var_wiki_id, var_file_name, redirect = var_redirectdata_file = "result.txt")
result <- api_instance$getRepoV1EntityOwnerIdWikiWikiIdAttachmentpreview(var_owner_id, var_wiki_id, var_file_name, redirect = var_redirect)
dput(result)


####################  getRepoV1EntityOwnerIdWikiheadertree  ####################

library(synr)
var_owner_id <- "owner_id_example" # character | The ID of the owning Entity.
var_offset <- 3.4 # numeric | The index of the pagination offset. For a page size of 10, the             first page would be at offset = 0, and the second page would             be at offset = 10. (Optional)
var_limit <- 3.4 # numeric | Limits the size of the page returned. For example, a page size             of 10 require limit = 10. (Optional)

api_instance <- WikiPageServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1EntityOwnerIdWikiheadertree(var_owner_id, offset = var_offset, limit = var_limitdata_file = "result.txt")
result <- api_instance$getRepoV1EntityOwnerIdWikiheadertree(var_owner_id, offset = var_offset, limit = var_limit)
dput(result)


####################  getRepoV1EntityOwnerIdWikikey  ####################

library(synr)
var_owner_id <- "owner_id_example" # character | The ID of the owning Entity.

api_instance <- WikiPageServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1EntityOwnerIdWikikey(var_owner_iddata_file = "result.txt")
result <- api_instance$getRepoV1EntityOwnerIdWikikey(var_owner_id)
dput(result)


####################  getRepoV1EvaluationOwnerIdWiki  ####################

library(synr)
var_owner_id <- "owner_id_example" # character | The ID of the owning Evaluation.

api_instance <- WikiPageServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1EvaluationOwnerIdWiki(var_owner_iddata_file = "result.txt")
result <- api_instance$getRepoV1EvaluationOwnerIdWiki(var_owner_id)
dput(result)


####################  getRepoV1EvaluationOwnerIdWikiWikiId  ####################

library(synr)
var_owner_id <- "owner_id_example" # character | The ID of the owning Evaluation.
var_wiki_id <- "wiki_id_example" # character | The ID of the WikiPage to get.
var_wiki_version <- 3.4 # numeric |  (Optional)

api_instance <- WikiPageServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1EvaluationOwnerIdWikiWikiId(var_owner_id, var_wiki_id, wiki_version = var_wiki_versiondata_file = "result.txt")
result <- api_instance$getRepoV1EvaluationOwnerIdWikiWikiId(var_owner_id, var_wiki_id, wiki_version = var_wiki_version)
dput(result)


####################  getRepoV1EvaluationOwnerIdWikiWikiIdAttachment  ####################

library(synr)
var_owner_id <- "owner_id_example" # character | The ID of the owning Evaluation
var_wiki_id <- "wiki_id_example" # character | The ID of the WikiPage
var_file_name <- "file_name_example" # character | The name of the file to get. The file names can be found in             the FileHandles from the ,<a href=\"${GET.evaluation.ownerId.wiki.wikiId.attachmenthandles}\">,GET /evaluation/{ownerId}/wiki/{wikiId}/attachmenthandles,</a>,             method.
var_redirect <- "redirect_example" # character | When set to false, the URL will be returned as text/plain             instead of redirecting. (Optional)

api_instance <- WikiPageServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1EvaluationOwnerIdWikiWikiIdAttachment(var_owner_id, var_wiki_id, var_file_name, redirect = var_redirectdata_file = "result.txt")
result <- api_instance$getRepoV1EvaluationOwnerIdWikiWikiIdAttachment(var_owner_id, var_wiki_id, var_file_name, redirect = var_redirect)
dput(result)


####################  getRepoV1EvaluationOwnerIdWikiWikiIdAttachmenthandles  ####################

library(synr)
var_owner_id <- "owner_id_example" # character | The ID of the owning Evaluation.
var_wiki_id <- "wiki_id_example" # character | The ID of the WikiPage.

api_instance <- WikiPageServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1EvaluationOwnerIdWikiWikiIdAttachmenthandles(var_owner_id, var_wiki_iddata_file = "result.txt")
result <- api_instance$getRepoV1EvaluationOwnerIdWikiWikiIdAttachmenthandles(var_owner_id, var_wiki_id)
dput(result)


####################  getRepoV1EvaluationOwnerIdWikiWikiIdAttachmentpreview  ####################

library(synr)
var_owner_id <- "owner_id_example" # character | The ID of the owning Evaluation
var_wiki_id <- "wiki_id_example" # character | The ID of the WikiPage
var_file_name <- "file_name_example" # character | The name of the file to get. The file names can be found in             the FileHandles from the ,<a href=\"${GET.evaluation.ownerId.wiki.wikiId.attachmenthandles}\">,GET /evaluation/{ownerId}/wiki/{wikiId}/attachmenthandles,</a>,             method.
var_redirect <- "redirect_example" # character | When set to false, the URL will be returned as text/plain             instead of redirecting. (Optional)

api_instance <- WikiPageServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1EvaluationOwnerIdWikiWikiIdAttachmentpreview(var_owner_id, var_wiki_id, var_file_name, redirect = var_redirectdata_file = "result.txt")
result <- api_instance$getRepoV1EvaluationOwnerIdWikiWikiIdAttachmentpreview(var_owner_id, var_wiki_id, var_file_name, redirect = var_redirect)
dput(result)


####################  getRepoV1EvaluationOwnerIdWikiheadertree  ####################

library(synr)
var_owner_id <- "owner_id_example" # character | The ID of the owning Evaluation.
var_offset <- 3.4 # numeric | The index of the pagination offset. For a page size of 10, the             first page would be at offset = 0, and the second page would             be at offset = 10. (Optional)
var_limit <- 3.4 # numeric | Limits the size of the page returned. For example, a page size             of 10 require limit = 10. (Optional)

api_instance <- WikiPageServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1EvaluationOwnerIdWikiheadertree(var_owner_id, offset = var_offset, limit = var_limitdata_file = "result.txt")
result <- api_instance$getRepoV1EvaluationOwnerIdWikiheadertree(var_owner_id, offset = var_offset, limit = var_limit)
dput(result)


####################  getRepoV1EvaluationOwnerIdWikikey  ####################

library(synr)
var_owner_id <- "owner_id_example" # character | The ID of the owning Evaluation.

api_instance <- WikiPageServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1EvaluationOwnerIdWikikey(var_owner_iddata_file = "result.txt")
result <- api_instance$getRepoV1EvaluationOwnerIdWikikey(var_owner_id)
dput(result)


####################  postRepoV1AccessRequirementOwnerIdWiki  ####################

library(synr)
var_owner_id <- "owner_id_example" # character | The ID of the owner Entity.
var_org_sagebionetworks_repo_model_wiki_wiki_page <- org.sagebionetworks.repo.model.wiki.WikiPage$new("id_example", "etag_example", "createdOn_example", "createdBy_example", "modifiedOn_example", "modifiedBy_example", "parentWikiId_example", "title_example", "markdown_example", c("attachmentFileHandleIds_example")) # OrgSagebionetworksRepoModelWikiWikiPage | 

api_instance <- WikiPageServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$postRepoV1AccessRequirementOwnerIdWiki(var_owner_id, var_org_sagebionetworks_repo_model_wiki_wiki_pagedata_file = "result.txt")
result <- api_instance$postRepoV1AccessRequirementOwnerIdWiki(var_owner_id, var_org_sagebionetworks_repo_model_wiki_wiki_page)
dput(result)


####################  postRepoV1EntityOwnerIdWiki  ####################

library(synr)
var_owner_id <- "owner_id_example" # character | The ID of the owner Entity.
var_org_sagebionetworks_repo_model_wiki_wiki_page <- org.sagebionetworks.repo.model.wiki.WikiPage$new("id_example", "etag_example", "createdOn_example", "createdBy_example", "modifiedOn_example", "modifiedBy_example", "parentWikiId_example", "title_example", "markdown_example", c("attachmentFileHandleIds_example")) # OrgSagebionetworksRepoModelWikiWikiPage | 

api_instance <- WikiPageServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$postRepoV1EntityOwnerIdWiki(var_owner_id, var_org_sagebionetworks_repo_model_wiki_wiki_pagedata_file = "result.txt")
result <- api_instance$postRepoV1EntityOwnerIdWiki(var_owner_id, var_org_sagebionetworks_repo_model_wiki_wiki_page)
dput(result)


####################  postRepoV1EvaluationOwnerIdWiki  ####################

library(synr)
var_owner_id <- "owner_id_example" # character | The ID of the owner Evaluation.
var_org_sagebionetworks_repo_model_wiki_wiki_page <- org.sagebionetworks.repo.model.wiki.WikiPage$new("id_example", "etag_example", "createdOn_example", "createdBy_example", "modifiedOn_example", "modifiedBy_example", "parentWikiId_example", "title_example", "markdown_example", c("attachmentFileHandleIds_example")) # OrgSagebionetworksRepoModelWikiWikiPage | 

api_instance <- WikiPageServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$postRepoV1EvaluationOwnerIdWiki(var_owner_id, var_org_sagebionetworks_repo_model_wiki_wiki_pagedata_file = "result.txt")
result <- api_instance$postRepoV1EvaluationOwnerIdWiki(var_owner_id, var_org_sagebionetworks_repo_model_wiki_wiki_page)
dput(result)


####################  putRepoV1AccessRequirementOwnerIdWikiWikiId  ####################

library(synr)
var_owner_id <- "owner_id_example" # character | The ID of the owning Entity.
var_wiki_id <- "wiki_id_example" # character | The ID of the WikiPage to update.
var_org_sagebionetworks_repo_model_wiki_wiki_page <- org.sagebionetworks.repo.model.wiki.WikiPage$new("id_example", "etag_example", "createdOn_example", "createdBy_example", "modifiedOn_example", "modifiedBy_example", "parentWikiId_example", "title_example", "markdown_example", c("attachmentFileHandleIds_example")) # OrgSagebionetworksRepoModelWikiWikiPage | 

api_instance <- WikiPageServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$putRepoV1AccessRequirementOwnerIdWikiWikiId(var_owner_id, var_wiki_id, var_org_sagebionetworks_repo_model_wiki_wiki_pagedata_file = "result.txt")
result <- api_instance$putRepoV1AccessRequirementOwnerIdWikiWikiId(var_owner_id, var_wiki_id, var_org_sagebionetworks_repo_model_wiki_wiki_page)
dput(result)


####################  putRepoV1EntityOwnerIdWikiWikiId  ####################

library(synr)
var_owner_id <- "owner_id_example" # character | The ID of the owning Entity.
var_wiki_id <- "wiki_id_example" # character | The ID of the WikiPage to update.
var_org_sagebionetworks_repo_model_wiki_wiki_page <- org.sagebionetworks.repo.model.wiki.WikiPage$new("id_example", "etag_example", "createdOn_example", "createdBy_example", "modifiedOn_example", "modifiedBy_example", "parentWikiId_example", "title_example", "markdown_example", c("attachmentFileHandleIds_example")) # OrgSagebionetworksRepoModelWikiWikiPage | 

api_instance <- WikiPageServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$putRepoV1EntityOwnerIdWikiWikiId(var_owner_id, var_wiki_id, var_org_sagebionetworks_repo_model_wiki_wiki_pagedata_file = "result.txt")
result <- api_instance$putRepoV1EntityOwnerIdWikiWikiId(var_owner_id, var_wiki_id, var_org_sagebionetworks_repo_model_wiki_wiki_page)
dput(result)


####################  putRepoV1EvaluationOwnerIdWikiWikiId  ####################

library(synr)
var_owner_id <- "owner_id_example" # character | The ID of the owning Evaluation.
var_wiki_id <- "wiki_id_example" # character | The ID of the WikiPage to update.
var_org_sagebionetworks_repo_model_wiki_wiki_page <- org.sagebionetworks.repo.model.wiki.WikiPage$new("id_example", "etag_example", "createdOn_example", "createdBy_example", "modifiedOn_example", "modifiedBy_example", "parentWikiId_example", "title_example", "markdown_example", c("attachmentFileHandleIds_example")) # OrgSagebionetworksRepoModelWikiWikiPage | 

api_instance <- WikiPageServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$putRepoV1EvaluationOwnerIdWikiWikiId(var_owner_id, var_wiki_id, var_org_sagebionetworks_repo_model_wiki_wiki_pagedata_file = "result.txt")
result <- api_instance$putRepoV1EvaluationOwnerIdWikiWikiId(var_owner_id, var_wiki_id, var_org_sagebionetworks_repo_model_wiki_wiki_page)
dput(result)


}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{api_client}}{Handles the client-server communication.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-WikiPageServicesApi-new}{\code{WikiPageServicesApi$new()}}
\item \href{#method-WikiPageServicesApi-deleteRepoV1EntityOwnerIdWikiWikiId}{\code{WikiPageServicesApi$deleteRepoV1EntityOwnerIdWikiWikiId()}}
\item \href{#method-WikiPageServicesApi-deleteRepoV1EntityOwnerIdWikiWikiIdWithHttpInfo}{\code{WikiPageServicesApi$deleteRepoV1EntityOwnerIdWikiWikiIdWithHttpInfo()}}
\item \href{#method-WikiPageServicesApi-deleteRepoV1EvaluationOwnerIdWikiWikiId}{\code{WikiPageServicesApi$deleteRepoV1EvaluationOwnerIdWikiWikiId()}}
\item \href{#method-WikiPageServicesApi-deleteRepoV1EvaluationOwnerIdWikiWikiIdWithHttpInfo}{\code{WikiPageServicesApi$deleteRepoV1EvaluationOwnerIdWikiWikiIdWithHttpInfo()}}
\item \href{#method-WikiPageServicesApi-getRepoV1AccessRequirementOwnerIdWikiWikiId}{\code{WikiPageServicesApi$getRepoV1AccessRequirementOwnerIdWikiWikiId()}}
\item \href{#method-WikiPageServicesApi-getRepoV1AccessRequirementOwnerIdWikiWikiIdWithHttpInfo}{\code{WikiPageServicesApi$getRepoV1AccessRequirementOwnerIdWikiWikiIdWithHttpInfo()}}
\item \href{#method-WikiPageServicesApi-getRepoV1AccessRequirementOwnerIdWikikey}{\code{WikiPageServicesApi$getRepoV1AccessRequirementOwnerIdWikikey()}}
\item \href{#method-WikiPageServicesApi-getRepoV1AccessRequirementOwnerIdWikikeyWithHttpInfo}{\code{WikiPageServicesApi$getRepoV1AccessRequirementOwnerIdWikikeyWithHttpInfo()}}
\item \href{#method-WikiPageServicesApi-getRepoV1EntityOwnerIdWiki}{\code{WikiPageServicesApi$getRepoV1EntityOwnerIdWiki()}}
\item \href{#method-WikiPageServicesApi-getRepoV1EntityOwnerIdWikiWithHttpInfo}{\code{WikiPageServicesApi$getRepoV1EntityOwnerIdWikiWithHttpInfo()}}
\item \href{#method-WikiPageServicesApi-getRepoV1EntityOwnerIdWikiWikiId}{\code{WikiPageServicesApi$getRepoV1EntityOwnerIdWikiWikiId()}}
\item \href{#method-WikiPageServicesApi-getRepoV1EntityOwnerIdWikiWikiIdWithHttpInfo}{\code{WikiPageServicesApi$getRepoV1EntityOwnerIdWikiWikiIdWithHttpInfo()}}
\item \href{#method-WikiPageServicesApi-getRepoV1EntityOwnerIdWikiWikiIdAttachment}{\code{WikiPageServicesApi$getRepoV1EntityOwnerIdWikiWikiIdAttachment()}}
\item \href{#method-WikiPageServicesApi-getRepoV1EntityOwnerIdWikiWikiIdAttachmentWithHttpInfo}{\code{WikiPageServicesApi$getRepoV1EntityOwnerIdWikiWikiIdAttachmentWithHttpInfo()}}
\item \href{#method-WikiPageServicesApi-getRepoV1EntityOwnerIdWikiWikiIdAttachmenthandles}{\code{WikiPageServicesApi$getRepoV1EntityOwnerIdWikiWikiIdAttachmenthandles()}}
\item \href{#method-WikiPageServicesApi-getRepoV1EntityOwnerIdWikiWikiIdAttachmenthandlesWithHttpInfo}{\code{WikiPageServicesApi$getRepoV1EntityOwnerIdWikiWikiIdAttachmenthandlesWithHttpInfo()}}
\item \href{#method-WikiPageServicesApi-getRepoV1EntityOwnerIdWikiWikiIdAttachmentpreview}{\code{WikiPageServicesApi$getRepoV1EntityOwnerIdWikiWikiIdAttachmentpreview()}}
\item \href{#method-WikiPageServicesApi-getRepoV1EntityOwnerIdWikiWikiIdAttachmentpreviewWithHttpInfo}{\code{WikiPageServicesApi$getRepoV1EntityOwnerIdWikiWikiIdAttachmentpreviewWithHttpInfo()}}
\item \href{#method-WikiPageServicesApi-getRepoV1EntityOwnerIdWikiheadertree}{\code{WikiPageServicesApi$getRepoV1EntityOwnerIdWikiheadertree()}}
\item \href{#method-WikiPageServicesApi-getRepoV1EntityOwnerIdWikiheadertreeWithHttpInfo}{\code{WikiPageServicesApi$getRepoV1EntityOwnerIdWikiheadertreeWithHttpInfo()}}
\item \href{#method-WikiPageServicesApi-getRepoV1EntityOwnerIdWikikey}{\code{WikiPageServicesApi$getRepoV1EntityOwnerIdWikikey()}}
\item \href{#method-WikiPageServicesApi-getRepoV1EntityOwnerIdWikikeyWithHttpInfo}{\code{WikiPageServicesApi$getRepoV1EntityOwnerIdWikikeyWithHttpInfo()}}
\item \href{#method-WikiPageServicesApi-getRepoV1EvaluationOwnerIdWiki}{\code{WikiPageServicesApi$getRepoV1EvaluationOwnerIdWiki()}}
\item \href{#method-WikiPageServicesApi-getRepoV1EvaluationOwnerIdWikiWithHttpInfo}{\code{WikiPageServicesApi$getRepoV1EvaluationOwnerIdWikiWithHttpInfo()}}
\item \href{#method-WikiPageServicesApi-getRepoV1EvaluationOwnerIdWikiWikiId}{\code{WikiPageServicesApi$getRepoV1EvaluationOwnerIdWikiWikiId()}}
\item \href{#method-WikiPageServicesApi-getRepoV1EvaluationOwnerIdWikiWikiIdWithHttpInfo}{\code{WikiPageServicesApi$getRepoV1EvaluationOwnerIdWikiWikiIdWithHttpInfo()}}
\item \href{#method-WikiPageServicesApi-getRepoV1EvaluationOwnerIdWikiWikiIdAttachment}{\code{WikiPageServicesApi$getRepoV1EvaluationOwnerIdWikiWikiIdAttachment()}}
\item \href{#method-WikiPageServicesApi-getRepoV1EvaluationOwnerIdWikiWikiIdAttachmentWithHttpInfo}{\code{WikiPageServicesApi$getRepoV1EvaluationOwnerIdWikiWikiIdAttachmentWithHttpInfo()}}
\item \href{#method-WikiPageServicesApi-getRepoV1EvaluationOwnerIdWikiWikiIdAttachmenthandles}{\code{WikiPageServicesApi$getRepoV1EvaluationOwnerIdWikiWikiIdAttachmenthandles()}}
\item \href{#method-WikiPageServicesApi-getRepoV1EvaluationOwnerIdWikiWikiIdAttachmenthandlesWithHttpInfo}{\code{WikiPageServicesApi$getRepoV1EvaluationOwnerIdWikiWikiIdAttachmenthandlesWithHttpInfo()}}
\item \href{#method-WikiPageServicesApi-getRepoV1EvaluationOwnerIdWikiWikiIdAttachmentpreview}{\code{WikiPageServicesApi$getRepoV1EvaluationOwnerIdWikiWikiIdAttachmentpreview()}}
\item \href{#method-WikiPageServicesApi-getRepoV1EvaluationOwnerIdWikiWikiIdAttachmentpreviewWithHttpInfo}{\code{WikiPageServicesApi$getRepoV1EvaluationOwnerIdWikiWikiIdAttachmentpreviewWithHttpInfo()}}
\item \href{#method-WikiPageServicesApi-getRepoV1EvaluationOwnerIdWikiheadertree}{\code{WikiPageServicesApi$getRepoV1EvaluationOwnerIdWikiheadertree()}}
\item \href{#method-WikiPageServicesApi-getRepoV1EvaluationOwnerIdWikiheadertreeWithHttpInfo}{\code{WikiPageServicesApi$getRepoV1EvaluationOwnerIdWikiheadertreeWithHttpInfo()}}
\item \href{#method-WikiPageServicesApi-getRepoV1EvaluationOwnerIdWikikey}{\code{WikiPageServicesApi$getRepoV1EvaluationOwnerIdWikikey()}}
\item \href{#method-WikiPageServicesApi-getRepoV1EvaluationOwnerIdWikikeyWithHttpInfo}{\code{WikiPageServicesApi$getRepoV1EvaluationOwnerIdWikikeyWithHttpInfo()}}
\item \href{#method-WikiPageServicesApi-postRepoV1AccessRequirementOwnerIdWiki}{\code{WikiPageServicesApi$postRepoV1AccessRequirementOwnerIdWiki()}}
\item \href{#method-WikiPageServicesApi-postRepoV1AccessRequirementOwnerIdWikiWithHttpInfo}{\code{WikiPageServicesApi$postRepoV1AccessRequirementOwnerIdWikiWithHttpInfo()}}
\item \href{#method-WikiPageServicesApi-postRepoV1EntityOwnerIdWiki}{\code{WikiPageServicesApi$postRepoV1EntityOwnerIdWiki()}}
\item \href{#method-WikiPageServicesApi-postRepoV1EntityOwnerIdWikiWithHttpInfo}{\code{WikiPageServicesApi$postRepoV1EntityOwnerIdWikiWithHttpInfo()}}
\item \href{#method-WikiPageServicesApi-postRepoV1EvaluationOwnerIdWiki}{\code{WikiPageServicesApi$postRepoV1EvaluationOwnerIdWiki()}}
\item \href{#method-WikiPageServicesApi-postRepoV1EvaluationOwnerIdWikiWithHttpInfo}{\code{WikiPageServicesApi$postRepoV1EvaluationOwnerIdWikiWithHttpInfo()}}
\item \href{#method-WikiPageServicesApi-putRepoV1AccessRequirementOwnerIdWikiWikiId}{\code{WikiPageServicesApi$putRepoV1AccessRequirementOwnerIdWikiWikiId()}}
\item \href{#method-WikiPageServicesApi-putRepoV1AccessRequirementOwnerIdWikiWikiIdWithHttpInfo}{\code{WikiPageServicesApi$putRepoV1AccessRequirementOwnerIdWikiWikiIdWithHttpInfo()}}
\item \href{#method-WikiPageServicesApi-putRepoV1EntityOwnerIdWikiWikiId}{\code{WikiPageServicesApi$putRepoV1EntityOwnerIdWikiWikiId()}}
\item \href{#method-WikiPageServicesApi-putRepoV1EntityOwnerIdWikiWikiIdWithHttpInfo}{\code{WikiPageServicesApi$putRepoV1EntityOwnerIdWikiWikiIdWithHttpInfo()}}
\item \href{#method-WikiPageServicesApi-putRepoV1EvaluationOwnerIdWikiWikiId}{\code{WikiPageServicesApi$putRepoV1EvaluationOwnerIdWikiWikiId()}}
\item \href{#method-WikiPageServicesApi-putRepoV1EvaluationOwnerIdWikiWikiIdWithHttpInfo}{\code{WikiPageServicesApi$putRepoV1EvaluationOwnerIdWikiWikiIdWithHttpInfo()}}
\item \href{#method-WikiPageServicesApi-clone}{\code{WikiPageServicesApi$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServicesApi-new"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServicesApi-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new WikiPageServicesApi.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServicesApi$new(api_client)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{api_client}}{An instance of API client.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServicesApi-deleteRepoV1EntityOwnerIdWikiWikiId"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServicesApi-deleteRepoV1EntityOwnerIdWikiWikiId}{}}}
\subsection{Method \code{deleteRepoV1EntityOwnerIdWikiWikiId()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServicesApi$deleteRepoV1EntityOwnerIdWikiWikiId(owner_id, wiki_id, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Entity.}

\item{\code{wiki_id}}{The ID of the WikiPage to delete.}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
void
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServicesApi-deleteRepoV1EntityOwnerIdWikiWikiIdWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServicesApi-deleteRepoV1EntityOwnerIdWikiWikiIdWithHttpInfo}{}}}
\subsection{Method \code{deleteRepoV1EntityOwnerIdWikiWikiIdWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServicesApi$deleteRepoV1EntityOwnerIdWikiWikiIdWithHttpInfo(
  owner_id,
  wiki_id,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Entity.}

\item{\code{wiki_id}}{The ID of the WikiPage to delete.}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (void) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServicesApi-deleteRepoV1EvaluationOwnerIdWikiWikiId"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServicesApi-deleteRepoV1EvaluationOwnerIdWikiWikiId}{}}}
\subsection{Method \code{deleteRepoV1EvaluationOwnerIdWikiWikiId()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServicesApi$deleteRepoV1EvaluationOwnerIdWikiWikiId(
  owner_id,
  wiki_id,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Evaluations.}

\item{\code{wiki_id}}{The ID of the WikiPage to delete.}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
void
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServicesApi-deleteRepoV1EvaluationOwnerIdWikiWikiIdWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServicesApi-deleteRepoV1EvaluationOwnerIdWikiWikiIdWithHttpInfo}{}}}
\subsection{Method \code{deleteRepoV1EvaluationOwnerIdWikiWikiIdWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServicesApi$deleteRepoV1EvaluationOwnerIdWikiWikiIdWithHttpInfo(
  owner_id,
  wiki_id,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Evaluations.}

\item{\code{wiki_id}}{The ID of the WikiPage to delete.}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (void) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServicesApi-getRepoV1AccessRequirementOwnerIdWikiWikiId"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServicesApi-getRepoV1AccessRequirementOwnerIdWikiWikiId}{}}}
\subsection{Method \code{getRepoV1AccessRequirementOwnerIdWikiWikiId()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServicesApi$getRepoV1AccessRequirementOwnerIdWikiWikiId(
  owner_id,
  wiki_id,
  wiki_version = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Entity.}

\item{\code{wiki_id}}{The ID of the WikiPage to get.}

\item{\code{wiki_version}}{(optional) When included returns a specific version of a wiki.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelWikiWikiPage
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServicesApi-getRepoV1AccessRequirementOwnerIdWikiWikiIdWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServicesApi-getRepoV1AccessRequirementOwnerIdWikiWikiIdWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1AccessRequirementOwnerIdWikiWikiIdWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServicesApi$getRepoV1AccessRequirementOwnerIdWikiWikiIdWithHttpInfo(
  owner_id,
  wiki_id,
  wiki_version = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Entity.}

\item{\code{wiki_id}}{The ID of the WikiPage to get.}

\item{\code{wiki_version}}{(optional) When included returns a specific version of a wiki.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelWikiWikiPage) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServicesApi-getRepoV1AccessRequirementOwnerIdWikikey"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServicesApi-getRepoV1AccessRequirementOwnerIdWikikey}{}}}
\subsection{Method \code{getRepoV1AccessRequirementOwnerIdWikikey()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServicesApi$getRepoV1AccessRequirementOwnerIdWikikey(
  owner_id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Access Requirement.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelDaoWikiPageKey
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServicesApi-getRepoV1AccessRequirementOwnerIdWikikeyWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServicesApi-getRepoV1AccessRequirementOwnerIdWikikeyWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1AccessRequirementOwnerIdWikikeyWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServicesApi$getRepoV1AccessRequirementOwnerIdWikikeyWithHttpInfo(
  owner_id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Access Requirement.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelDaoWikiPageKey) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServicesApi-getRepoV1EntityOwnerIdWiki"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServicesApi-getRepoV1EntityOwnerIdWiki}{}}}
\subsection{Method \code{getRepoV1EntityOwnerIdWiki()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServicesApi$getRepoV1EntityOwnerIdWiki(owner_id, data_file = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Entity.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelWikiWikiPage
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServicesApi-getRepoV1EntityOwnerIdWikiWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServicesApi-getRepoV1EntityOwnerIdWikiWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1EntityOwnerIdWikiWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServicesApi$getRepoV1EntityOwnerIdWikiWithHttpInfo(
  owner_id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Entity.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelWikiWikiPage) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServicesApi-getRepoV1EntityOwnerIdWikiWikiId"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServicesApi-getRepoV1EntityOwnerIdWikiWikiId}{}}}
\subsection{Method \code{getRepoV1EntityOwnerIdWikiWikiId()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServicesApi$getRepoV1EntityOwnerIdWikiWikiId(
  owner_id,
  wiki_id,
  wiki_version = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Entity.}

\item{\code{wiki_id}}{The ID of the WikiPage to get.}

\item{\code{wiki_version}}{(optional) When included returns a specific version of a wiki.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelWikiWikiPage
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServicesApi-getRepoV1EntityOwnerIdWikiWikiIdWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServicesApi-getRepoV1EntityOwnerIdWikiWikiIdWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1EntityOwnerIdWikiWikiIdWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServicesApi$getRepoV1EntityOwnerIdWikiWikiIdWithHttpInfo(
  owner_id,
  wiki_id,
  wiki_version = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Entity.}

\item{\code{wiki_id}}{The ID of the WikiPage to get.}

\item{\code{wiki_version}}{(optional) When included returns a specific version of a wiki.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelWikiWikiPage) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServicesApi-getRepoV1EntityOwnerIdWikiWikiIdAttachment"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServicesApi-getRepoV1EntityOwnerIdWikiWikiIdAttachment}{}}}
\subsection{Method \code{getRepoV1EntityOwnerIdWikiWikiIdAttachment()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServicesApi$getRepoV1EntityOwnerIdWikiWikiIdAttachment(
  owner_id,
  wiki_id,
  file_name,
  redirect = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Entity}

\item{\code{wiki_id}}{The ID of the WikiPage}

\item{\code{file_name}}{The name of the file to get. The file names can be found in             the FileHandles from the ,<a href=\"${GET.entity.ownerId.wiki.wikiId.attachmenthandles}\">,GET             /entity/{ownerId}/wiki/{wikiId}/attachmenthandles,</a>, method.}

\item{\code{redirect}}{(optional) When set to false, the URL will be returned as text/plain             instead of redirecting.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
AnyType
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServicesApi-getRepoV1EntityOwnerIdWikiWikiIdAttachmentWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServicesApi-getRepoV1EntityOwnerIdWikiWikiIdAttachmentWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1EntityOwnerIdWikiWikiIdAttachmentWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServicesApi$getRepoV1EntityOwnerIdWikiWikiIdAttachmentWithHttpInfo(
  owner_id,
  wiki_id,
  file_name,
  redirect = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Entity}

\item{\code{wiki_id}}{The ID of the WikiPage}

\item{\code{file_name}}{The name of the file to get. The file names can be found in             the FileHandles from the ,<a href=\"${GET.entity.ownerId.wiki.wikiId.attachmenthandles}\">,GET             /entity/{ownerId}/wiki/{wikiId}/attachmenthandles,</a>, method.}

\item{\code{redirect}}{(optional) When set to false, the URL will be returned as text/plain             instead of redirecting.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (AnyType) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServicesApi-getRepoV1EntityOwnerIdWikiWikiIdAttachmenthandles"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServicesApi-getRepoV1EntityOwnerIdWikiWikiIdAttachmenthandles}{}}}
\subsection{Method \code{getRepoV1EntityOwnerIdWikiWikiIdAttachmenthandles()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServicesApi$getRepoV1EntityOwnerIdWikiWikiIdAttachmenthandles(
  owner_id,
  wiki_id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Entity.}

\item{\code{wiki_id}}{The ID of the WikiPage.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelFileFileHandleResults
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServicesApi-getRepoV1EntityOwnerIdWikiWikiIdAttachmenthandlesWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServicesApi-getRepoV1EntityOwnerIdWikiWikiIdAttachmenthandlesWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1EntityOwnerIdWikiWikiIdAttachmenthandlesWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServicesApi$getRepoV1EntityOwnerIdWikiWikiIdAttachmenthandlesWithHttpInfo(
  owner_id,
  wiki_id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Entity.}

\item{\code{wiki_id}}{The ID of the WikiPage.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelFileFileHandleResults) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServicesApi-getRepoV1EntityOwnerIdWikiWikiIdAttachmentpreview"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServicesApi-getRepoV1EntityOwnerIdWikiWikiIdAttachmentpreview}{}}}
\subsection{Method \code{getRepoV1EntityOwnerIdWikiWikiIdAttachmentpreview()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServicesApi$getRepoV1EntityOwnerIdWikiWikiIdAttachmentpreview(
  owner_id,
  wiki_id,
  file_name,
  redirect = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Entity}

\item{\code{wiki_id}}{The ID of the WikiPage}

\item{\code{file_name}}{The name of the file to get. The file names can be found in             the FileHandles from the ,<a href=\"${GET.entity.ownerId.wiki.wikiId.attachmenthandles}\">,GET             /entity/{ownerId}/wiki/{wikiId}/attachmenthandles,</a>, method.}

\item{\code{redirect}}{(optional) When set to false, the URL will be returned as text/plain             instead of redirecting.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
AnyType
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServicesApi-getRepoV1EntityOwnerIdWikiWikiIdAttachmentpreviewWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServicesApi-getRepoV1EntityOwnerIdWikiWikiIdAttachmentpreviewWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1EntityOwnerIdWikiWikiIdAttachmentpreviewWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServicesApi$getRepoV1EntityOwnerIdWikiWikiIdAttachmentpreviewWithHttpInfo(
  owner_id,
  wiki_id,
  file_name,
  redirect = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Entity}

\item{\code{wiki_id}}{The ID of the WikiPage}

\item{\code{file_name}}{The name of the file to get. The file names can be found in             the FileHandles from the ,<a href=\"${GET.entity.ownerId.wiki.wikiId.attachmenthandles}\">,GET             /entity/{ownerId}/wiki/{wikiId}/attachmenthandles,</a>, method.}

\item{\code{redirect}}{(optional) When set to false, the URL will be returned as text/plain             instead of redirecting.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (AnyType) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServicesApi-getRepoV1EntityOwnerIdWikiheadertree"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServicesApi-getRepoV1EntityOwnerIdWikiheadertree}{}}}
\subsection{Method \code{getRepoV1EntityOwnerIdWikiheadertree()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServicesApi$getRepoV1EntityOwnerIdWikiheadertree(
  owner_id,
  offset = NULL,
  limit = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Entity.}

\item{\code{offset}}{(optional) The index of the pagination offset. For a page size of 10, the             first page would be at offset = 0, and the second page would             be at offset = 10.}

\item{\code{limit}}{(optional) Limits the size of the page returned. For example, a page size             of 10 require limit = 10.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
PaginatedResultsOfWikiHeader
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServicesApi-getRepoV1EntityOwnerIdWikiheadertreeWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServicesApi-getRepoV1EntityOwnerIdWikiheadertreeWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1EntityOwnerIdWikiheadertreeWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServicesApi$getRepoV1EntityOwnerIdWikiheadertreeWithHttpInfo(
  owner_id,
  offset = NULL,
  limit = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Entity.}

\item{\code{offset}}{(optional) The index of the pagination offset. For a page size of 10, the             first page would be at offset = 0, and the second page would             be at offset = 10.}

\item{\code{limit}}{(optional) Limits the size of the page returned. For example, a page size             of 10 require limit = 10.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (PaginatedResultsOfWikiHeader) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServicesApi-getRepoV1EntityOwnerIdWikikey"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServicesApi-getRepoV1EntityOwnerIdWikikey}{}}}
\subsection{Method \code{getRepoV1EntityOwnerIdWikikey()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServicesApi$getRepoV1EntityOwnerIdWikikey(
  owner_id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Entity.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelDaoWikiPageKey
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServicesApi-getRepoV1EntityOwnerIdWikikeyWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServicesApi-getRepoV1EntityOwnerIdWikikeyWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1EntityOwnerIdWikikeyWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServicesApi$getRepoV1EntityOwnerIdWikikeyWithHttpInfo(
  owner_id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Entity.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelDaoWikiPageKey) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServicesApi-getRepoV1EvaluationOwnerIdWiki"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServicesApi-getRepoV1EvaluationOwnerIdWiki}{}}}
\subsection{Method \code{getRepoV1EvaluationOwnerIdWiki()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServicesApi$getRepoV1EvaluationOwnerIdWiki(
  owner_id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Evaluation.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelWikiWikiPage
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServicesApi-getRepoV1EvaluationOwnerIdWikiWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServicesApi-getRepoV1EvaluationOwnerIdWikiWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1EvaluationOwnerIdWikiWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServicesApi$getRepoV1EvaluationOwnerIdWikiWithHttpInfo(
  owner_id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Evaluation.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelWikiWikiPage) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServicesApi-getRepoV1EvaluationOwnerIdWikiWikiId"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServicesApi-getRepoV1EvaluationOwnerIdWikiWikiId}{}}}
\subsection{Method \code{getRepoV1EvaluationOwnerIdWikiWikiId()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServicesApi$getRepoV1EvaluationOwnerIdWikiWikiId(
  owner_id,
  wiki_id,
  wiki_version = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Evaluation.}

\item{\code{wiki_id}}{The ID of the WikiPage to get.}

\item{\code{wiki_version}}{(optional) No description}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelWikiWikiPage
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServicesApi-getRepoV1EvaluationOwnerIdWikiWikiIdWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServicesApi-getRepoV1EvaluationOwnerIdWikiWikiIdWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1EvaluationOwnerIdWikiWikiIdWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServicesApi$getRepoV1EvaluationOwnerIdWikiWikiIdWithHttpInfo(
  owner_id,
  wiki_id,
  wiki_version = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Evaluation.}

\item{\code{wiki_id}}{The ID of the WikiPage to get.}

\item{\code{wiki_version}}{(optional) No description}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelWikiWikiPage) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServicesApi-getRepoV1EvaluationOwnerIdWikiWikiIdAttachment"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServicesApi-getRepoV1EvaluationOwnerIdWikiWikiIdAttachment}{}}}
\subsection{Method \code{getRepoV1EvaluationOwnerIdWikiWikiIdAttachment()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServicesApi$getRepoV1EvaluationOwnerIdWikiWikiIdAttachment(
  owner_id,
  wiki_id,
  file_name,
  redirect = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Evaluation}

\item{\code{wiki_id}}{The ID of the WikiPage}

\item{\code{file_name}}{The name of the file to get. The file names can be found in             the FileHandles from the ,<a href=\"${GET.evaluation.ownerId.wiki.wikiId.attachmenthandles}\">,GET /evaluation/{ownerId}/wiki/{wikiId}/attachmenthandles,</a>,             method.}

\item{\code{redirect}}{(optional) When set to false, the URL will be returned as text/plain             instead of redirecting.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
AnyType
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServicesApi-getRepoV1EvaluationOwnerIdWikiWikiIdAttachmentWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServicesApi-getRepoV1EvaluationOwnerIdWikiWikiIdAttachmentWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1EvaluationOwnerIdWikiWikiIdAttachmentWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServicesApi$getRepoV1EvaluationOwnerIdWikiWikiIdAttachmentWithHttpInfo(
  owner_id,
  wiki_id,
  file_name,
  redirect = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Evaluation}

\item{\code{wiki_id}}{The ID of the WikiPage}

\item{\code{file_name}}{The name of the file to get. The file names can be found in             the FileHandles from the ,<a href=\"${GET.evaluation.ownerId.wiki.wikiId.attachmenthandles}\">,GET /evaluation/{ownerId}/wiki/{wikiId}/attachmenthandles,</a>,             method.}

\item{\code{redirect}}{(optional) When set to false, the URL will be returned as text/plain             instead of redirecting.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (AnyType) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServicesApi-getRepoV1EvaluationOwnerIdWikiWikiIdAttachmenthandles"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServicesApi-getRepoV1EvaluationOwnerIdWikiWikiIdAttachmenthandles}{}}}
\subsection{Method \code{getRepoV1EvaluationOwnerIdWikiWikiIdAttachmenthandles()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServicesApi$getRepoV1EvaluationOwnerIdWikiWikiIdAttachmenthandles(
  owner_id,
  wiki_id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Evaluation.}

\item{\code{wiki_id}}{The ID of the WikiPage.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelFileFileHandleResults
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServicesApi-getRepoV1EvaluationOwnerIdWikiWikiIdAttachmenthandlesWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServicesApi-getRepoV1EvaluationOwnerIdWikiWikiIdAttachmenthandlesWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1EvaluationOwnerIdWikiWikiIdAttachmenthandlesWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServicesApi$getRepoV1EvaluationOwnerIdWikiWikiIdAttachmenthandlesWithHttpInfo(
  owner_id,
  wiki_id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Evaluation.}

\item{\code{wiki_id}}{The ID of the WikiPage.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelFileFileHandleResults) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServicesApi-getRepoV1EvaluationOwnerIdWikiWikiIdAttachmentpreview"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServicesApi-getRepoV1EvaluationOwnerIdWikiWikiIdAttachmentpreview}{}}}
\subsection{Method \code{getRepoV1EvaluationOwnerIdWikiWikiIdAttachmentpreview()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServicesApi$getRepoV1EvaluationOwnerIdWikiWikiIdAttachmentpreview(
  owner_id,
  wiki_id,
  file_name,
  redirect = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Evaluation}

\item{\code{wiki_id}}{The ID of the WikiPage}

\item{\code{file_name}}{The name of the file to get. The file names can be found in             the FileHandles from the ,<a href=\"${GET.evaluation.ownerId.wiki.wikiId.attachmenthandles}\">,GET /evaluation/{ownerId}/wiki/{wikiId}/attachmenthandles,</a>,             method.}

\item{\code{redirect}}{(optional) When set to false, the URL will be returned as text/plain             instead of redirecting.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
AnyType
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServicesApi-getRepoV1EvaluationOwnerIdWikiWikiIdAttachmentpreviewWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServicesApi-getRepoV1EvaluationOwnerIdWikiWikiIdAttachmentpreviewWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1EvaluationOwnerIdWikiWikiIdAttachmentpreviewWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServicesApi$getRepoV1EvaluationOwnerIdWikiWikiIdAttachmentpreviewWithHttpInfo(
  owner_id,
  wiki_id,
  file_name,
  redirect = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Evaluation}

\item{\code{wiki_id}}{The ID of the WikiPage}

\item{\code{file_name}}{The name of the file to get. The file names can be found in             the FileHandles from the ,<a href=\"${GET.evaluation.ownerId.wiki.wikiId.attachmenthandles}\">,GET /evaluation/{ownerId}/wiki/{wikiId}/attachmenthandles,</a>,             method.}

\item{\code{redirect}}{(optional) When set to false, the URL will be returned as text/plain             instead of redirecting.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (AnyType) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServicesApi-getRepoV1EvaluationOwnerIdWikiheadertree"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServicesApi-getRepoV1EvaluationOwnerIdWikiheadertree}{}}}
\subsection{Method \code{getRepoV1EvaluationOwnerIdWikiheadertree()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServicesApi$getRepoV1EvaluationOwnerIdWikiheadertree(
  owner_id,
  offset = NULL,
  limit = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Evaluation.}

\item{\code{offset}}{(optional) The index of the pagination offset. For a page size of 10, the             first page would be at offset = 0, and the second page would             be at offset = 10.}

\item{\code{limit}}{(optional) Limits the size of the page returned. For example, a page size             of 10 require limit = 10.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
PaginatedResultsOfWikiHeader
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServicesApi-getRepoV1EvaluationOwnerIdWikiheadertreeWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServicesApi-getRepoV1EvaluationOwnerIdWikiheadertreeWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1EvaluationOwnerIdWikiheadertreeWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServicesApi$getRepoV1EvaluationOwnerIdWikiheadertreeWithHttpInfo(
  owner_id,
  offset = NULL,
  limit = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Evaluation.}

\item{\code{offset}}{(optional) The index of the pagination offset. For a page size of 10, the             first page would be at offset = 0, and the second page would             be at offset = 10.}

\item{\code{limit}}{(optional) Limits the size of the page returned. For example, a page size             of 10 require limit = 10.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (PaginatedResultsOfWikiHeader) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServicesApi-getRepoV1EvaluationOwnerIdWikikey"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServicesApi-getRepoV1EvaluationOwnerIdWikikey}{}}}
\subsection{Method \code{getRepoV1EvaluationOwnerIdWikikey()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServicesApi$getRepoV1EvaluationOwnerIdWikikey(
  owner_id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Evaluation.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelDaoWikiPageKey
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServicesApi-getRepoV1EvaluationOwnerIdWikikeyWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServicesApi-getRepoV1EvaluationOwnerIdWikikeyWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1EvaluationOwnerIdWikikeyWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServicesApi$getRepoV1EvaluationOwnerIdWikikeyWithHttpInfo(
  owner_id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Evaluation.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelDaoWikiPageKey) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServicesApi-postRepoV1AccessRequirementOwnerIdWiki"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServicesApi-postRepoV1AccessRequirementOwnerIdWiki}{}}}
\subsection{Method \code{postRepoV1AccessRequirementOwnerIdWiki()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServicesApi$postRepoV1AccessRequirementOwnerIdWiki(
  owner_id,
  org_sagebionetworks_repo_model_wiki_wiki_page,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owner Entity.}

\item{\code{org_sagebionetworks_repo_model_wiki_wiki_page}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelWikiWikiPage
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServicesApi-postRepoV1AccessRequirementOwnerIdWikiWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServicesApi-postRepoV1AccessRequirementOwnerIdWikiWithHttpInfo}{}}}
\subsection{Method \code{postRepoV1AccessRequirementOwnerIdWikiWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServicesApi$postRepoV1AccessRequirementOwnerIdWikiWithHttpInfo(
  owner_id,
  org_sagebionetworks_repo_model_wiki_wiki_page,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owner Entity.}

\item{\code{org_sagebionetworks_repo_model_wiki_wiki_page}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelWikiWikiPage) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServicesApi-postRepoV1EntityOwnerIdWiki"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServicesApi-postRepoV1EntityOwnerIdWiki}{}}}
\subsection{Method \code{postRepoV1EntityOwnerIdWiki()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServicesApi$postRepoV1EntityOwnerIdWiki(
  owner_id,
  org_sagebionetworks_repo_model_wiki_wiki_page,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owner Entity.}

\item{\code{org_sagebionetworks_repo_model_wiki_wiki_page}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelWikiWikiPage
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServicesApi-postRepoV1EntityOwnerIdWikiWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServicesApi-postRepoV1EntityOwnerIdWikiWithHttpInfo}{}}}
\subsection{Method \code{postRepoV1EntityOwnerIdWikiWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServicesApi$postRepoV1EntityOwnerIdWikiWithHttpInfo(
  owner_id,
  org_sagebionetworks_repo_model_wiki_wiki_page,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owner Entity.}

\item{\code{org_sagebionetworks_repo_model_wiki_wiki_page}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelWikiWikiPage) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServicesApi-postRepoV1EvaluationOwnerIdWiki"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServicesApi-postRepoV1EvaluationOwnerIdWiki}{}}}
\subsection{Method \code{postRepoV1EvaluationOwnerIdWiki()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServicesApi$postRepoV1EvaluationOwnerIdWiki(
  owner_id,
  org_sagebionetworks_repo_model_wiki_wiki_page,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owner Evaluation.}

\item{\code{org_sagebionetworks_repo_model_wiki_wiki_page}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelWikiWikiPage
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServicesApi-postRepoV1EvaluationOwnerIdWikiWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServicesApi-postRepoV1EvaluationOwnerIdWikiWithHttpInfo}{}}}
\subsection{Method \code{postRepoV1EvaluationOwnerIdWikiWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServicesApi$postRepoV1EvaluationOwnerIdWikiWithHttpInfo(
  owner_id,
  org_sagebionetworks_repo_model_wiki_wiki_page,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owner Evaluation.}

\item{\code{org_sagebionetworks_repo_model_wiki_wiki_page}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelWikiWikiPage) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServicesApi-putRepoV1AccessRequirementOwnerIdWikiWikiId"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServicesApi-putRepoV1AccessRequirementOwnerIdWikiWikiId}{}}}
\subsection{Method \code{putRepoV1AccessRequirementOwnerIdWikiWikiId()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServicesApi$putRepoV1AccessRequirementOwnerIdWikiWikiId(
  owner_id,
  wiki_id,
  org_sagebionetworks_repo_model_wiki_wiki_page,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Entity.}

\item{\code{wiki_id}}{The ID of the WikiPage to update.}

\item{\code{org_sagebionetworks_repo_model_wiki_wiki_page}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelWikiWikiPage
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServicesApi-putRepoV1AccessRequirementOwnerIdWikiWikiIdWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServicesApi-putRepoV1AccessRequirementOwnerIdWikiWikiIdWithHttpInfo}{}}}
\subsection{Method \code{putRepoV1AccessRequirementOwnerIdWikiWikiIdWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServicesApi$putRepoV1AccessRequirementOwnerIdWikiWikiIdWithHttpInfo(
  owner_id,
  wiki_id,
  org_sagebionetworks_repo_model_wiki_wiki_page,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Entity.}

\item{\code{wiki_id}}{The ID of the WikiPage to update.}

\item{\code{org_sagebionetworks_repo_model_wiki_wiki_page}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelWikiWikiPage) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServicesApi-putRepoV1EntityOwnerIdWikiWikiId"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServicesApi-putRepoV1EntityOwnerIdWikiWikiId}{}}}
\subsection{Method \code{putRepoV1EntityOwnerIdWikiWikiId()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServicesApi$putRepoV1EntityOwnerIdWikiWikiId(
  owner_id,
  wiki_id,
  org_sagebionetworks_repo_model_wiki_wiki_page,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Entity.}

\item{\code{wiki_id}}{The ID of the WikiPage to update.}

\item{\code{org_sagebionetworks_repo_model_wiki_wiki_page}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelWikiWikiPage
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServicesApi-putRepoV1EntityOwnerIdWikiWikiIdWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServicesApi-putRepoV1EntityOwnerIdWikiWikiIdWithHttpInfo}{}}}
\subsection{Method \code{putRepoV1EntityOwnerIdWikiWikiIdWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServicesApi$putRepoV1EntityOwnerIdWikiWikiIdWithHttpInfo(
  owner_id,
  wiki_id,
  org_sagebionetworks_repo_model_wiki_wiki_page,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Entity.}

\item{\code{wiki_id}}{The ID of the WikiPage to update.}

\item{\code{org_sagebionetworks_repo_model_wiki_wiki_page}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelWikiWikiPage) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServicesApi-putRepoV1EvaluationOwnerIdWikiWikiId"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServicesApi-putRepoV1EvaluationOwnerIdWikiWikiId}{}}}
\subsection{Method \code{putRepoV1EvaluationOwnerIdWikiWikiId()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServicesApi$putRepoV1EvaluationOwnerIdWikiWikiId(
  owner_id,
  wiki_id,
  org_sagebionetworks_repo_model_wiki_wiki_page,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Evaluation.}

\item{\code{wiki_id}}{The ID of the WikiPage to update.}

\item{\code{org_sagebionetworks_repo_model_wiki_wiki_page}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelWikiWikiPage
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServicesApi-putRepoV1EvaluationOwnerIdWikiWikiIdWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServicesApi-putRepoV1EvaluationOwnerIdWikiWikiIdWithHttpInfo}{}}}
\subsection{Method \code{putRepoV1EvaluationOwnerIdWikiWikiIdWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServicesApi$putRepoV1EvaluationOwnerIdWikiWikiIdWithHttpInfo(
  owner_id,
  wiki_id,
  org_sagebionetworks_repo_model_wiki_wiki_page,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{owner_id}}{The ID of the owning Evaluation.}

\item{\code{wiki_id}}{The ID of the WikiPage to update.}

\item{\code{org_sagebionetworks_repo_model_wiki_wiki_page}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelWikiWikiPage) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WikiPageServicesApi-clone"></a>}}
\if{latex}{\out{\hypertarget{method-WikiPageServicesApi-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WikiPageServicesApi$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
