% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/org_sagebionetworks_repo_model_table_query.R
\docType{class}
\name{OrgSagebionetworksRepoModelTableQuery}
\alias{OrgSagebionetworksRepoModelTableQuery}
\title{OrgSagebionetworksRepoModelTableQuery}
\format{
An \code{R6Class} generator object
}
\description{
OrgSagebionetworksRepoModelTableQuery Class

OrgSagebionetworksRepoModelTableQuery Class
}
\details{
Create a new OrgSagebionetworksRepoModelTableQuery
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{sql}}{character [optional]}

\item{\code{additionalFilters}}{Appends additional filters to the SQL query. These are applied before facets. Filters within the list have an AND relationship. If a WHERE clause already exists on the SQL query or facets are selected, it will also be ANDed with the query generated by these additional filters. list(\link{OrgSagebionetworksRepoModelTableQueryFilter}) [optional]}

\item{\code{selectedFacets}}{The selected facet filters. list(\link{OrgSagebionetworksRepoModelTableFacetColumnRequest}) [optional]}

\item{\code{includeEntityEtag}}{character [optional]}

\item{\code{selectFileColumn}}{integer [optional]}

\item{\code{offset}}{integer [optional]}

\item{\code{limit}}{integer [optional]}

\item{\code{sort}}{list(\link{OrgSagebionetworksRepoModelTableSortItem}) [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-OrgSagebionetworksRepoModelTableQuery-new}{\code{OrgSagebionetworksRepoModelTableQuery$new()}}
\item \href{#method-OrgSagebionetworksRepoModelTableQuery-toJSON}{\code{OrgSagebionetworksRepoModelTableQuery$toJSON()}}
\item \href{#method-OrgSagebionetworksRepoModelTableQuery-fromJSON}{\code{OrgSagebionetworksRepoModelTableQuery$fromJSON()}}
\item \href{#method-OrgSagebionetworksRepoModelTableQuery-toJSONString}{\code{OrgSagebionetworksRepoModelTableQuery$toJSONString()}}
\item \href{#method-OrgSagebionetworksRepoModelTableQuery-fromJSONString}{\code{OrgSagebionetworksRepoModelTableQuery$fromJSONString()}}
\item \href{#method-OrgSagebionetworksRepoModelTableQuery-validateJSON}{\code{OrgSagebionetworksRepoModelTableQuery$validateJSON()}}
\item \href{#method-OrgSagebionetworksRepoModelTableQuery-toString}{\code{OrgSagebionetworksRepoModelTableQuery$toString()}}
\item \href{#method-OrgSagebionetworksRepoModelTableQuery-isValid}{\code{OrgSagebionetworksRepoModelTableQuery$isValid()}}
\item \href{#method-OrgSagebionetworksRepoModelTableQuery-getInvalidFields}{\code{OrgSagebionetworksRepoModelTableQuery$getInvalidFields()}}
\item \href{#method-OrgSagebionetworksRepoModelTableQuery-print}{\code{OrgSagebionetworksRepoModelTableQuery$print()}}
\item \href{#method-OrgSagebionetworksRepoModelTableQuery-clone}{\code{OrgSagebionetworksRepoModelTableQuery$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableQuery-new"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableQuery-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new OrgSagebionetworksRepoModelTableQuery class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableQuery$new(
  sql = NULL,
  additionalFilters = NULL,
  selectedFacets = NULL,
  includeEntityEtag = NULL,
  selectFileColumn = NULL,
  offset = NULL,
  limit = NULL,
  sort = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sql}}{sql}

\item{\code{additionalFilters}}{Appends additional filters to the SQL query. These are applied before facets. Filters within the list have an AND relationship. If a WHERE clause already exists on the SQL query or facets are selected, it will also be ANDed with the query generated by these additional filters.}

\item{\code{selectedFacets}}{The selected facet filters.}

\item{\code{includeEntityEtag}}{includeEntityEtag}

\item{\code{selectFileColumn}}{selectFileColumn}

\item{\code{offset}}{offset}

\item{\code{limit}}{limit}

\item{\code{sort}}{sort}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableQuery-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableQuery-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableQuery$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
OrgSagebionetworksRepoModelTableQuery in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableQuery-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableQuery-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of OrgSagebionetworksRepoModelTableQuery
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableQuery$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of OrgSagebionetworksRepoModelTableQuery
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableQuery-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableQuery-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableQuery$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
OrgSagebionetworksRepoModelTableQuery in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableQuery-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableQuery-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of OrgSagebionetworksRepoModelTableQuery
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableQuery$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of OrgSagebionetworksRepoModelTableQuery
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableQuery-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableQuery-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to OrgSagebionetworksRepoModelTableQuery and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableQuery$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableQuery-toString"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableQuery-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableQuery$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of OrgSagebionetworksRepoModelTableQuery
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableQuery-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableQuery-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableQuery$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableQuery-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableQuery-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableQuery$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableQuery-print"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableQuery-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableQuery$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableQuery-clone"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableQuery-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableQuery$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
