% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/paginated_results_of_message_to_user.R
\docType{class}
\name{PaginatedResultsOfMessageToUser}
\alias{PaginatedResultsOfMessageToUser}
\title{PaginatedResultsOfMessageToUser}
\format{
An \code{R6Class} generator object
}
\description{
PaginatedResultsOfMessageToUser Class

PaginatedResultsOfMessageToUser Class
}
\details{
Create a new PaginatedResultsOfMessageToUser
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{totalNumberOfResults}}{integer [optional]}

\item{\code{results}}{list(\link{OrgSagebionetworksRepoModelMessageMessageToUser}) [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-PaginatedResultsOfMessageToUser-new}{\code{PaginatedResultsOfMessageToUser$new()}}
\item \href{#method-PaginatedResultsOfMessageToUser-toJSON}{\code{PaginatedResultsOfMessageToUser$toJSON()}}
\item \href{#method-PaginatedResultsOfMessageToUser-fromJSON}{\code{PaginatedResultsOfMessageToUser$fromJSON()}}
\item \href{#method-PaginatedResultsOfMessageToUser-toJSONString}{\code{PaginatedResultsOfMessageToUser$toJSONString()}}
\item \href{#method-PaginatedResultsOfMessageToUser-fromJSONString}{\code{PaginatedResultsOfMessageToUser$fromJSONString()}}
\item \href{#method-PaginatedResultsOfMessageToUser-validateJSON}{\code{PaginatedResultsOfMessageToUser$validateJSON()}}
\item \href{#method-PaginatedResultsOfMessageToUser-toString}{\code{PaginatedResultsOfMessageToUser$toString()}}
\item \href{#method-PaginatedResultsOfMessageToUser-isValid}{\code{PaginatedResultsOfMessageToUser$isValid()}}
\item \href{#method-PaginatedResultsOfMessageToUser-getInvalidFields}{\code{PaginatedResultsOfMessageToUser$getInvalidFields()}}
\item \href{#method-PaginatedResultsOfMessageToUser-print}{\code{PaginatedResultsOfMessageToUser$print()}}
\item \href{#method-PaginatedResultsOfMessageToUser-clone}{\code{PaginatedResultsOfMessageToUser$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfMessageToUser-new"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfMessageToUser-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new PaginatedResultsOfMessageToUser class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfMessageToUser$new(
  totalNumberOfResults = NULL,
  results = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{totalNumberOfResults}}{totalNumberOfResults}

\item{\code{results}}{results}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfMessageToUser-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfMessageToUser-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfMessageToUser$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
PaginatedResultsOfMessageToUser in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfMessageToUser-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfMessageToUser-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of PaginatedResultsOfMessageToUser
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfMessageToUser$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of PaginatedResultsOfMessageToUser
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfMessageToUser-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfMessageToUser-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfMessageToUser$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
PaginatedResultsOfMessageToUser in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfMessageToUser-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfMessageToUser-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of PaginatedResultsOfMessageToUser
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfMessageToUser$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of PaginatedResultsOfMessageToUser
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfMessageToUser-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfMessageToUser-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to PaginatedResultsOfMessageToUser and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfMessageToUser$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfMessageToUser-toString"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfMessageToUser-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfMessageToUser$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of PaginatedResultsOfMessageToUser
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfMessageToUser-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfMessageToUser-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfMessageToUser$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfMessageToUser-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfMessageToUser-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfMessageToUser$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfMessageToUser-print"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfMessageToUser-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfMessageToUser$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfMessageToUser-clone"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfMessageToUser-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfMessageToUser$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
