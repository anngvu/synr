% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/paginated_results_of_discussion_thread_bundle.R
\docType{class}
\name{PaginatedResultsOfDiscussionThreadBundle}
\alias{PaginatedResultsOfDiscussionThreadBundle}
\title{PaginatedResultsOfDiscussionThreadBundle}
\format{
An \code{R6Class} generator object
}
\description{
PaginatedResultsOfDiscussionThreadBundle Class

PaginatedResultsOfDiscussionThreadBundle Class
}
\details{
Create a new PaginatedResultsOfDiscussionThreadBundle
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{totalNumberOfResults}}{integer [optional]}

\item{\code{results}}{list(\link{OrgSagebionetworksRepoModelDiscussionDiscussionThreadBundle}) [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-PaginatedResultsOfDiscussionThreadBundle-new}{\code{PaginatedResultsOfDiscussionThreadBundle$new()}}
\item \href{#method-PaginatedResultsOfDiscussionThreadBundle-toJSON}{\code{PaginatedResultsOfDiscussionThreadBundle$toJSON()}}
\item \href{#method-PaginatedResultsOfDiscussionThreadBundle-fromJSON}{\code{PaginatedResultsOfDiscussionThreadBundle$fromJSON()}}
\item \href{#method-PaginatedResultsOfDiscussionThreadBundle-toJSONString}{\code{PaginatedResultsOfDiscussionThreadBundle$toJSONString()}}
\item \href{#method-PaginatedResultsOfDiscussionThreadBundle-fromJSONString}{\code{PaginatedResultsOfDiscussionThreadBundle$fromJSONString()}}
\item \href{#method-PaginatedResultsOfDiscussionThreadBundle-validateJSON}{\code{PaginatedResultsOfDiscussionThreadBundle$validateJSON()}}
\item \href{#method-PaginatedResultsOfDiscussionThreadBundle-toString}{\code{PaginatedResultsOfDiscussionThreadBundle$toString()}}
\item \href{#method-PaginatedResultsOfDiscussionThreadBundle-isValid}{\code{PaginatedResultsOfDiscussionThreadBundle$isValid()}}
\item \href{#method-PaginatedResultsOfDiscussionThreadBundle-getInvalidFields}{\code{PaginatedResultsOfDiscussionThreadBundle$getInvalidFields()}}
\item \href{#method-PaginatedResultsOfDiscussionThreadBundle-print}{\code{PaginatedResultsOfDiscussionThreadBundle$print()}}
\item \href{#method-PaginatedResultsOfDiscussionThreadBundle-clone}{\code{PaginatedResultsOfDiscussionThreadBundle$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfDiscussionThreadBundle-new"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfDiscussionThreadBundle-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new PaginatedResultsOfDiscussionThreadBundle class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfDiscussionThreadBundle$new(
  totalNumberOfResults = NULL,
  results = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{totalNumberOfResults}}{totalNumberOfResults}

\item{\code{results}}{results}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfDiscussionThreadBundle-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfDiscussionThreadBundle-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfDiscussionThreadBundle$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
PaginatedResultsOfDiscussionThreadBundle in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfDiscussionThreadBundle-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfDiscussionThreadBundle-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of PaginatedResultsOfDiscussionThreadBundle
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfDiscussionThreadBundle$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of PaginatedResultsOfDiscussionThreadBundle
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfDiscussionThreadBundle-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfDiscussionThreadBundle-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfDiscussionThreadBundle$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
PaginatedResultsOfDiscussionThreadBundle in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfDiscussionThreadBundle-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfDiscussionThreadBundle-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of PaginatedResultsOfDiscussionThreadBundle
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfDiscussionThreadBundle$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of PaginatedResultsOfDiscussionThreadBundle
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfDiscussionThreadBundle-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfDiscussionThreadBundle-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to PaginatedResultsOfDiscussionThreadBundle and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfDiscussionThreadBundle$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfDiscussionThreadBundle-toString"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfDiscussionThreadBundle-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfDiscussionThreadBundle$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of PaginatedResultsOfDiscussionThreadBundle
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfDiscussionThreadBundle-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfDiscussionThreadBundle-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfDiscussionThreadBundle$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfDiscussionThreadBundle-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfDiscussionThreadBundle-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfDiscussionThreadBundle$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfDiscussionThreadBundle-print"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfDiscussionThreadBundle-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfDiscussionThreadBundle$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfDiscussionThreadBundle-clone"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfDiscussionThreadBundle-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfDiscussionThreadBundle$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
