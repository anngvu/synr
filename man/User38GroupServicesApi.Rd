% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/user38_group_services_api.R
\docType{class}
\name{User38GroupServicesApi}
\alias{User38GroupServicesApi}
\title{User38GroupServices operations}
\format{
An \code{R6Class} generator object
}
\description{
User38GroupServicesApi
}
\details{
Synapse REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: v1
Generated by: https://openapi-generator.tech
}
\section{Methods}{

\describe{
\strong{ getRepoV1UserGroup } \emph{  }

\itemize{
\item \emph{ @param } offset integer
\item \emph{ @param } limit integer
\item \emph{ @param } sort character
\item \emph{ @param } ascending character
\item \emph{ @returnType } \link{PaginatedResultsOfUserGroup} \cr


\item status code : 200 | The UserGroups for individuals

\item return type : PaginatedResultsOfUserGroup
\item response headers :

\tabular{ll}{
}
}

}
}

\examples{
\dontrun{
####################  getRepoV1UserGroup  ####################

library(synr)
var_offset <- 56 # integer |  (Optional)
var_limit <- 56 # integer |  (Optional)
var_sort <- "sort_example" # character |  (Optional)
var_ascending <- "ascending_example" # character |  (Optional)

api_instance <- User38GroupServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1UserGroup(offset = var_offset, limit = var_limit, sort = var_sort, ascending = var_ascendingdata_file = "result.txt")
result <- api_instance$getRepoV1UserGroup(offset = var_offset, limit = var_limit, sort = var_sort, ascending = var_ascending)
dput(result)


}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{api_client}}{Handles the client-server communication.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-User38GroupServicesApi-new}{\code{User38GroupServicesApi$new()}}
\item \href{#method-User38GroupServicesApi-getRepoV1UserGroup}{\code{User38GroupServicesApi$getRepoV1UserGroup()}}
\item \href{#method-User38GroupServicesApi-getRepoV1UserGroupWithHttpInfo}{\code{User38GroupServicesApi$getRepoV1UserGroupWithHttpInfo()}}
\item \href{#method-User38GroupServicesApi-clone}{\code{User38GroupServicesApi$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-User38GroupServicesApi-new"></a>}}
\if{latex}{\out{\hypertarget{method-User38GroupServicesApi-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new User38GroupServicesApi.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{User38GroupServicesApi$new(api_client)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{api_client}}{An instance of API client.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-User38GroupServicesApi-getRepoV1UserGroup"></a>}}
\if{latex}{\out{\hypertarget{method-User38GroupServicesApi-getRepoV1UserGroup}{}}}
\subsection{Method \code{getRepoV1UserGroup()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{User38GroupServicesApi$getRepoV1UserGroup(
  offset = NULL,
  limit = NULL,
  sort = NULL,
  ascending = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{offset}}{(optional) No description}

\item{\code{limit}}{(optional) No description}

\item{\code{sort}}{(optional) No description}

\item{\code{ascending}}{(optional) No description}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
PaginatedResultsOfUserGroup
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-User38GroupServicesApi-getRepoV1UserGroupWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-User38GroupServicesApi-getRepoV1UserGroupWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1UserGroupWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{User38GroupServicesApi$getRepoV1UserGroupWithHttpInfo(
  offset = NULL,
  limit = NULL,
  sort = NULL,
  ascending = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{offset}}{(optional) No description}

\item{\code{limit}}{(optional) No description}

\item{\code{sort}}{(optional) No description}

\item{\code{ascending}}{(optional) No description}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (PaginatedResultsOfUserGroup) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-User38GroupServicesApi-clone"></a>}}
\if{latex}{\out{\hypertarget{method-User38GroupServicesApi-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{User38GroupServicesApi$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
