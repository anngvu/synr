% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/paginated_results_of_user_group.R
\docType{class}
\name{PaginatedResultsOfUserGroup}
\alias{PaginatedResultsOfUserGroup}
\title{PaginatedResultsOfUserGroup}
\format{
An \code{R6Class} generator object
}
\description{
PaginatedResultsOfUserGroup Class

PaginatedResultsOfUserGroup Class
}
\details{
Create a new PaginatedResultsOfUserGroup
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{totalNumberOfResults}}{integer [optional]}

\item{\code{results}}{list(\link{OrgSagebionetworksRepoModelUserGroup}) [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-PaginatedResultsOfUserGroup-new}{\code{PaginatedResultsOfUserGroup$new()}}
\item \href{#method-PaginatedResultsOfUserGroup-toJSON}{\code{PaginatedResultsOfUserGroup$toJSON()}}
\item \href{#method-PaginatedResultsOfUserGroup-fromJSON}{\code{PaginatedResultsOfUserGroup$fromJSON()}}
\item \href{#method-PaginatedResultsOfUserGroup-toJSONString}{\code{PaginatedResultsOfUserGroup$toJSONString()}}
\item \href{#method-PaginatedResultsOfUserGroup-fromJSONString}{\code{PaginatedResultsOfUserGroup$fromJSONString()}}
\item \href{#method-PaginatedResultsOfUserGroup-validateJSON}{\code{PaginatedResultsOfUserGroup$validateJSON()}}
\item \href{#method-PaginatedResultsOfUserGroup-toString}{\code{PaginatedResultsOfUserGroup$toString()}}
\item \href{#method-PaginatedResultsOfUserGroup-isValid}{\code{PaginatedResultsOfUserGroup$isValid()}}
\item \href{#method-PaginatedResultsOfUserGroup-getInvalidFields}{\code{PaginatedResultsOfUserGroup$getInvalidFields()}}
\item \href{#method-PaginatedResultsOfUserGroup-print}{\code{PaginatedResultsOfUserGroup$print()}}
\item \href{#method-PaginatedResultsOfUserGroup-clone}{\code{PaginatedResultsOfUserGroup$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfUserGroup-new"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfUserGroup-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new PaginatedResultsOfUserGroup class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfUserGroup$new(
  totalNumberOfResults = NULL,
  results = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{totalNumberOfResults}}{totalNumberOfResults}

\item{\code{results}}{results}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfUserGroup-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfUserGroup-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfUserGroup$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
PaginatedResultsOfUserGroup in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfUserGroup-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfUserGroup-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of PaginatedResultsOfUserGroup
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfUserGroup$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of PaginatedResultsOfUserGroup
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfUserGroup-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfUserGroup-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfUserGroup$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
PaginatedResultsOfUserGroup in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfUserGroup-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfUserGroup-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of PaginatedResultsOfUserGroup
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfUserGroup$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of PaginatedResultsOfUserGroup
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfUserGroup-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfUserGroup-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to PaginatedResultsOfUserGroup and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfUserGroup$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfUserGroup-toString"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfUserGroup-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfUserGroup$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of PaginatedResultsOfUserGroup
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfUserGroup-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfUserGroup-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfUserGroup$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfUserGroup-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfUserGroup-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfUserGroup$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfUserGroup-print"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfUserGroup-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfUserGroup$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfUserGroup-clone"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfUserGroup-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfUserGroup$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
