% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/org_sagebionetworks_repo_model_entity_ref.R
\docType{class}
\name{OrgSagebionetworksRepoModelEntityRef}
\alias{OrgSagebionetworksRepoModelEntityRef}
\title{OrgSagebionetworksRepoModelEntityRef}
\format{
An \code{R6Class} generator object
}
\description{
Represents a reference to the id and version of an entity to be used in collections.

OrgSagebionetworksRepoModelEntityRef Class
}
\details{
Create a new OrgSagebionetworksRepoModelEntityRef
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{entityId}}{character [optional]}

\item{\code{versionNumber}}{integer [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-OrgSagebionetworksRepoModelEntityRef-new}{\code{OrgSagebionetworksRepoModelEntityRef$new()}}
\item \href{#method-OrgSagebionetworksRepoModelEntityRef-toJSON}{\code{OrgSagebionetworksRepoModelEntityRef$toJSON()}}
\item \href{#method-OrgSagebionetworksRepoModelEntityRef-fromJSON}{\code{OrgSagebionetworksRepoModelEntityRef$fromJSON()}}
\item \href{#method-OrgSagebionetworksRepoModelEntityRef-toJSONString}{\code{OrgSagebionetworksRepoModelEntityRef$toJSONString()}}
\item \href{#method-OrgSagebionetworksRepoModelEntityRef-fromJSONString}{\code{OrgSagebionetworksRepoModelEntityRef$fromJSONString()}}
\item \href{#method-OrgSagebionetworksRepoModelEntityRef-validateJSON}{\code{OrgSagebionetworksRepoModelEntityRef$validateJSON()}}
\item \href{#method-OrgSagebionetworksRepoModelEntityRef-toString}{\code{OrgSagebionetworksRepoModelEntityRef$toString()}}
\item \href{#method-OrgSagebionetworksRepoModelEntityRef-isValid}{\code{OrgSagebionetworksRepoModelEntityRef$isValid()}}
\item \href{#method-OrgSagebionetworksRepoModelEntityRef-getInvalidFields}{\code{OrgSagebionetworksRepoModelEntityRef$getInvalidFields()}}
\item \href{#method-OrgSagebionetworksRepoModelEntityRef-print}{\code{OrgSagebionetworksRepoModelEntityRef$print()}}
\item \href{#method-OrgSagebionetworksRepoModelEntityRef-clone}{\code{OrgSagebionetworksRepoModelEntityRef$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelEntityRef-new"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelEntityRef-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new OrgSagebionetworksRepoModelEntityRef class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelEntityRef$new(
  entityId = NULL,
  versionNumber = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{entityId}}{entityId}

\item{\code{versionNumber}}{versionNumber}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelEntityRef-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelEntityRef-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelEntityRef$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
OrgSagebionetworksRepoModelEntityRef in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelEntityRef-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelEntityRef-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of OrgSagebionetworksRepoModelEntityRef
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelEntityRef$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of OrgSagebionetworksRepoModelEntityRef
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelEntityRef-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelEntityRef-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelEntityRef$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
OrgSagebionetworksRepoModelEntityRef in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelEntityRef-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelEntityRef-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of OrgSagebionetworksRepoModelEntityRef
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelEntityRef$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of OrgSagebionetworksRepoModelEntityRef
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelEntityRef-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelEntityRef-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to OrgSagebionetworksRepoModelEntityRef and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelEntityRef$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelEntityRef-toString"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelEntityRef-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelEntityRef$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of OrgSagebionetworksRepoModelEntityRef
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelEntityRef-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelEntityRef-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelEntityRef$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelEntityRef-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelEntityRef-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelEntityRef$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelEntityRef-print"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelEntityRef-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelEntityRef$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelEntityRef-clone"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelEntityRef-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelEntityRef$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
