% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/file_services_api.R
\docType{class}
\name{FileServicesApi}
\alias{FileServicesApi}
\title{FileServices operations}
\format{
An \code{R6Class} generator object
}
\description{
FileServicesApi
}
\details{
Synapse REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: v1
Generated by: https://openapi-generator.tech
}
\section{Methods}{

\describe{
\strong{ deleteFileV1DownloadList } \emph{  }

\itemize{


\item status code : 200 | Void


\item response headers :

\tabular{ll}{
}
}

\strong{ deleteFileV1FileHandleHandleId } \emph{  }

\itemize{
\item \emph{ @param } handle_id character


\item status code : 200 | Void


\item response headers :

\tabular{ll}{
}
}

\strong{ deleteFileV1FileHandleHandleIdFilepreview } \emph{  }

\itemize{
\item \emph{ @param } handle_id character


\item status code : 200 | Void


\item response headers :

\tabular{ll}{
}
}

\strong{ getFileV1DownloadList } \emph{  }

\itemize{
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelFileDownloadList} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelFileDownloadList
\item response headers :

\tabular{ll}{
}
}

\strong{ getFileV1DownloadListAddAsyncGetAsyncToken } \emph{  }

\itemize{
\item \emph{ @param } async_token character
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelFileAddFileToDownloadListResponse} \cr


\item status code : 201 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelFileAddFileToDownloadListResponse
\item response headers :

\tabular{ll}{
}
}

\strong{ getFileV1DownloadOrderOrderId } \emph{  }

\itemize{
\item \emph{ @param } order_id character
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelFileDownloadOrder} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelFileDownloadOrder
\item response headers :

\tabular{ll}{
}
}

\strong{ getFileV1EntityIdUploadDestination } \emph{  }

\itemize{
\item \emph{ @param } id character
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelFileUploadDestination} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelFileUploadDestination
\item response headers :

\tabular{ll}{
}
}

\strong{ getFileV1EntityIdUploadDestinationLocations } \emph{  }

\itemize{
\item \emph{ @param } id character
\item \emph{ @returnType } \link{ListWrapperOfUploadDestinationLocation} \cr


\item status code : 200 | Auto-generated description

\item return type : ListWrapperOfUploadDestinationLocation
\item response headers :

\tabular{ll}{
}
}

\strong{ getFileV1EntityIdUploadDestinationStorageLocationId } \emph{  }

\itemize{
\item \emph{ @param } id character
\item \emph{ @param } storage_location_id numeric
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelFileUploadDestination} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelFileUploadDestination
\item response headers :

\tabular{ll}{
}
}

\strong{ getFileV1FileBulkAsyncGetAsyncToken } \emph{  }

\itemize{
\item \emph{ @param } async_token character
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelFileBulkFileDownloadResponse} \cr


\item status code : 201 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelFileBulkFileDownloadResponse
\item response headers :

\tabular{ll}{
}
}

\strong{ getFileV1FileHandleHandleId } \emph{  }

\itemize{
\item \emph{ @param } handle_id character
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelFileFileHandle} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelFileFileHandle
\item response headers :

\tabular{ll}{
}
}

\strong{ getFileV1FileHandleHandleIdUrl } \emph{  }

\itemize{
\item \emph{ @param } handle_id character
\item \emph{ @param } redirect character
\item \emph{ @returnType } \link{AnyType} \cr


\item status code : 200 | Status 200 will be returned if the 'redirect' boolean param is false

\item return type : AnyType
\item response headers :

\tabular{ll}{
}
\item status code : 307 | Status 307 will be returned if the 'redirect' boolean param is true or null


\item response headers :

\tabular{ll}{
}
}

\strong{ getFileV1FileHandleRestoreAsyncGetAsyncToken } \emph{  }

\itemize{
\item \emph{ @param } async_token character
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelFileFileHandleRestoreResponse} \cr


\item status code : 201 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelFileFileHandleRestoreResponse
\item response headers :

\tabular{ll}{
}
}

\strong{ getFileV1FileId } \emph{  }

\itemize{
\item \emph{ @param } id character
\item \emph{ @param } file_associate_type \link{OrgSagebionetworksRepoModelFileFileHandleAssociateType}
\item \emph{ @param } file_associate_id character
\item \emph{ @param } redirect character
\item \emph{ @returnType } \link{AnyType} \cr


\item status code : 200 | Status 200 will be returned if the 'redirect' boolean param is false

\item return type : AnyType
\item response headers :

\tabular{ll}{
}
\item status code : 307 | Status 307 will be returned if the 'redirect' boolean param is true or null


\item response headers :

\tabular{ll}{
}
}

\strong{ postFileV1DownloadListAdd } \emph{  }

\itemize{
\item \emph{ @param } org_sagebionetworks_repo_model_file_file_handle_association_list \link{OrgSagebionetworksRepoModelFileFileHandleAssociationList}
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelFileDownloadList} \cr


\item status code : 201 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelFileDownloadList
\item response headers :

\tabular{ll}{
}
}

\strong{ postFileV1DownloadListAddAsyncStart } \emph{  }

\itemize{
\item \emph{ @param } org_sagebionetworks_repo_model_file_add_file_to_download_list_request \link{OrgSagebionetworksRepoModelFileAddFileToDownloadListRequest}
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelAsynchAsyncJobId} \cr


\item status code : 201 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelAsynchAsyncJobId
\item response headers :

\tabular{ll}{
}
}

\strong{ postFileV1DownloadListRemove } \emph{  }

\itemize{
\item \emph{ @param } org_sagebionetworks_repo_model_file_file_handle_association_list \link{OrgSagebionetworksRepoModelFileFileHandleAssociationList}
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelFileDownloadList} \cr


\item status code : 201 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelFileDownloadList
\item response headers :

\tabular{ll}{
}
}

\strong{ postFileV1DownloadOrder } \emph{  }

\itemize{
\item \emph{ @param } zip_file_name character
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelFileDownloadOrder} \cr


\item status code : 201 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelFileDownloadOrder
\item response headers :

\tabular{ll}{
}
}

\strong{ postFileV1DownloadOrderHistory } \emph{  }

\itemize{
\item \emph{ @param } org_sagebionetworks_repo_model_file_download_order_summary_request \link{OrgSagebionetworksRepoModelFileDownloadOrderSummaryRequest}
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelFileDownloadOrderSummaryResponse} \cr


\item status code : 201 | A single page of download order summaries.

\item return type : OrgSagebionetworksRepoModelFileDownloadOrderSummaryResponse
\item response headers :

\tabular{ll}{
}
}

\strong{ postFileV1ExternalFileHandle } \emph{  }

\itemize{
\item \emph{ @param } org_sagebionetworks_repo_model_file_external_file_handle_interface \link{OrgSagebionetworksRepoModelFileExternalFileHandleInterface}
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelFileExternalFileHandleInterface} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelFileExternalFileHandleInterface
\item response headers :

\tabular{ll}{
}
}

\strong{ postFileV1ExternalFileHandleGoogleCloud } \emph{  }

\itemize{
\item \emph{ @param } org_sagebionetworks_repo_model_file_google_cloud_file_handle \link{OrgSagebionetworksRepoModelFileGoogleCloudFileHandle}
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelFileGoogleCloudFileHandle} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelFileGoogleCloudFileHandle
\item response headers :

\tabular{ll}{
}
}

\strong{ postFileV1ExternalFileHandleS3 } \emph{  }

\itemize{
\item \emph{ @param } org_sagebionetworks_repo_model_file_s3_file_handle \link{OrgSagebionetworksRepoModelFileS3FileHandle}
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelFileS3FileHandle} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelFileS3FileHandle
\item response headers :

\tabular{ll}{
}
}

\strong{ postFileV1FileBulkAsyncStart } \emph{  }

\itemize{
\item \emph{ @param } org_sagebionetworks_repo_model_file_bulk_file_download_request \link{OrgSagebionetworksRepoModelFileBulkFileDownloadRequest}
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelAsynchAsyncJobId} \cr


\item status code : 201 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelAsynchAsyncJobId
\item response headers :

\tabular{ll}{
}
}

\strong{ postFileV1FileHandleBatch } \emph{  }

\itemize{
\item \emph{ @param } org_sagebionetworks_repo_model_file_batch_file_request \link{OrgSagebionetworksRepoModelFileBatchFileRequest}
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelFileBatchFileResult} \cr


\item status code : 201 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelFileBatchFileResult
\item response headers :

\tabular{ll}{
}
}

\strong{ postFileV1FileHandleHandleIdToCopyFromCopy } \emph{  }

\itemize{
\item \emph{ @param } handle_id_to_copy_from character
\item \emph{ @param } org_sagebionetworks_repo_model_file_s3_file_handle \link{OrgSagebionetworksRepoModelFileS3FileHandle}
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelFileS3FileHandle} \cr


\item status code : 201 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelFileS3FileHandle
\item response headers :

\tabular{ll}{
}
}

\strong{ postFileV1FileHandleRestoreAsyncStart } \emph{  }

\itemize{
\item \emph{ @param } org_sagebionetworks_repo_model_file_file_handle_restore_request \link{OrgSagebionetworksRepoModelFileFileHandleRestoreRequest}
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelAsynchAsyncJobId} \cr


\item status code : 201 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelAsynchAsyncJobId
\item response headers :

\tabular{ll}{
}
}

\strong{ postFileV1FileMultipart } \emph{  }

\itemize{
\item \emph{ @param } org_sagebionetworks_repo_model_file_multipart_request \link{OrgSagebionetworksRepoModelFileMultipartRequest}
\item \emph{ @param } force_restart character
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelFileMultipartUploadStatus} \cr


\item status code : 201 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelFileMultipartUploadStatus
\item response headers :

\tabular{ll}{
}
}

\strong{ postFileV1FileMultipartUploadIdPresignedUrlBatch } \emph{  }

\itemize{
\item \emph{ @param } upload_id character
\item \emph{ @param } org_sagebionetworks_repo_model_file_batch_presigned_upload_url_request \link{OrgSagebionetworksRepoModelFileBatchPresignedUploadUrlRequest}
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelFileBatchPresignedUploadUrlResponse} \cr


\item status code : 201 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelFileBatchPresignedUploadUrlResponse
\item response headers :

\tabular{ll}{
}
}

\strong{ postFileV1FilehandlesCopy } \emph{  }

\itemize{
\item \emph{ @param } org_sagebionetworks_repo_model_file_batch_file_handle_copy_request \link{OrgSagebionetworksRepoModelFileBatchFileHandleCopyRequest}
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelFileBatchFileHandleCopyResult} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelFileBatchFileHandleCopyResult
\item response headers :

\tabular{ll}{
}
}

\strong{ putFileV1FileMultipartUploadIdAddPartNumber } \emph{  }

\itemize{
\item \emph{ @param } upload_id character
\item \emph{ @param } part_number integer
\item \emph{ @param } part_md5_hex character
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelFileAddPartResponse} \cr


\item status code : 201 | The response will indicate if add succeeded or failed. When an          add fails, the response will include an error message.

\item return type : OrgSagebionetworksRepoModelFileAddPartResponse
\item response headers :

\tabular{ll}{
}
}

\strong{ putFileV1FileMultipartUploadIdComplete } \emph{  }

\itemize{
\item \emph{ @param } upload_id character
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelFileMultipartUploadStatus} \cr


\item status code : 201 | If successful, the response will include the ID of the new file          handle.

\item return type : OrgSagebionetworksRepoModelFileMultipartUploadStatus
\item response headers :

\tabular{ll}{
}
}

}
}

\examples{
\dontrun{
####################  deleteFileV1DownloadList  ####################

library(synr)

api_instance <- FileServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

api_instance$deleteFileV1DownloadList()


####################  deleteFileV1FileHandleHandleId  ####################

library(synr)
var_handle_id <- "handle_id_example" # character | 

api_instance <- FileServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

api_instance$deleteFileV1FileHandleHandleId(var_handle_id)


####################  deleteFileV1FileHandleHandleIdFilepreview  ####################

library(synr)
var_handle_id <- "handle_id_example" # character | The ID of the FileHandle whose preview should be cleared.

api_instance <- FileServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

api_instance$deleteFileV1FileHandleHandleIdFilepreview(var_handle_id)


####################  getFileV1DownloadList  ####################

library(synr)

api_instance <- FileServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getFileV1DownloadList(data_file = "result.txt")
result <- api_instance$getFileV1DownloadList()
dput(result)


####################  getFileV1DownloadListAddAsyncGetAsyncToken  ####################

library(synr)
var_async_token <- "async_token_example" # character | 

api_instance <- FileServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getFileV1DownloadListAddAsyncGetAsyncToken(var_async_tokendata_file = "result.txt")
result <- api_instance$getFileV1DownloadListAddAsyncGetAsyncToken(var_async_token)
dput(result)


####################  getFileV1DownloadOrderOrderId  ####################

library(synr)
var_order_id <- "order_id_example" # character | The ID of the download order to fetch.

api_instance <- FileServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getFileV1DownloadOrderOrderId(var_order_iddata_file = "result.txt")
result <- api_instance$getFileV1DownloadOrderOrderId(var_order_id)
dput(result)


####################  getFileV1EntityIdUploadDestination  ####################

library(synr)
var_id <- "id_example" # character | 

api_instance <- FileServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getFileV1EntityIdUploadDestination(var_iddata_file = "result.txt")
result <- api_instance$getFileV1EntityIdUploadDestination(var_id)
dput(result)


####################  getFileV1EntityIdUploadDestinationLocations  ####################

library(synr)
var_id <- "id_example" # character | 

api_instance <- FileServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getFileV1EntityIdUploadDestinationLocations(var_iddata_file = "result.txt")
result <- api_instance$getFileV1EntityIdUploadDestinationLocations(var_id)
dput(result)


####################  getFileV1EntityIdUploadDestinationStorageLocationId  ####################

library(synr)
var_id <- "id_example" # character | 
var_storage_location_id <- 3.4 # numeric | 

api_instance <- FileServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getFileV1EntityIdUploadDestinationStorageLocationId(var_id, var_storage_location_iddata_file = "result.txt")
result <- api_instance$getFileV1EntityIdUploadDestinationStorageLocationId(var_id, var_storage_location_id)
dput(result)


####################  getFileV1FileBulkAsyncGetAsyncToken  ####################

library(synr)
var_async_token <- "async_token_example" # character | 

api_instance <- FileServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getFileV1FileBulkAsyncGetAsyncToken(var_async_tokendata_file = "result.txt")
result <- api_instance$getFileV1FileBulkAsyncGetAsyncToken(var_async_token)
dput(result)


####################  getFileV1FileHandleHandleId  ####################

library(synr)
var_handle_id <- "handle_id_example" # character | The ID of the FileHandle to fetch.

api_instance <- FileServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getFileV1FileHandleHandleId(var_handle_iddata_file = "result.txt")
result <- api_instance$getFileV1FileHandleHandleId(var_handle_id)
dput(result)


####################  getFileV1FileHandleHandleIdUrl  ####################

library(synr)
var_handle_id <- "handle_id_example" # character | 
var_redirect <- "redirect_example" # character | When set to false, the URL will be returned as text/plain             instead of redirecting. (Optional)

api_instance <- FileServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getFileV1FileHandleHandleIdUrl(var_handle_id, redirect = var_redirectdata_file = "result.txt")
result <- api_instance$getFileV1FileHandleHandleIdUrl(var_handle_id, redirect = var_redirect)
dput(result)


####################  getFileV1FileHandleRestoreAsyncGetAsyncToken  ####################

library(synr)
var_async_token <- "async_token_example" # character | 

api_instance <- FileServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getFileV1FileHandleRestoreAsyncGetAsyncToken(var_async_tokendata_file = "result.txt")
result <- api_instance$getFileV1FileHandleRestoreAsyncGetAsyncToken(var_async_token)
dput(result)


####################  getFileV1FileId  ####################

library(synr)
var_id <- "id_example" # character | the ID of the file handle to be downloaded
var_file_associate_type <- org.sagebionetworks.repo.model.file.FileHandleAssociateType$new() # OrgSagebionetworksRepoModelFileFileHandleAssociateType | the type of object with which the file is associated
var_file_associate_id <- "file_associate_id_example" # character | the ID fo the object with which the file is associated
var_redirect <- "redirect_example" # character | When set to false, the URL will be returned as text/plain             instead of redirecting. (Optional)

api_instance <- FileServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getFileV1FileId(var_id, var_file_associate_type, var_file_associate_id, redirect = var_redirectdata_file = "result.txt")
result <- api_instance$getFileV1FileId(var_id, var_file_associate_type, var_file_associate_id, redirect = var_redirect)
dput(result)


####################  postFileV1DownloadListAdd  ####################

library(synr)
var_org_sagebionetworks_repo_model_file_file_handle_association_list <- org.sagebionetworks.repo.model.file.FileHandleAssociationList$new(c(org.sagebionetworks.repo.model.file.FileHandleAssociation$new("fileHandleId_example", "associateObjectId_example", "associateObjectType_example"))) # OrgSagebionetworksRepoModelFileFileHandleAssociationList | 

api_instance <- FileServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$postFileV1DownloadListAdd(var_org_sagebionetworks_repo_model_file_file_handle_association_listdata_file = "result.txt")
result <- api_instance$postFileV1DownloadListAdd(var_org_sagebionetworks_repo_model_file_file_handle_association_list)
dput(result)


####################  postFileV1DownloadListAddAsyncStart  ####################

library(synr)
var_org_sagebionetworks_repo_model_file_add_file_to_download_list_request <- org.sagebionetworks.repo.model.file.AddFileToDownloadListRequest$new("org.sagebionetworks.repo.model.file.AddFileToDownloadListRequest", "folderId_example", org.sagebionetworks.repo.model.table.Query$new("sql_example", c(org.sagebionetworks.repo.model.table.QueryFilter$new("concreteType_example", "isDefiningCondition_example", c("values_example"), "columnName_example", "function_example", "operator_example", "searchExpression_example")), c(org.sagebionetworks.repo.model.table.FacetColumnRequest$new("concreteType_example", "columnName_example", "jsonPath_example", c("facetValues_example"), "min_example", "max_example")), "includeEntityEtag_example", 123, 123, 123, c(org.sagebionetworks.repo.model.table.SortItem$new("column_example", "direction_example")))) # OrgSagebionetworksRepoModelFileAddFileToDownloadListRequest | 

api_instance <- FileServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$postFileV1DownloadListAddAsyncStart(var_org_sagebionetworks_repo_model_file_add_file_to_download_list_requestdata_file = "result.txt")
result <- api_instance$postFileV1DownloadListAddAsyncStart(var_org_sagebionetworks_repo_model_file_add_file_to_download_list_request)
dput(result)


####################  postFileV1DownloadListRemove  ####################

library(synr)
var_org_sagebionetworks_repo_model_file_file_handle_association_list <- org.sagebionetworks.repo.model.file.FileHandleAssociationList$new(c(org.sagebionetworks.repo.model.file.FileHandleAssociation$new("fileHandleId_example", "associateObjectId_example", "associateObjectType_example"))) # OrgSagebionetworksRepoModelFileFileHandleAssociationList | 

api_instance <- FileServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$postFileV1DownloadListRemove(var_org_sagebionetworks_repo_model_file_file_handle_association_listdata_file = "result.txt")
result <- api_instance$postFileV1DownloadListRemove(var_org_sagebionetworks_repo_model_file_file_handle_association_list)
dput(result)


####################  postFileV1DownloadOrder  ####################

library(synr)
var_zip_file_name <- "zip_file_name_example" # character | The name to given to the resulting zip file.

api_instance <- FileServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$postFileV1DownloadOrder(var_zip_file_namedata_file = "result.txt")
result <- api_instance$postFileV1DownloadOrder(var_zip_file_name)
dput(result)


####################  postFileV1DownloadOrderHistory  ####################

library(synr)
var_org_sagebionetworks_repo_model_file_download_order_summary_request <- org.sagebionetworks.repo.model.file.DownloadOrderSummaryRequest$new("nextPageToken_example") # OrgSagebionetworksRepoModelFileDownloadOrderSummaryRequest | 

api_instance <- FileServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$postFileV1DownloadOrderHistory(var_org_sagebionetworks_repo_model_file_download_order_summary_requestdata_file = "result.txt")
result <- api_instance$postFileV1DownloadOrderHistory(var_org_sagebionetworks_repo_model_file_download_order_summary_request)
dput(result)


####################  postFileV1ExternalFileHandle  ####################

library(synr)
var_org_sagebionetworks_repo_model_file_external_file_handle_interface <- org.sagebionetworks.repo.model.file.ExternalFileHandleInterface$new("concreteType_example", "fileKey_example", "id_example", "etag_example", "createdBy_example", "createdOn_example", "modifiedOn_example", "contentType_example", "contentMd5_example", "fileName_example", 123, 123, "status_example", "endpointUrl_example", "bucket_example", "filePath_example", "externalURL_example") # OrgSagebionetworksRepoModelFileExternalFileHandleInterface | 

api_instance <- FileServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$postFileV1ExternalFileHandle(var_org_sagebionetworks_repo_model_file_external_file_handle_interfacedata_file = "result.txt")
result <- api_instance$postFileV1ExternalFileHandle(var_org_sagebionetworks_repo_model_file_external_file_handle_interface)
dput(result)


####################  postFileV1ExternalFileHandleGoogleCloud  ####################

library(synr)
var_org_sagebionetworks_repo_model_file_google_cloud_file_handle <- org.sagebionetworks.repo.model.file.GoogleCloudFileHandle$new("org.sagebionetworks.repo.model.file.GoogleCloudFileHandle", "id_example", "etag_example", "createdBy_example", "createdOn_example", "modifiedOn_example", "contentType_example", "contentMd5_example", "fileName_example", 123, 123, "status_example", "bucketName_example", "key_example", "previewId_example", "isPreview_example") # OrgSagebionetworksRepoModelFileGoogleCloudFileHandle | 

api_instance <- FileServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$postFileV1ExternalFileHandleGoogleCloud(var_org_sagebionetworks_repo_model_file_google_cloud_file_handledata_file = "result.txt")
result <- api_instance$postFileV1ExternalFileHandleGoogleCloud(var_org_sagebionetworks_repo_model_file_google_cloud_file_handle)
dput(result)


####################  postFileV1ExternalFileHandleS3  ####################

library(synr)
var_org_sagebionetworks_repo_model_file_s3_file_handle <- org.sagebionetworks.repo.model.file.S3FileHandle$new("org.sagebionetworks.repo.model.file.S3FileHandle", "id_example", "etag_example", "createdBy_example", "createdOn_example", "modifiedOn_example", "contentType_example", "contentMd5_example", "fileName_example", 123, 123, "status_example", "bucketName_example", "key_example", "previewId_example", "isPreview_example") # OrgSagebionetworksRepoModelFileS3FileHandle | 

api_instance <- FileServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$postFileV1ExternalFileHandleS3(var_org_sagebionetworks_repo_model_file_s3_file_handledata_file = "result.txt")
result <- api_instance$postFileV1ExternalFileHandleS3(var_org_sagebionetworks_repo_model_file_s3_file_handle)
dput(result)


####################  postFileV1FileBulkAsyncStart  ####################

library(synr)
var_org_sagebionetworks_repo_model_file_bulk_file_download_request <- org.sagebionetworks.repo.model.file.BulkFileDownloadRequest$new("org.sagebionetworks.repo.model.file.BulkFileDownloadRequest", c(org.sagebionetworks.repo.model.file.FileHandleAssociation$new("fileHandleId_example", "associateObjectId_example", "associateObjectType_example")), "zipFileName_example", "zipFileFormat_example") # OrgSagebionetworksRepoModelFileBulkFileDownloadRequest | 

api_instance <- FileServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$postFileV1FileBulkAsyncStart(var_org_sagebionetworks_repo_model_file_bulk_file_download_requestdata_file = "result.txt")
result <- api_instance$postFileV1FileBulkAsyncStart(var_org_sagebionetworks_repo_model_file_bulk_file_download_request)
dput(result)


####################  postFileV1FileHandleBatch  ####################

library(synr)
var_org_sagebionetworks_repo_model_file_batch_file_request <- org.sagebionetworks.repo.model.file.BatchFileRequest$new(c(org.sagebionetworks.repo.model.file.FileHandleAssociation$new("fileHandleId_example", "associateObjectId_example", "associateObjectType_example")), "includePreSignedURLs_example", "includeFileHandles_example", "includePreviewPreSignedURLs_example") # OrgSagebionetworksRepoModelFileBatchFileRequest | 

api_instance <- FileServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$postFileV1FileHandleBatch(var_org_sagebionetworks_repo_model_file_batch_file_requestdata_file = "result.txt")
result <- api_instance$postFileV1FileHandleBatch(var_org_sagebionetworks_repo_model_file_batch_file_request)
dput(result)


####################  postFileV1FileHandleHandleIdToCopyFromCopy  ####################

library(synr)
var_handle_id_to_copy_from <- "handle_id_to_copy_from_example" # character | the file handle it from which to duplicate the data
var_org_sagebionetworks_repo_model_file_s3_file_handle <- org.sagebionetworks.repo.model.file.S3FileHandle$new("org.sagebionetworks.repo.model.file.S3FileHandle", "id_example", "etag_example", "createdBy_example", "createdOn_example", "modifiedOn_example", "contentType_example", "contentMd5_example", "fileName_example", 123, 123, "status_example", "bucketName_example", "key_example", "previewId_example", "isPreview_example") # OrgSagebionetworksRepoModelFileS3FileHandle | 

api_instance <- FileServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$postFileV1FileHandleHandleIdToCopyFromCopy(var_handle_id_to_copy_from, var_org_sagebionetworks_repo_model_file_s3_file_handledata_file = "result.txt")
result <- api_instance$postFileV1FileHandleHandleIdToCopyFromCopy(var_handle_id_to_copy_from, var_org_sagebionetworks_repo_model_file_s3_file_handle)
dput(result)


####################  postFileV1FileHandleRestoreAsyncStart  ####################

library(synr)
var_org_sagebionetworks_repo_model_file_file_handle_restore_request <- org.sagebionetworks.repo.model.file.FileHandleRestoreRequest$new("org.sagebionetworks.repo.model.file.FileHandleRestoreRequest", c("fileHandleIds_example")) # OrgSagebionetworksRepoModelFileFileHandleRestoreRequest | 

api_instance <- FileServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$postFileV1FileHandleRestoreAsyncStart(var_org_sagebionetworks_repo_model_file_file_handle_restore_requestdata_file = "result.txt")
result <- api_instance$postFileV1FileHandleRestoreAsyncStart(var_org_sagebionetworks_repo_model_file_file_handle_restore_request)
dput(result)


####################  postFileV1FileMultipart  ####################

library(synr)
var_org_sagebionetworks_repo_model_file_multipart_request <- org.sagebionetworks.repo.model.file.MultipartRequest$new("concreteType_example", 123, "fileName_example", 123, "generatePreview_example", org.sagebionetworks.repo.model.file.FileHandleAssociation$new("fileHandleId_example", "associateObjectId_example", "associateObjectType_example"), "contentMD5Hex_example", "contentType_example", 123) # OrgSagebionetworksRepoModelFileMultipartRequest | 
var_force_restart <- "force_restart_example" # character | Optional parameter. When 'forceRestart=true' is included, any             upload state for the given file will be cleared and a new             upload will be started. (Optional)

api_instance <- FileServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$postFileV1FileMultipart(var_org_sagebionetworks_repo_model_file_multipart_request, force_restart = var_force_restartdata_file = "result.txt")
result <- api_instance$postFileV1FileMultipart(var_org_sagebionetworks_repo_model_file_multipart_request, force_restart = var_force_restart)
dput(result)


####################  postFileV1FileMultipartUploadIdPresignedUrlBatch  ####################

library(synr)
var_upload_id <- "upload_id_example" # character | The unique identifier of the file upload.
var_org_sagebionetworks_repo_model_file_batch_presigned_upload_url_request <- org.sagebionetworks.repo.model.file.BatchPresignedUploadUrlRequest$new("uploadId_example", c(123), "contentType_example") # OrgSagebionetworksRepoModelFileBatchPresignedUploadUrlRequest | 

api_instance <- FileServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$postFileV1FileMultipartUploadIdPresignedUrlBatch(var_upload_id, var_org_sagebionetworks_repo_model_file_batch_presigned_upload_url_requestdata_file = "result.txt")
result <- api_instance$postFileV1FileMultipartUploadIdPresignedUrlBatch(var_upload_id, var_org_sagebionetworks_repo_model_file_batch_presigned_upload_url_request)
dput(result)


####################  postFileV1FilehandlesCopy  ####################

library(synr)
var_org_sagebionetworks_repo_model_file_batch_file_handle_copy_request <- org.sagebionetworks.repo.model.file.BatchFileHandleCopyRequest$new(c(org.sagebionetworks.repo.model.file.FileHandleCopyRequest$new(org.sagebionetworks.repo.model.file.FileHandleAssociation$new("fileHandleId_example", "associateObjectId_example", "associateObjectType_example"), "newFileName_example", "newContentType_example"))) # OrgSagebionetworksRepoModelFileBatchFileHandleCopyRequest | 

api_instance <- FileServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$postFileV1FilehandlesCopy(var_org_sagebionetworks_repo_model_file_batch_file_handle_copy_requestdata_file = "result.txt")
result <- api_instance$postFileV1FilehandlesCopy(var_org_sagebionetworks_repo_model_file_batch_file_handle_copy_request)
dput(result)


####################  putFileV1FileMultipartUploadIdAddPartNumber  ####################

library(synr)
var_upload_id <- "upload_id_example" # character | The unique identifier of the file upload.
var_part_number <- 56 # integer | The part number to add. Must be a number between 1 and 10,000.
var_part_md5_hex <- "part_md5_hex_example" # character | The MD5 of the uploaded part represented as a hexadecimal             string. If the provided MD5 does not match the MD5 of the             uploaded part, the add will fail.

api_instance <- FileServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$putFileV1FileMultipartUploadIdAddPartNumber(var_upload_id, var_part_number, var_part_md5_hexdata_file = "result.txt")
result <- api_instance$putFileV1FileMultipartUploadIdAddPartNumber(var_upload_id, var_part_number, var_part_md5_hex)
dput(result)


####################  putFileV1FileMultipartUploadIdComplete  ####################

library(synr)
var_upload_id <- "upload_id_example" # character | The unique identifier of the file upload.

api_instance <- FileServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$putFileV1FileMultipartUploadIdComplete(var_upload_iddata_file = "result.txt")
result <- api_instance$putFileV1FileMultipartUploadIdComplete(var_upload_id)
dput(result)


}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{api_client}}{Handles the client-server communication.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-FileServicesApi-new}{\code{FileServicesApi$new()}}
\item \href{#method-FileServicesApi-deleteFileV1DownloadList}{\code{FileServicesApi$deleteFileV1DownloadList()}}
\item \href{#method-FileServicesApi-deleteFileV1DownloadListWithHttpInfo}{\code{FileServicesApi$deleteFileV1DownloadListWithHttpInfo()}}
\item \href{#method-FileServicesApi-deleteFileV1FileHandleHandleId}{\code{FileServicesApi$deleteFileV1FileHandleHandleId()}}
\item \href{#method-FileServicesApi-deleteFileV1FileHandleHandleIdWithHttpInfo}{\code{FileServicesApi$deleteFileV1FileHandleHandleIdWithHttpInfo()}}
\item \href{#method-FileServicesApi-deleteFileV1FileHandleHandleIdFilepreview}{\code{FileServicesApi$deleteFileV1FileHandleHandleIdFilepreview()}}
\item \href{#method-FileServicesApi-deleteFileV1FileHandleHandleIdFilepreviewWithHttpInfo}{\code{FileServicesApi$deleteFileV1FileHandleHandleIdFilepreviewWithHttpInfo()}}
\item \href{#method-FileServicesApi-getFileV1DownloadList}{\code{FileServicesApi$getFileV1DownloadList()}}
\item \href{#method-FileServicesApi-getFileV1DownloadListWithHttpInfo}{\code{FileServicesApi$getFileV1DownloadListWithHttpInfo()}}
\item \href{#method-FileServicesApi-getFileV1DownloadListAddAsyncGetAsyncToken}{\code{FileServicesApi$getFileV1DownloadListAddAsyncGetAsyncToken()}}
\item \href{#method-FileServicesApi-getFileV1DownloadListAddAsyncGetAsyncTokenWithHttpInfo}{\code{FileServicesApi$getFileV1DownloadListAddAsyncGetAsyncTokenWithHttpInfo()}}
\item \href{#method-FileServicesApi-getFileV1DownloadOrderOrderId}{\code{FileServicesApi$getFileV1DownloadOrderOrderId()}}
\item \href{#method-FileServicesApi-getFileV1DownloadOrderOrderIdWithHttpInfo}{\code{FileServicesApi$getFileV1DownloadOrderOrderIdWithHttpInfo()}}
\item \href{#method-FileServicesApi-getFileV1EntityIdUploadDestination}{\code{FileServicesApi$getFileV1EntityIdUploadDestination()}}
\item \href{#method-FileServicesApi-getFileV1EntityIdUploadDestinationWithHttpInfo}{\code{FileServicesApi$getFileV1EntityIdUploadDestinationWithHttpInfo()}}
\item \href{#method-FileServicesApi-getFileV1EntityIdUploadDestinationLocations}{\code{FileServicesApi$getFileV1EntityIdUploadDestinationLocations()}}
\item \href{#method-FileServicesApi-getFileV1EntityIdUploadDestinationLocationsWithHttpInfo}{\code{FileServicesApi$getFileV1EntityIdUploadDestinationLocationsWithHttpInfo()}}
\item \href{#method-FileServicesApi-getFileV1EntityIdUploadDestinationStorageLocationId}{\code{FileServicesApi$getFileV1EntityIdUploadDestinationStorageLocationId()}}
\item \href{#method-FileServicesApi-getFileV1EntityIdUploadDestinationStorageLocationIdWithHttpInfo}{\code{FileServicesApi$getFileV1EntityIdUploadDestinationStorageLocationIdWithHttpInfo()}}
\item \href{#method-FileServicesApi-getFileV1FileBulkAsyncGetAsyncToken}{\code{FileServicesApi$getFileV1FileBulkAsyncGetAsyncToken()}}
\item \href{#method-FileServicesApi-getFileV1FileBulkAsyncGetAsyncTokenWithHttpInfo}{\code{FileServicesApi$getFileV1FileBulkAsyncGetAsyncTokenWithHttpInfo()}}
\item \href{#method-FileServicesApi-getFileV1FileHandleHandleId}{\code{FileServicesApi$getFileV1FileHandleHandleId()}}
\item \href{#method-FileServicesApi-getFileV1FileHandleHandleIdWithHttpInfo}{\code{FileServicesApi$getFileV1FileHandleHandleIdWithHttpInfo()}}
\item \href{#method-FileServicesApi-getFileV1FileHandleHandleIdUrl}{\code{FileServicesApi$getFileV1FileHandleHandleIdUrl()}}
\item \href{#method-FileServicesApi-getFileV1FileHandleHandleIdUrlWithHttpInfo}{\code{FileServicesApi$getFileV1FileHandleHandleIdUrlWithHttpInfo()}}
\item \href{#method-FileServicesApi-getFileV1FileHandleRestoreAsyncGetAsyncToken}{\code{FileServicesApi$getFileV1FileHandleRestoreAsyncGetAsyncToken()}}
\item \href{#method-FileServicesApi-getFileV1FileHandleRestoreAsyncGetAsyncTokenWithHttpInfo}{\code{FileServicesApi$getFileV1FileHandleRestoreAsyncGetAsyncTokenWithHttpInfo()}}
\item \href{#method-FileServicesApi-getFileV1FileId}{\code{FileServicesApi$getFileV1FileId()}}
\item \href{#method-FileServicesApi-getFileV1FileIdWithHttpInfo}{\code{FileServicesApi$getFileV1FileIdWithHttpInfo()}}
\item \href{#method-FileServicesApi-postFileV1DownloadListAdd}{\code{FileServicesApi$postFileV1DownloadListAdd()}}
\item \href{#method-FileServicesApi-postFileV1DownloadListAddWithHttpInfo}{\code{FileServicesApi$postFileV1DownloadListAddWithHttpInfo()}}
\item \href{#method-FileServicesApi-postFileV1DownloadListAddAsyncStart}{\code{FileServicesApi$postFileV1DownloadListAddAsyncStart()}}
\item \href{#method-FileServicesApi-postFileV1DownloadListAddAsyncStartWithHttpInfo}{\code{FileServicesApi$postFileV1DownloadListAddAsyncStartWithHttpInfo()}}
\item \href{#method-FileServicesApi-postFileV1DownloadListRemove}{\code{FileServicesApi$postFileV1DownloadListRemove()}}
\item \href{#method-FileServicesApi-postFileV1DownloadListRemoveWithHttpInfo}{\code{FileServicesApi$postFileV1DownloadListRemoveWithHttpInfo()}}
\item \href{#method-FileServicesApi-postFileV1DownloadOrder}{\code{FileServicesApi$postFileV1DownloadOrder()}}
\item \href{#method-FileServicesApi-postFileV1DownloadOrderWithHttpInfo}{\code{FileServicesApi$postFileV1DownloadOrderWithHttpInfo()}}
\item \href{#method-FileServicesApi-postFileV1DownloadOrderHistory}{\code{FileServicesApi$postFileV1DownloadOrderHistory()}}
\item \href{#method-FileServicesApi-postFileV1DownloadOrderHistoryWithHttpInfo}{\code{FileServicesApi$postFileV1DownloadOrderHistoryWithHttpInfo()}}
\item \href{#method-FileServicesApi-postFileV1ExternalFileHandle}{\code{FileServicesApi$postFileV1ExternalFileHandle()}}
\item \href{#method-FileServicesApi-postFileV1ExternalFileHandleWithHttpInfo}{\code{FileServicesApi$postFileV1ExternalFileHandleWithHttpInfo()}}
\item \href{#method-FileServicesApi-postFileV1ExternalFileHandleGoogleCloud}{\code{FileServicesApi$postFileV1ExternalFileHandleGoogleCloud()}}
\item \href{#method-FileServicesApi-postFileV1ExternalFileHandleGoogleCloudWithHttpInfo}{\code{FileServicesApi$postFileV1ExternalFileHandleGoogleCloudWithHttpInfo()}}
\item \href{#method-FileServicesApi-postFileV1ExternalFileHandleS3}{\code{FileServicesApi$postFileV1ExternalFileHandleS3()}}
\item \href{#method-FileServicesApi-postFileV1ExternalFileHandleS3WithHttpInfo}{\code{FileServicesApi$postFileV1ExternalFileHandleS3WithHttpInfo()}}
\item \href{#method-FileServicesApi-postFileV1FileBulkAsyncStart}{\code{FileServicesApi$postFileV1FileBulkAsyncStart()}}
\item \href{#method-FileServicesApi-postFileV1FileBulkAsyncStartWithHttpInfo}{\code{FileServicesApi$postFileV1FileBulkAsyncStartWithHttpInfo()}}
\item \href{#method-FileServicesApi-postFileV1FileHandleBatch}{\code{FileServicesApi$postFileV1FileHandleBatch()}}
\item \href{#method-FileServicesApi-postFileV1FileHandleBatchWithHttpInfo}{\code{FileServicesApi$postFileV1FileHandleBatchWithHttpInfo()}}
\item \href{#method-FileServicesApi-postFileV1FileHandleHandleIdToCopyFromCopy}{\code{FileServicesApi$postFileV1FileHandleHandleIdToCopyFromCopy()}}
\item \href{#method-FileServicesApi-postFileV1FileHandleHandleIdToCopyFromCopyWithHttpInfo}{\code{FileServicesApi$postFileV1FileHandleHandleIdToCopyFromCopyWithHttpInfo()}}
\item \href{#method-FileServicesApi-postFileV1FileHandleRestoreAsyncStart}{\code{FileServicesApi$postFileV1FileHandleRestoreAsyncStart()}}
\item \href{#method-FileServicesApi-postFileV1FileHandleRestoreAsyncStartWithHttpInfo}{\code{FileServicesApi$postFileV1FileHandleRestoreAsyncStartWithHttpInfo()}}
\item \href{#method-FileServicesApi-postFileV1FileMultipart}{\code{FileServicesApi$postFileV1FileMultipart()}}
\item \href{#method-FileServicesApi-postFileV1FileMultipartWithHttpInfo}{\code{FileServicesApi$postFileV1FileMultipartWithHttpInfo()}}
\item \href{#method-FileServicesApi-postFileV1FileMultipartUploadIdPresignedUrlBatch}{\code{FileServicesApi$postFileV1FileMultipartUploadIdPresignedUrlBatch()}}
\item \href{#method-FileServicesApi-postFileV1FileMultipartUploadIdPresignedUrlBatchWithHttpInfo}{\code{FileServicesApi$postFileV1FileMultipartUploadIdPresignedUrlBatchWithHttpInfo()}}
\item \href{#method-FileServicesApi-postFileV1FilehandlesCopy}{\code{FileServicesApi$postFileV1FilehandlesCopy()}}
\item \href{#method-FileServicesApi-postFileV1FilehandlesCopyWithHttpInfo}{\code{FileServicesApi$postFileV1FilehandlesCopyWithHttpInfo()}}
\item \href{#method-FileServicesApi-putFileV1FileMultipartUploadIdAddPartNumber}{\code{FileServicesApi$putFileV1FileMultipartUploadIdAddPartNumber()}}
\item \href{#method-FileServicesApi-putFileV1FileMultipartUploadIdAddPartNumberWithHttpInfo}{\code{FileServicesApi$putFileV1FileMultipartUploadIdAddPartNumberWithHttpInfo()}}
\item \href{#method-FileServicesApi-putFileV1FileMultipartUploadIdComplete}{\code{FileServicesApi$putFileV1FileMultipartUploadIdComplete()}}
\item \href{#method-FileServicesApi-putFileV1FileMultipartUploadIdCompleteWithHttpInfo}{\code{FileServicesApi$putFileV1FileMultipartUploadIdCompleteWithHttpInfo()}}
\item \href{#method-FileServicesApi-clone}{\code{FileServicesApi$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FileServicesApi-new"></a>}}
\if{latex}{\out{\hypertarget{method-FileServicesApi-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new FileServicesApi.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FileServicesApi$new(api_client)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{api_client}}{An instance of API client.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FileServicesApi-deleteFileV1DownloadList"></a>}}
\if{latex}{\out{\hypertarget{method-FileServicesApi-deleteFileV1DownloadList}{}}}
\subsection{Method \code{deleteFileV1DownloadList()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FileServicesApi$deleteFileV1DownloadList(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
void
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FileServicesApi-deleteFileV1DownloadListWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-FileServicesApi-deleteFileV1DownloadListWithHttpInfo}{}}}
\subsection{Method \code{deleteFileV1DownloadListWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FileServicesApi$deleteFileV1DownloadListWithHttpInfo(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (void) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FileServicesApi-deleteFileV1FileHandleHandleId"></a>}}
\if{latex}{\out{\hypertarget{method-FileServicesApi-deleteFileV1FileHandleHandleId}{}}}
\subsection{Method \code{deleteFileV1FileHandleHandleId()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FileServicesApi$deleteFileV1FileHandleHandleId(handle_id, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{handle_id}}{}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
void
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FileServicesApi-deleteFileV1FileHandleHandleIdWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-FileServicesApi-deleteFileV1FileHandleHandleIdWithHttpInfo}{}}}
\subsection{Method \code{deleteFileV1FileHandleHandleIdWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FileServicesApi$deleteFileV1FileHandleHandleIdWithHttpInfo(handle_id, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{handle_id}}{}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (void) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FileServicesApi-deleteFileV1FileHandleHandleIdFilepreview"></a>}}
\if{latex}{\out{\hypertarget{method-FileServicesApi-deleteFileV1FileHandleHandleIdFilepreview}{}}}
\subsection{Method \code{deleteFileV1FileHandleHandleIdFilepreview()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FileServicesApi$deleteFileV1FileHandleHandleIdFilepreview(handle_id, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{handle_id}}{The ID of the FileHandle whose preview should be cleared.}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
void
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FileServicesApi-deleteFileV1FileHandleHandleIdFilepreviewWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-FileServicesApi-deleteFileV1FileHandleHandleIdFilepreviewWithHttpInfo}{}}}
\subsection{Method \code{deleteFileV1FileHandleHandleIdFilepreviewWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FileServicesApi$deleteFileV1FileHandleHandleIdFilepreviewWithHttpInfo(
  handle_id,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{handle_id}}{The ID of the FileHandle whose preview should be cleared.}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (void) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FileServicesApi-getFileV1DownloadList"></a>}}
\if{latex}{\out{\hypertarget{method-FileServicesApi-getFileV1DownloadList}{}}}
\subsection{Method \code{getFileV1DownloadList()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FileServicesApi$getFileV1DownloadList(data_file = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelFileDownloadList
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FileServicesApi-getFileV1DownloadListWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-FileServicesApi-getFileV1DownloadListWithHttpInfo}{}}}
\subsection{Method \code{getFileV1DownloadListWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FileServicesApi$getFileV1DownloadListWithHttpInfo(data_file = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelFileDownloadList) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FileServicesApi-getFileV1DownloadListAddAsyncGetAsyncToken"></a>}}
\if{latex}{\out{\hypertarget{method-FileServicesApi-getFileV1DownloadListAddAsyncGetAsyncToken}{}}}
\subsection{Method \code{getFileV1DownloadListAddAsyncGetAsyncToken()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FileServicesApi$getFileV1DownloadListAddAsyncGetAsyncToken(
  async_token,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{async_token}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelFileAddFileToDownloadListResponse
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FileServicesApi-getFileV1DownloadListAddAsyncGetAsyncTokenWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-FileServicesApi-getFileV1DownloadListAddAsyncGetAsyncTokenWithHttpInfo}{}}}
\subsection{Method \code{getFileV1DownloadListAddAsyncGetAsyncTokenWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FileServicesApi$getFileV1DownloadListAddAsyncGetAsyncTokenWithHttpInfo(
  async_token,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{async_token}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelFileAddFileToDownloadListResponse) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FileServicesApi-getFileV1DownloadOrderOrderId"></a>}}
\if{latex}{\out{\hypertarget{method-FileServicesApi-getFileV1DownloadOrderOrderId}{}}}
\subsection{Method \code{getFileV1DownloadOrderOrderId()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FileServicesApi$getFileV1DownloadOrderOrderId(order_id, data_file = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{order_id}}{The ID of the download order to fetch.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelFileDownloadOrder
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FileServicesApi-getFileV1DownloadOrderOrderIdWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-FileServicesApi-getFileV1DownloadOrderOrderIdWithHttpInfo}{}}}
\subsection{Method \code{getFileV1DownloadOrderOrderIdWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FileServicesApi$getFileV1DownloadOrderOrderIdWithHttpInfo(
  order_id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{order_id}}{The ID of the download order to fetch.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelFileDownloadOrder) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FileServicesApi-getFileV1EntityIdUploadDestination"></a>}}
\if{latex}{\out{\hypertarget{method-FileServicesApi-getFileV1EntityIdUploadDestination}{}}}
\subsection{Method \code{getFileV1EntityIdUploadDestination()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FileServicesApi$getFileV1EntityIdUploadDestination(id, data_file = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelFileUploadDestination
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FileServicesApi-getFileV1EntityIdUploadDestinationWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-FileServicesApi-getFileV1EntityIdUploadDestinationWithHttpInfo}{}}}
\subsection{Method \code{getFileV1EntityIdUploadDestinationWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FileServicesApi$getFileV1EntityIdUploadDestinationWithHttpInfo(
  id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelFileUploadDestination) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FileServicesApi-getFileV1EntityIdUploadDestinationLocations"></a>}}
\if{latex}{\out{\hypertarget{method-FileServicesApi-getFileV1EntityIdUploadDestinationLocations}{}}}
\subsection{Method \code{getFileV1EntityIdUploadDestinationLocations()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FileServicesApi$getFileV1EntityIdUploadDestinationLocations(
  id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
ListWrapperOfUploadDestinationLocation
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FileServicesApi-getFileV1EntityIdUploadDestinationLocationsWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-FileServicesApi-getFileV1EntityIdUploadDestinationLocationsWithHttpInfo}{}}}
\subsection{Method \code{getFileV1EntityIdUploadDestinationLocationsWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FileServicesApi$getFileV1EntityIdUploadDestinationLocationsWithHttpInfo(
  id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (ListWrapperOfUploadDestinationLocation) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FileServicesApi-getFileV1EntityIdUploadDestinationStorageLocationId"></a>}}
\if{latex}{\out{\hypertarget{method-FileServicesApi-getFileV1EntityIdUploadDestinationStorageLocationId}{}}}
\subsection{Method \code{getFileV1EntityIdUploadDestinationStorageLocationId()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FileServicesApi$getFileV1EntityIdUploadDestinationStorageLocationId(
  id,
  storage_location_id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{}

\item{\code{storage_location_id}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelFileUploadDestination
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FileServicesApi-getFileV1EntityIdUploadDestinationStorageLocationIdWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-FileServicesApi-getFileV1EntityIdUploadDestinationStorageLocationIdWithHttpInfo}{}}}
\subsection{Method \code{getFileV1EntityIdUploadDestinationStorageLocationIdWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FileServicesApi$getFileV1EntityIdUploadDestinationStorageLocationIdWithHttpInfo(
  id,
  storage_location_id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{}

\item{\code{storage_location_id}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelFileUploadDestination) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FileServicesApi-getFileV1FileBulkAsyncGetAsyncToken"></a>}}
\if{latex}{\out{\hypertarget{method-FileServicesApi-getFileV1FileBulkAsyncGetAsyncToken}{}}}
\subsection{Method \code{getFileV1FileBulkAsyncGetAsyncToken()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FileServicesApi$getFileV1FileBulkAsyncGetAsyncToken(
  async_token,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{async_token}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelFileBulkFileDownloadResponse
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FileServicesApi-getFileV1FileBulkAsyncGetAsyncTokenWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-FileServicesApi-getFileV1FileBulkAsyncGetAsyncTokenWithHttpInfo}{}}}
\subsection{Method \code{getFileV1FileBulkAsyncGetAsyncTokenWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FileServicesApi$getFileV1FileBulkAsyncGetAsyncTokenWithHttpInfo(
  async_token,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{async_token}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelFileBulkFileDownloadResponse) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FileServicesApi-getFileV1FileHandleHandleId"></a>}}
\if{latex}{\out{\hypertarget{method-FileServicesApi-getFileV1FileHandleHandleId}{}}}
\subsection{Method \code{getFileV1FileHandleHandleId()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FileServicesApi$getFileV1FileHandleHandleId(handle_id, data_file = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{handle_id}}{The ID of the FileHandle to fetch.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelFileFileHandle
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FileServicesApi-getFileV1FileHandleHandleIdWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-FileServicesApi-getFileV1FileHandleHandleIdWithHttpInfo}{}}}
\subsection{Method \code{getFileV1FileHandleHandleIdWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FileServicesApi$getFileV1FileHandleHandleIdWithHttpInfo(
  handle_id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{handle_id}}{The ID of the FileHandle to fetch.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelFileFileHandle) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FileServicesApi-getFileV1FileHandleHandleIdUrl"></a>}}
\if{latex}{\out{\hypertarget{method-FileServicesApi-getFileV1FileHandleHandleIdUrl}{}}}
\subsection{Method \code{getFileV1FileHandleHandleIdUrl()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FileServicesApi$getFileV1FileHandleHandleIdUrl(
  handle_id,
  redirect = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{handle_id}}{}

\item{\code{redirect}}{(optional) When set to false, the URL will be returned as text/plain             instead of redirecting.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
AnyType
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FileServicesApi-getFileV1FileHandleHandleIdUrlWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-FileServicesApi-getFileV1FileHandleHandleIdUrlWithHttpInfo}{}}}
\subsection{Method \code{getFileV1FileHandleHandleIdUrlWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FileServicesApi$getFileV1FileHandleHandleIdUrlWithHttpInfo(
  handle_id,
  redirect = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{handle_id}}{}

\item{\code{redirect}}{(optional) When set to false, the URL will be returned as text/plain             instead of redirecting.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (AnyType) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FileServicesApi-getFileV1FileHandleRestoreAsyncGetAsyncToken"></a>}}
\if{latex}{\out{\hypertarget{method-FileServicesApi-getFileV1FileHandleRestoreAsyncGetAsyncToken}{}}}
\subsection{Method \code{getFileV1FileHandleRestoreAsyncGetAsyncToken()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FileServicesApi$getFileV1FileHandleRestoreAsyncGetAsyncToken(
  async_token,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{async_token}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelFileFileHandleRestoreResponse
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FileServicesApi-getFileV1FileHandleRestoreAsyncGetAsyncTokenWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-FileServicesApi-getFileV1FileHandleRestoreAsyncGetAsyncTokenWithHttpInfo}{}}}
\subsection{Method \code{getFileV1FileHandleRestoreAsyncGetAsyncTokenWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FileServicesApi$getFileV1FileHandleRestoreAsyncGetAsyncTokenWithHttpInfo(
  async_token,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{async_token}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelFileFileHandleRestoreResponse) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FileServicesApi-getFileV1FileId"></a>}}
\if{latex}{\out{\hypertarget{method-FileServicesApi-getFileV1FileId}{}}}
\subsection{Method \code{getFileV1FileId()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FileServicesApi$getFileV1FileId(
  id,
  file_associate_type,
  file_associate_id,
  redirect = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{the ID of the file handle to be downloaded}

\item{\code{file_associate_type}}{the type of object with which the file is associated}

\item{\code{file_associate_id}}{the ID fo the object with which the file is associated}

\item{\code{redirect}}{(optional) When set to false, the URL will be returned as text/plain             instead of redirecting.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
AnyType
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FileServicesApi-getFileV1FileIdWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-FileServicesApi-getFileV1FileIdWithHttpInfo}{}}}
\subsection{Method \code{getFileV1FileIdWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FileServicesApi$getFileV1FileIdWithHttpInfo(
  id,
  file_associate_type,
  file_associate_id,
  redirect = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{the ID of the file handle to be downloaded}

\item{\code{file_associate_type}}{the type of object with which the file is associated}

\item{\code{file_associate_id}}{the ID fo the object with which the file is associated}

\item{\code{redirect}}{(optional) When set to false, the URL will be returned as text/plain             instead of redirecting.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (AnyType) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FileServicesApi-postFileV1DownloadListAdd"></a>}}
\if{latex}{\out{\hypertarget{method-FileServicesApi-postFileV1DownloadListAdd}{}}}
\subsection{Method \code{postFileV1DownloadListAdd()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FileServicesApi$postFileV1DownloadListAdd(
  org_sagebionetworks_repo_model_file_file_handle_association_list,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org_sagebionetworks_repo_model_file_file_handle_association_list}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelFileDownloadList
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FileServicesApi-postFileV1DownloadListAddWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-FileServicesApi-postFileV1DownloadListAddWithHttpInfo}{}}}
\subsection{Method \code{postFileV1DownloadListAddWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FileServicesApi$postFileV1DownloadListAddWithHttpInfo(
  org_sagebionetworks_repo_model_file_file_handle_association_list,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org_sagebionetworks_repo_model_file_file_handle_association_list}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelFileDownloadList) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FileServicesApi-postFileV1DownloadListAddAsyncStart"></a>}}
\if{latex}{\out{\hypertarget{method-FileServicesApi-postFileV1DownloadListAddAsyncStart}{}}}
\subsection{Method \code{postFileV1DownloadListAddAsyncStart()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FileServicesApi$postFileV1DownloadListAddAsyncStart(
  org_sagebionetworks_repo_model_file_add_file_to_download_list_request,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org_sagebionetworks_repo_model_file_add_file_to_download_list_request}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelAsynchAsyncJobId
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FileServicesApi-postFileV1DownloadListAddAsyncStartWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-FileServicesApi-postFileV1DownloadListAddAsyncStartWithHttpInfo}{}}}
\subsection{Method \code{postFileV1DownloadListAddAsyncStartWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FileServicesApi$postFileV1DownloadListAddAsyncStartWithHttpInfo(
  org_sagebionetworks_repo_model_file_add_file_to_download_list_request,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org_sagebionetworks_repo_model_file_add_file_to_download_list_request}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelAsynchAsyncJobId) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FileServicesApi-postFileV1DownloadListRemove"></a>}}
\if{latex}{\out{\hypertarget{method-FileServicesApi-postFileV1DownloadListRemove}{}}}
\subsection{Method \code{postFileV1DownloadListRemove()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FileServicesApi$postFileV1DownloadListRemove(
  org_sagebionetworks_repo_model_file_file_handle_association_list,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org_sagebionetworks_repo_model_file_file_handle_association_list}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelFileDownloadList
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FileServicesApi-postFileV1DownloadListRemoveWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-FileServicesApi-postFileV1DownloadListRemoveWithHttpInfo}{}}}
\subsection{Method \code{postFileV1DownloadListRemoveWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FileServicesApi$postFileV1DownloadListRemoveWithHttpInfo(
  org_sagebionetworks_repo_model_file_file_handle_association_list,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org_sagebionetworks_repo_model_file_file_handle_association_list}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelFileDownloadList) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FileServicesApi-postFileV1DownloadOrder"></a>}}
\if{latex}{\out{\hypertarget{method-FileServicesApi-postFileV1DownloadOrder}{}}}
\subsection{Method \code{postFileV1DownloadOrder()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FileServicesApi$postFileV1DownloadOrder(zip_file_name, data_file = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{zip_file_name}}{The name to given to the resulting zip file.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelFileDownloadOrder
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FileServicesApi-postFileV1DownloadOrderWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-FileServicesApi-postFileV1DownloadOrderWithHttpInfo}{}}}
\subsection{Method \code{postFileV1DownloadOrderWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FileServicesApi$postFileV1DownloadOrderWithHttpInfo(
  zip_file_name,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{zip_file_name}}{The name to given to the resulting zip file.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelFileDownloadOrder) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FileServicesApi-postFileV1DownloadOrderHistory"></a>}}
\if{latex}{\out{\hypertarget{method-FileServicesApi-postFileV1DownloadOrderHistory}{}}}
\subsection{Method \code{postFileV1DownloadOrderHistory()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FileServicesApi$postFileV1DownloadOrderHistory(
  org_sagebionetworks_repo_model_file_download_order_summary_request,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org_sagebionetworks_repo_model_file_download_order_summary_request}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelFileDownloadOrderSummaryResponse
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FileServicesApi-postFileV1DownloadOrderHistoryWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-FileServicesApi-postFileV1DownloadOrderHistoryWithHttpInfo}{}}}
\subsection{Method \code{postFileV1DownloadOrderHistoryWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FileServicesApi$postFileV1DownloadOrderHistoryWithHttpInfo(
  org_sagebionetworks_repo_model_file_download_order_summary_request,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org_sagebionetworks_repo_model_file_download_order_summary_request}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelFileDownloadOrderSummaryResponse) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FileServicesApi-postFileV1ExternalFileHandle"></a>}}
\if{latex}{\out{\hypertarget{method-FileServicesApi-postFileV1ExternalFileHandle}{}}}
\subsection{Method \code{postFileV1ExternalFileHandle()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FileServicesApi$postFileV1ExternalFileHandle(
  org_sagebionetworks_repo_model_file_external_file_handle_interface,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org_sagebionetworks_repo_model_file_external_file_handle_interface}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelFileExternalFileHandleInterface
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FileServicesApi-postFileV1ExternalFileHandleWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-FileServicesApi-postFileV1ExternalFileHandleWithHttpInfo}{}}}
\subsection{Method \code{postFileV1ExternalFileHandleWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FileServicesApi$postFileV1ExternalFileHandleWithHttpInfo(
  org_sagebionetworks_repo_model_file_external_file_handle_interface,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org_sagebionetworks_repo_model_file_external_file_handle_interface}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelFileExternalFileHandleInterface) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FileServicesApi-postFileV1ExternalFileHandleGoogleCloud"></a>}}
\if{latex}{\out{\hypertarget{method-FileServicesApi-postFileV1ExternalFileHandleGoogleCloud}{}}}
\subsection{Method \code{postFileV1ExternalFileHandleGoogleCloud()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FileServicesApi$postFileV1ExternalFileHandleGoogleCloud(
  org_sagebionetworks_repo_model_file_google_cloud_file_handle,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org_sagebionetworks_repo_model_file_google_cloud_file_handle}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelFileGoogleCloudFileHandle
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FileServicesApi-postFileV1ExternalFileHandleGoogleCloudWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-FileServicesApi-postFileV1ExternalFileHandleGoogleCloudWithHttpInfo}{}}}
\subsection{Method \code{postFileV1ExternalFileHandleGoogleCloudWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FileServicesApi$postFileV1ExternalFileHandleGoogleCloudWithHttpInfo(
  org_sagebionetworks_repo_model_file_google_cloud_file_handle,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org_sagebionetworks_repo_model_file_google_cloud_file_handle}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelFileGoogleCloudFileHandle) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FileServicesApi-postFileV1ExternalFileHandleS3"></a>}}
\if{latex}{\out{\hypertarget{method-FileServicesApi-postFileV1ExternalFileHandleS3}{}}}
\subsection{Method \code{postFileV1ExternalFileHandleS3()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FileServicesApi$postFileV1ExternalFileHandleS3(
  org_sagebionetworks_repo_model_file_s3_file_handle,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org_sagebionetworks_repo_model_file_s3_file_handle}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelFileS3FileHandle
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FileServicesApi-postFileV1ExternalFileHandleS3WithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-FileServicesApi-postFileV1ExternalFileHandleS3WithHttpInfo}{}}}
\subsection{Method \code{postFileV1ExternalFileHandleS3WithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FileServicesApi$postFileV1ExternalFileHandleS3WithHttpInfo(
  org_sagebionetworks_repo_model_file_s3_file_handle,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org_sagebionetworks_repo_model_file_s3_file_handle}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelFileS3FileHandle) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FileServicesApi-postFileV1FileBulkAsyncStart"></a>}}
\if{latex}{\out{\hypertarget{method-FileServicesApi-postFileV1FileBulkAsyncStart}{}}}
\subsection{Method \code{postFileV1FileBulkAsyncStart()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FileServicesApi$postFileV1FileBulkAsyncStart(
  org_sagebionetworks_repo_model_file_bulk_file_download_request,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org_sagebionetworks_repo_model_file_bulk_file_download_request}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelAsynchAsyncJobId
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FileServicesApi-postFileV1FileBulkAsyncStartWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-FileServicesApi-postFileV1FileBulkAsyncStartWithHttpInfo}{}}}
\subsection{Method \code{postFileV1FileBulkAsyncStartWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FileServicesApi$postFileV1FileBulkAsyncStartWithHttpInfo(
  org_sagebionetworks_repo_model_file_bulk_file_download_request,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org_sagebionetworks_repo_model_file_bulk_file_download_request}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelAsynchAsyncJobId) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FileServicesApi-postFileV1FileHandleBatch"></a>}}
\if{latex}{\out{\hypertarget{method-FileServicesApi-postFileV1FileHandleBatch}{}}}
\subsection{Method \code{postFileV1FileHandleBatch()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FileServicesApi$postFileV1FileHandleBatch(
  org_sagebionetworks_repo_model_file_batch_file_request,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org_sagebionetworks_repo_model_file_batch_file_request}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelFileBatchFileResult
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FileServicesApi-postFileV1FileHandleBatchWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-FileServicesApi-postFileV1FileHandleBatchWithHttpInfo}{}}}
\subsection{Method \code{postFileV1FileHandleBatchWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FileServicesApi$postFileV1FileHandleBatchWithHttpInfo(
  org_sagebionetworks_repo_model_file_batch_file_request,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org_sagebionetworks_repo_model_file_batch_file_request}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelFileBatchFileResult) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FileServicesApi-postFileV1FileHandleHandleIdToCopyFromCopy"></a>}}
\if{latex}{\out{\hypertarget{method-FileServicesApi-postFileV1FileHandleHandleIdToCopyFromCopy}{}}}
\subsection{Method \code{postFileV1FileHandleHandleIdToCopyFromCopy()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FileServicesApi$postFileV1FileHandleHandleIdToCopyFromCopy(
  handle_id_to_copy_from,
  org_sagebionetworks_repo_model_file_s3_file_handle,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{handle_id_to_copy_from}}{the file handle it from which to duplicate the data}

\item{\code{org_sagebionetworks_repo_model_file_s3_file_handle}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelFileS3FileHandle
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FileServicesApi-postFileV1FileHandleHandleIdToCopyFromCopyWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-FileServicesApi-postFileV1FileHandleHandleIdToCopyFromCopyWithHttpInfo}{}}}
\subsection{Method \code{postFileV1FileHandleHandleIdToCopyFromCopyWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FileServicesApi$postFileV1FileHandleHandleIdToCopyFromCopyWithHttpInfo(
  handle_id_to_copy_from,
  org_sagebionetworks_repo_model_file_s3_file_handle,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{handle_id_to_copy_from}}{the file handle it from which to duplicate the data}

\item{\code{org_sagebionetworks_repo_model_file_s3_file_handle}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelFileS3FileHandle) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FileServicesApi-postFileV1FileHandleRestoreAsyncStart"></a>}}
\if{latex}{\out{\hypertarget{method-FileServicesApi-postFileV1FileHandleRestoreAsyncStart}{}}}
\subsection{Method \code{postFileV1FileHandleRestoreAsyncStart()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FileServicesApi$postFileV1FileHandleRestoreAsyncStart(
  org_sagebionetworks_repo_model_file_file_handle_restore_request,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org_sagebionetworks_repo_model_file_file_handle_restore_request}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelAsynchAsyncJobId
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FileServicesApi-postFileV1FileHandleRestoreAsyncStartWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-FileServicesApi-postFileV1FileHandleRestoreAsyncStartWithHttpInfo}{}}}
\subsection{Method \code{postFileV1FileHandleRestoreAsyncStartWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FileServicesApi$postFileV1FileHandleRestoreAsyncStartWithHttpInfo(
  org_sagebionetworks_repo_model_file_file_handle_restore_request,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org_sagebionetworks_repo_model_file_file_handle_restore_request}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelAsynchAsyncJobId) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FileServicesApi-postFileV1FileMultipart"></a>}}
\if{latex}{\out{\hypertarget{method-FileServicesApi-postFileV1FileMultipart}{}}}
\subsection{Method \code{postFileV1FileMultipart()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FileServicesApi$postFileV1FileMultipart(
  org_sagebionetworks_repo_model_file_multipart_request,
  force_restart = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org_sagebionetworks_repo_model_file_multipart_request}}{}

\item{\code{force_restart}}{(optional) Optional parameter. When 'forceRestart=true' is included, any             upload state for the given file will be cleared and a new             upload will be started.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelFileMultipartUploadStatus
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FileServicesApi-postFileV1FileMultipartWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-FileServicesApi-postFileV1FileMultipartWithHttpInfo}{}}}
\subsection{Method \code{postFileV1FileMultipartWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FileServicesApi$postFileV1FileMultipartWithHttpInfo(
  org_sagebionetworks_repo_model_file_multipart_request,
  force_restart = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org_sagebionetworks_repo_model_file_multipart_request}}{}

\item{\code{force_restart}}{(optional) Optional parameter. When 'forceRestart=true' is included, any             upload state for the given file will be cleared and a new             upload will be started.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelFileMultipartUploadStatus) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FileServicesApi-postFileV1FileMultipartUploadIdPresignedUrlBatch"></a>}}
\if{latex}{\out{\hypertarget{method-FileServicesApi-postFileV1FileMultipartUploadIdPresignedUrlBatch}{}}}
\subsection{Method \code{postFileV1FileMultipartUploadIdPresignedUrlBatch()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FileServicesApi$postFileV1FileMultipartUploadIdPresignedUrlBatch(
  upload_id,
  org_sagebionetworks_repo_model_file_batch_presigned_upload_url_request,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{upload_id}}{The unique identifier of the file upload.}

\item{\code{org_sagebionetworks_repo_model_file_batch_presigned_upload_url_request}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelFileBatchPresignedUploadUrlResponse
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FileServicesApi-postFileV1FileMultipartUploadIdPresignedUrlBatchWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-FileServicesApi-postFileV1FileMultipartUploadIdPresignedUrlBatchWithHttpInfo}{}}}
\subsection{Method \code{postFileV1FileMultipartUploadIdPresignedUrlBatchWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FileServicesApi$postFileV1FileMultipartUploadIdPresignedUrlBatchWithHttpInfo(
  upload_id,
  org_sagebionetworks_repo_model_file_batch_presigned_upload_url_request,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{upload_id}}{The unique identifier of the file upload.}

\item{\code{org_sagebionetworks_repo_model_file_batch_presigned_upload_url_request}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelFileBatchPresignedUploadUrlResponse) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FileServicesApi-postFileV1FilehandlesCopy"></a>}}
\if{latex}{\out{\hypertarget{method-FileServicesApi-postFileV1FilehandlesCopy}{}}}
\subsection{Method \code{postFileV1FilehandlesCopy()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FileServicesApi$postFileV1FilehandlesCopy(
  org_sagebionetworks_repo_model_file_batch_file_handle_copy_request,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org_sagebionetworks_repo_model_file_batch_file_handle_copy_request}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelFileBatchFileHandleCopyResult
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FileServicesApi-postFileV1FilehandlesCopyWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-FileServicesApi-postFileV1FilehandlesCopyWithHttpInfo}{}}}
\subsection{Method \code{postFileV1FilehandlesCopyWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FileServicesApi$postFileV1FilehandlesCopyWithHttpInfo(
  org_sagebionetworks_repo_model_file_batch_file_handle_copy_request,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org_sagebionetworks_repo_model_file_batch_file_handle_copy_request}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelFileBatchFileHandleCopyResult) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FileServicesApi-putFileV1FileMultipartUploadIdAddPartNumber"></a>}}
\if{latex}{\out{\hypertarget{method-FileServicesApi-putFileV1FileMultipartUploadIdAddPartNumber}{}}}
\subsection{Method \code{putFileV1FileMultipartUploadIdAddPartNumber()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FileServicesApi$putFileV1FileMultipartUploadIdAddPartNumber(
  upload_id,
  part_number,
  part_md5_hex,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{upload_id}}{The unique identifier of the file upload.}

\item{\code{part_number}}{The part number to add. Must be a number between 1 and 10,000.}

\item{\code{part_md5_hex}}{The MD5 of the uploaded part represented as a hexadecimal             string. If the provided MD5 does not match the MD5 of the             uploaded part, the add will fail.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelFileAddPartResponse
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FileServicesApi-putFileV1FileMultipartUploadIdAddPartNumberWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-FileServicesApi-putFileV1FileMultipartUploadIdAddPartNumberWithHttpInfo}{}}}
\subsection{Method \code{putFileV1FileMultipartUploadIdAddPartNumberWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FileServicesApi$putFileV1FileMultipartUploadIdAddPartNumberWithHttpInfo(
  upload_id,
  part_number,
  part_md5_hex,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{upload_id}}{The unique identifier of the file upload.}

\item{\code{part_number}}{The part number to add. Must be a number between 1 and 10,000.}

\item{\code{part_md5_hex}}{The MD5 of the uploaded part represented as a hexadecimal             string. If the provided MD5 does not match the MD5 of the             uploaded part, the add will fail.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelFileAddPartResponse) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FileServicesApi-putFileV1FileMultipartUploadIdComplete"></a>}}
\if{latex}{\out{\hypertarget{method-FileServicesApi-putFileV1FileMultipartUploadIdComplete}{}}}
\subsection{Method \code{putFileV1FileMultipartUploadIdComplete()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FileServicesApi$putFileV1FileMultipartUploadIdComplete(
  upload_id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{upload_id}}{The unique identifier of the file upload.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelFileMultipartUploadStatus
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FileServicesApi-putFileV1FileMultipartUploadIdCompleteWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-FileServicesApi-putFileV1FileMultipartUploadIdCompleteWithHttpInfo}{}}}
\subsection{Method \code{putFileV1FileMultipartUploadIdCompleteWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FileServicesApi$putFileV1FileMultipartUploadIdCompleteWithHttpInfo(
  upload_id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{upload_id}}{The unique identifier of the file upload.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelFileMultipartUploadStatus) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FileServicesApi-clone"></a>}}
\if{latex}{\out{\hypertarget{method-FileServicesApi-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FileServicesApi$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
