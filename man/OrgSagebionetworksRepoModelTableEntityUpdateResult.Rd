% Generated by roxygen2: do not edit by hand
% Please edit documentation in
%   R/org_sagebionetworks_repo_model_table_entity_update_result.R
\docType{class}
\name{OrgSagebionetworksRepoModelTableEntityUpdateResult}
\alias{OrgSagebionetworksRepoModelTableEntityUpdateResult}
\title{OrgSagebionetworksRepoModelTableEntityUpdateResult}
\format{
An \code{R6Class} generator object
}
\description{
Result of a single Entity Update.

OrgSagebionetworksRepoModelTableEntityUpdateResult Class
}
\details{
Create a new OrgSagebionetworksRepoModelTableEntityUpdateResult
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{entityId}}{character [optional]}

\item{\code{failureMessage}}{character [optional]}

\item{\code{failureCode}}{character [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-OrgSagebionetworksRepoModelTableEntityUpdateResult-new}{\code{OrgSagebionetworksRepoModelTableEntityUpdateResult$new()}}
\item \href{#method-OrgSagebionetworksRepoModelTableEntityUpdateResult-toJSON}{\code{OrgSagebionetworksRepoModelTableEntityUpdateResult$toJSON()}}
\item \href{#method-OrgSagebionetworksRepoModelTableEntityUpdateResult-fromJSON}{\code{OrgSagebionetworksRepoModelTableEntityUpdateResult$fromJSON()}}
\item \href{#method-OrgSagebionetworksRepoModelTableEntityUpdateResult-toJSONString}{\code{OrgSagebionetworksRepoModelTableEntityUpdateResult$toJSONString()}}
\item \href{#method-OrgSagebionetworksRepoModelTableEntityUpdateResult-fromJSONString}{\code{OrgSagebionetworksRepoModelTableEntityUpdateResult$fromJSONString()}}
\item \href{#method-OrgSagebionetworksRepoModelTableEntityUpdateResult-validateJSON}{\code{OrgSagebionetworksRepoModelTableEntityUpdateResult$validateJSON()}}
\item \href{#method-OrgSagebionetworksRepoModelTableEntityUpdateResult-toString}{\code{OrgSagebionetworksRepoModelTableEntityUpdateResult$toString()}}
\item \href{#method-OrgSagebionetworksRepoModelTableEntityUpdateResult-isValid}{\code{OrgSagebionetworksRepoModelTableEntityUpdateResult$isValid()}}
\item \href{#method-OrgSagebionetworksRepoModelTableEntityUpdateResult-getInvalidFields}{\code{OrgSagebionetworksRepoModelTableEntityUpdateResult$getInvalidFields()}}
\item \href{#method-OrgSagebionetworksRepoModelTableEntityUpdateResult-print}{\code{OrgSagebionetworksRepoModelTableEntityUpdateResult$print()}}
\item \href{#method-OrgSagebionetworksRepoModelTableEntityUpdateResult-clone}{\code{OrgSagebionetworksRepoModelTableEntityUpdateResult$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableEntityUpdateResult-new"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableEntityUpdateResult-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new OrgSagebionetworksRepoModelTableEntityUpdateResult class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableEntityUpdateResult$new(
  entityId = NULL,
  failureMessage = NULL,
  failureCode = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{entityId}}{entityId}

\item{\code{failureMessage}}{failureMessage}

\item{\code{failureCode}}{failureCode}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableEntityUpdateResult-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableEntityUpdateResult-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableEntityUpdateResult$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
OrgSagebionetworksRepoModelTableEntityUpdateResult in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableEntityUpdateResult-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableEntityUpdateResult-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of OrgSagebionetworksRepoModelTableEntityUpdateResult
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableEntityUpdateResult$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of OrgSagebionetworksRepoModelTableEntityUpdateResult
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableEntityUpdateResult-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableEntityUpdateResult-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableEntityUpdateResult$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
OrgSagebionetworksRepoModelTableEntityUpdateResult in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableEntityUpdateResult-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableEntityUpdateResult-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of OrgSagebionetworksRepoModelTableEntityUpdateResult
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableEntityUpdateResult$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of OrgSagebionetworksRepoModelTableEntityUpdateResult
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableEntityUpdateResult-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableEntityUpdateResult-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to OrgSagebionetworksRepoModelTableEntityUpdateResult and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableEntityUpdateResult$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableEntityUpdateResult-toString"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableEntityUpdateResult-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableEntityUpdateResult$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of OrgSagebionetworksRepoModelTableEntityUpdateResult
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableEntityUpdateResult-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableEntityUpdateResult-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableEntityUpdateResult$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableEntityUpdateResult-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableEntityUpdateResult-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableEntityUpdateResult$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableEntityUpdateResult-print"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableEntityUpdateResult-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableEntityUpdateResult$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableEntityUpdateResult-clone"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableEntityUpdateResult-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableEntityUpdateResult$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
