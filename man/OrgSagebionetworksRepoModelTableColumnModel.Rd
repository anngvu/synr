% Generated by roxygen2: do not edit by hand
% Please edit documentation in
%   R/org_sagebionetworks_repo_model_table_column_model.R
\docType{class}
\name{OrgSagebionetworksRepoModelTableColumnModel}
\alias{OrgSagebionetworksRepoModelTableColumnModel}
\title{OrgSagebionetworksRepoModelTableColumnModel}
\format{
An \code{R6Class} generator object
}
\description{
A column model contains the metadata of a single column of a table or view.

OrgSagebionetworksRepoModelTableColumnModel Class
}
\details{
Create a new OrgSagebionetworksRepoModelTableColumnModel
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{name}}{character [optional]}

\item{\code{columnType}}{character [optional]}

\item{\code{facetType}}{character [optional]}

\item{\code{id}}{character [optional]}

\item{\code{defaultValue}}{character [optional]}

\item{\code{maximumSize}}{integer [optional]}

\item{\code{maximumListLength}}{integer [optional]}

\item{\code{enumValues}}{Columns of type STRING can be constrained to an enumeration values set on this list. The maximum number of entries for an enum is 100 list(character) [optional]}

\item{\code{jsonSubColumns}}{For column of type JSON that represents the combination of multiple sub-columns, this property is used to define each sub-column. list(\link{OrgSagebionetworksRepoModelTableJsonSubColumnModel}) [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-OrgSagebionetworksRepoModelTableColumnModel-new}{\code{OrgSagebionetworksRepoModelTableColumnModel$new()}}
\item \href{#method-OrgSagebionetworksRepoModelTableColumnModel-toJSON}{\code{OrgSagebionetworksRepoModelTableColumnModel$toJSON()}}
\item \href{#method-OrgSagebionetworksRepoModelTableColumnModel-fromJSON}{\code{OrgSagebionetworksRepoModelTableColumnModel$fromJSON()}}
\item \href{#method-OrgSagebionetworksRepoModelTableColumnModel-toJSONString}{\code{OrgSagebionetworksRepoModelTableColumnModel$toJSONString()}}
\item \href{#method-OrgSagebionetworksRepoModelTableColumnModel-fromJSONString}{\code{OrgSagebionetworksRepoModelTableColumnModel$fromJSONString()}}
\item \href{#method-OrgSagebionetworksRepoModelTableColumnModel-validateJSON}{\code{OrgSagebionetworksRepoModelTableColumnModel$validateJSON()}}
\item \href{#method-OrgSagebionetworksRepoModelTableColumnModel-toString}{\code{OrgSagebionetworksRepoModelTableColumnModel$toString()}}
\item \href{#method-OrgSagebionetworksRepoModelTableColumnModel-isValid}{\code{OrgSagebionetworksRepoModelTableColumnModel$isValid()}}
\item \href{#method-OrgSagebionetworksRepoModelTableColumnModel-getInvalidFields}{\code{OrgSagebionetworksRepoModelTableColumnModel$getInvalidFields()}}
\item \href{#method-OrgSagebionetworksRepoModelTableColumnModel-print}{\code{OrgSagebionetworksRepoModelTableColumnModel$print()}}
\item \href{#method-OrgSagebionetworksRepoModelTableColumnModel-clone}{\code{OrgSagebionetworksRepoModelTableColumnModel$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableColumnModel-new"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableColumnModel-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new OrgSagebionetworksRepoModelTableColumnModel class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableColumnModel$new(
  name = NULL,
  columnType = NULL,
  facetType = NULL,
  id = NULL,
  defaultValue = NULL,
  maximumSize = NULL,
  maximumListLength = NULL,
  enumValues = NULL,
  jsonSubColumns = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{name}

\item{\code{columnType}}{columnType}

\item{\code{facetType}}{facetType}

\item{\code{id}}{id}

\item{\code{defaultValue}}{defaultValue}

\item{\code{maximumSize}}{maximumSize}

\item{\code{maximumListLength}}{maximumListLength}

\item{\code{enumValues}}{Columns of type STRING can be constrained to an enumeration values set on this list. The maximum number of entries for an enum is 100}

\item{\code{jsonSubColumns}}{For column of type JSON that represents the combination of multiple sub-columns, this property is used to define each sub-column.}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableColumnModel-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableColumnModel-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableColumnModel$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
OrgSagebionetworksRepoModelTableColumnModel in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableColumnModel-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableColumnModel-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of OrgSagebionetworksRepoModelTableColumnModel
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableColumnModel$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of OrgSagebionetworksRepoModelTableColumnModel
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableColumnModel-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableColumnModel-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableColumnModel$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
OrgSagebionetworksRepoModelTableColumnModel in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableColumnModel-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableColumnModel-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of OrgSagebionetworksRepoModelTableColumnModel
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableColumnModel$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of OrgSagebionetworksRepoModelTableColumnModel
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableColumnModel-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableColumnModel-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to OrgSagebionetworksRepoModelTableColumnModel and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableColumnModel$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableColumnModel-toString"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableColumnModel-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableColumnModel$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of OrgSagebionetworksRepoModelTableColumnModel
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableColumnModel-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableColumnModel-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableColumnModel$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableColumnModel-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableColumnModel-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableColumnModel$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableColumnModel-print"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableColumnModel-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableColumnModel$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableColumnModel-clone"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableColumnModel-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableColumnModel$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
