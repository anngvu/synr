% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/paginated_results_of_discussion_reply_bundle.R
\docType{class}
\name{PaginatedResultsOfDiscussionReplyBundle}
\alias{PaginatedResultsOfDiscussionReplyBundle}
\title{PaginatedResultsOfDiscussionReplyBundle}
\format{
An \code{R6Class} generator object
}
\description{
PaginatedResultsOfDiscussionReplyBundle Class

PaginatedResultsOfDiscussionReplyBundle Class
}
\details{
Create a new PaginatedResultsOfDiscussionReplyBundle
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{totalNumberOfResults}}{integer [optional]}

\item{\code{results}}{list(\link{OrgSagebionetworksRepoModelDiscussionDiscussionReplyBundle}) [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-PaginatedResultsOfDiscussionReplyBundle-new}{\code{PaginatedResultsOfDiscussionReplyBundle$new()}}
\item \href{#method-PaginatedResultsOfDiscussionReplyBundle-toJSON}{\code{PaginatedResultsOfDiscussionReplyBundle$toJSON()}}
\item \href{#method-PaginatedResultsOfDiscussionReplyBundle-fromJSON}{\code{PaginatedResultsOfDiscussionReplyBundle$fromJSON()}}
\item \href{#method-PaginatedResultsOfDiscussionReplyBundle-toJSONString}{\code{PaginatedResultsOfDiscussionReplyBundle$toJSONString()}}
\item \href{#method-PaginatedResultsOfDiscussionReplyBundle-fromJSONString}{\code{PaginatedResultsOfDiscussionReplyBundle$fromJSONString()}}
\item \href{#method-PaginatedResultsOfDiscussionReplyBundle-validateJSON}{\code{PaginatedResultsOfDiscussionReplyBundle$validateJSON()}}
\item \href{#method-PaginatedResultsOfDiscussionReplyBundle-toString}{\code{PaginatedResultsOfDiscussionReplyBundle$toString()}}
\item \href{#method-PaginatedResultsOfDiscussionReplyBundle-isValid}{\code{PaginatedResultsOfDiscussionReplyBundle$isValid()}}
\item \href{#method-PaginatedResultsOfDiscussionReplyBundle-getInvalidFields}{\code{PaginatedResultsOfDiscussionReplyBundle$getInvalidFields()}}
\item \href{#method-PaginatedResultsOfDiscussionReplyBundle-print}{\code{PaginatedResultsOfDiscussionReplyBundle$print()}}
\item \href{#method-PaginatedResultsOfDiscussionReplyBundle-clone}{\code{PaginatedResultsOfDiscussionReplyBundle$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfDiscussionReplyBundle-new"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfDiscussionReplyBundle-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new PaginatedResultsOfDiscussionReplyBundle class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfDiscussionReplyBundle$new(
  totalNumberOfResults = NULL,
  results = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{totalNumberOfResults}}{totalNumberOfResults}

\item{\code{results}}{results}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfDiscussionReplyBundle-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfDiscussionReplyBundle-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfDiscussionReplyBundle$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
PaginatedResultsOfDiscussionReplyBundle in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfDiscussionReplyBundle-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfDiscussionReplyBundle-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of PaginatedResultsOfDiscussionReplyBundle
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfDiscussionReplyBundle$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of PaginatedResultsOfDiscussionReplyBundle
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfDiscussionReplyBundle-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfDiscussionReplyBundle-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfDiscussionReplyBundle$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
PaginatedResultsOfDiscussionReplyBundle in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfDiscussionReplyBundle-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfDiscussionReplyBundle-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of PaginatedResultsOfDiscussionReplyBundle
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfDiscussionReplyBundle$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of PaginatedResultsOfDiscussionReplyBundle
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfDiscussionReplyBundle-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfDiscussionReplyBundle-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to PaginatedResultsOfDiscussionReplyBundle and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfDiscussionReplyBundle$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfDiscussionReplyBundle-toString"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfDiscussionReplyBundle-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfDiscussionReplyBundle$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of PaginatedResultsOfDiscussionReplyBundle
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfDiscussionReplyBundle-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfDiscussionReplyBundle-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfDiscussionReplyBundle$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfDiscussionReplyBundle-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfDiscussionReplyBundle-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfDiscussionReplyBundle$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfDiscussionReplyBundle-print"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfDiscussionReplyBundle-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfDiscussionReplyBundle$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfDiscussionReplyBundle-clone"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfDiscussionReplyBundle-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfDiscussionReplyBundle$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
