% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/paginated_results_of_access_requirement.R
\docType{class}
\name{PaginatedResultsOfAccessRequirement}
\alias{PaginatedResultsOfAccessRequirement}
\title{PaginatedResultsOfAccessRequirement}
\format{
An \code{R6Class} generator object
}
\description{
PaginatedResultsOfAccessRequirement Class

PaginatedResultsOfAccessRequirement Class
}
\details{
Create a new PaginatedResultsOfAccessRequirement
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{totalNumberOfResults}}{integer [optional]}

\item{\code{results}}{list(\link{OrgSagebionetworksRepoModelAccessRequirement}) [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-PaginatedResultsOfAccessRequirement-new}{\code{PaginatedResultsOfAccessRequirement$new()}}
\item \href{#method-PaginatedResultsOfAccessRequirement-toJSON}{\code{PaginatedResultsOfAccessRequirement$toJSON()}}
\item \href{#method-PaginatedResultsOfAccessRequirement-fromJSON}{\code{PaginatedResultsOfAccessRequirement$fromJSON()}}
\item \href{#method-PaginatedResultsOfAccessRequirement-toJSONString}{\code{PaginatedResultsOfAccessRequirement$toJSONString()}}
\item \href{#method-PaginatedResultsOfAccessRequirement-fromJSONString}{\code{PaginatedResultsOfAccessRequirement$fromJSONString()}}
\item \href{#method-PaginatedResultsOfAccessRequirement-validateJSON}{\code{PaginatedResultsOfAccessRequirement$validateJSON()}}
\item \href{#method-PaginatedResultsOfAccessRequirement-toString}{\code{PaginatedResultsOfAccessRequirement$toString()}}
\item \href{#method-PaginatedResultsOfAccessRequirement-isValid}{\code{PaginatedResultsOfAccessRequirement$isValid()}}
\item \href{#method-PaginatedResultsOfAccessRequirement-getInvalidFields}{\code{PaginatedResultsOfAccessRequirement$getInvalidFields()}}
\item \href{#method-PaginatedResultsOfAccessRequirement-print}{\code{PaginatedResultsOfAccessRequirement$print()}}
\item \href{#method-PaginatedResultsOfAccessRequirement-clone}{\code{PaginatedResultsOfAccessRequirement$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfAccessRequirement-new"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfAccessRequirement-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new PaginatedResultsOfAccessRequirement class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfAccessRequirement$new(
  totalNumberOfResults = NULL,
  results = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{totalNumberOfResults}}{totalNumberOfResults}

\item{\code{results}}{results}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfAccessRequirement-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfAccessRequirement-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfAccessRequirement$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
PaginatedResultsOfAccessRequirement in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfAccessRequirement-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfAccessRequirement-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of PaginatedResultsOfAccessRequirement
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfAccessRequirement$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of PaginatedResultsOfAccessRequirement
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfAccessRequirement-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfAccessRequirement-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfAccessRequirement$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
PaginatedResultsOfAccessRequirement in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfAccessRequirement-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfAccessRequirement-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of PaginatedResultsOfAccessRequirement
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfAccessRequirement$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of PaginatedResultsOfAccessRequirement
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfAccessRequirement-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfAccessRequirement-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to PaginatedResultsOfAccessRequirement and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfAccessRequirement$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfAccessRequirement-toString"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfAccessRequirement-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfAccessRequirement$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of PaginatedResultsOfAccessRequirement
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfAccessRequirement-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfAccessRequirement-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfAccessRequirement$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfAccessRequirement-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfAccessRequirement-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfAccessRequirement$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfAccessRequirement-print"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfAccessRequirement-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfAccessRequirement$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfAccessRequirement-clone"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfAccessRequirement-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfAccessRequirement$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
