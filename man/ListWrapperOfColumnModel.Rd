% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/list_wrapper_of_column_model.R
\docType{class}
\name{ListWrapperOfColumnModel}
\alias{ListWrapperOfColumnModel}
\title{ListWrapperOfColumnModel}
\format{
An \code{R6Class} generator object
}
\description{
ListWrapperOfColumnModel Class

ListWrapperOfColumnModel Class
}
\details{
Create a new ListWrapperOfColumnModel
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{list}}{list(\link{OrgSagebionetworksRepoModelTableColumnModel}) [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-ListWrapperOfColumnModel-new}{\code{ListWrapperOfColumnModel$new()}}
\item \href{#method-ListWrapperOfColumnModel-toJSON}{\code{ListWrapperOfColumnModel$toJSON()}}
\item \href{#method-ListWrapperOfColumnModel-fromJSON}{\code{ListWrapperOfColumnModel$fromJSON()}}
\item \href{#method-ListWrapperOfColumnModel-toJSONString}{\code{ListWrapperOfColumnModel$toJSONString()}}
\item \href{#method-ListWrapperOfColumnModel-fromJSONString}{\code{ListWrapperOfColumnModel$fromJSONString()}}
\item \href{#method-ListWrapperOfColumnModel-validateJSON}{\code{ListWrapperOfColumnModel$validateJSON()}}
\item \href{#method-ListWrapperOfColumnModel-toString}{\code{ListWrapperOfColumnModel$toString()}}
\item \href{#method-ListWrapperOfColumnModel-isValid}{\code{ListWrapperOfColumnModel$isValid()}}
\item \href{#method-ListWrapperOfColumnModel-getInvalidFields}{\code{ListWrapperOfColumnModel$getInvalidFields()}}
\item \href{#method-ListWrapperOfColumnModel-print}{\code{ListWrapperOfColumnModel$print()}}
\item \href{#method-ListWrapperOfColumnModel-clone}{\code{ListWrapperOfColumnModel$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ListWrapperOfColumnModel-new"></a>}}
\if{latex}{\out{\hypertarget{method-ListWrapperOfColumnModel-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new ListWrapperOfColumnModel class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ListWrapperOfColumnModel$new(list = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{list}}{list}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ListWrapperOfColumnModel-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-ListWrapperOfColumnModel-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ListWrapperOfColumnModel$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
ListWrapperOfColumnModel in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ListWrapperOfColumnModel-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-ListWrapperOfColumnModel-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of ListWrapperOfColumnModel
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ListWrapperOfColumnModel$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of ListWrapperOfColumnModel
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ListWrapperOfColumnModel-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-ListWrapperOfColumnModel-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ListWrapperOfColumnModel$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
ListWrapperOfColumnModel in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ListWrapperOfColumnModel-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-ListWrapperOfColumnModel-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of ListWrapperOfColumnModel
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ListWrapperOfColumnModel$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of ListWrapperOfColumnModel
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ListWrapperOfColumnModel-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-ListWrapperOfColumnModel-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to ListWrapperOfColumnModel and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ListWrapperOfColumnModel$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ListWrapperOfColumnModel-toString"></a>}}
\if{latex}{\out{\hypertarget{method-ListWrapperOfColumnModel-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ListWrapperOfColumnModel$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of ListWrapperOfColumnModel
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ListWrapperOfColumnModel-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-ListWrapperOfColumnModel-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ListWrapperOfColumnModel$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ListWrapperOfColumnModel-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-ListWrapperOfColumnModel-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ListWrapperOfColumnModel$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ListWrapperOfColumnModel-print"></a>}}
\if{latex}{\out{\hypertarget{method-ListWrapperOfColumnModel-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ListWrapperOfColumnModel$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ListWrapperOfColumnModel-clone"></a>}}
\if{latex}{\out{\hypertarget{method-ListWrapperOfColumnModel-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ListWrapperOfColumnModel$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
