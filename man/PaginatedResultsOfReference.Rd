% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/paginated_results_of_reference.R
\docType{class}
\name{PaginatedResultsOfReference}
\alias{PaginatedResultsOfReference}
\title{PaginatedResultsOfReference}
\format{
An \code{R6Class} generator object
}
\description{
PaginatedResultsOfReference Class

PaginatedResultsOfReference Class
}
\details{
Create a new PaginatedResultsOfReference
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{totalNumberOfResults}}{integer [optional]}

\item{\code{results}}{list(\link{OrgSagebionetworksRepoModelReference}) [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-PaginatedResultsOfReference-new}{\code{PaginatedResultsOfReference$new()}}
\item \href{#method-PaginatedResultsOfReference-toJSON}{\code{PaginatedResultsOfReference$toJSON()}}
\item \href{#method-PaginatedResultsOfReference-fromJSON}{\code{PaginatedResultsOfReference$fromJSON()}}
\item \href{#method-PaginatedResultsOfReference-toJSONString}{\code{PaginatedResultsOfReference$toJSONString()}}
\item \href{#method-PaginatedResultsOfReference-fromJSONString}{\code{PaginatedResultsOfReference$fromJSONString()}}
\item \href{#method-PaginatedResultsOfReference-validateJSON}{\code{PaginatedResultsOfReference$validateJSON()}}
\item \href{#method-PaginatedResultsOfReference-toString}{\code{PaginatedResultsOfReference$toString()}}
\item \href{#method-PaginatedResultsOfReference-isValid}{\code{PaginatedResultsOfReference$isValid()}}
\item \href{#method-PaginatedResultsOfReference-getInvalidFields}{\code{PaginatedResultsOfReference$getInvalidFields()}}
\item \href{#method-PaginatedResultsOfReference-print}{\code{PaginatedResultsOfReference$print()}}
\item \href{#method-PaginatedResultsOfReference-clone}{\code{PaginatedResultsOfReference$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfReference-new"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfReference-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new PaginatedResultsOfReference class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfReference$new(
  totalNumberOfResults = NULL,
  results = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{totalNumberOfResults}}{totalNumberOfResults}

\item{\code{results}}{results}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfReference-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfReference-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfReference$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
PaginatedResultsOfReference in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfReference-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfReference-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of PaginatedResultsOfReference
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfReference$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of PaginatedResultsOfReference
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfReference-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfReference-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfReference$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
PaginatedResultsOfReference in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfReference-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfReference-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of PaginatedResultsOfReference
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfReference$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of PaginatedResultsOfReference
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfReference-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfReference-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to PaginatedResultsOfReference and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfReference$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfReference-toString"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfReference-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfReference$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of PaginatedResultsOfReference
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfReference-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfReference-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfReference$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfReference-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfReference-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfReference$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfReference-print"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfReference-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfReference$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfReference-clone"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfReference-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfReference$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
