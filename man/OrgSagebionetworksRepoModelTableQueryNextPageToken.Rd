% Generated by roxygen2: do not edit by hand
% Please edit documentation in
%   R/org_sagebionetworks_repo_model_table_query_next_page_token.R
\docType{class}
\name{OrgSagebionetworksRepoModelTableQueryNextPageToken}
\alias{OrgSagebionetworksRepoModelTableQueryNextPageToken}
\title{OrgSagebionetworksRepoModelTableQueryNextPageToken}
\format{
An \code{R6Class} generator object
}
\description{
OrgSagebionetworksRepoModelTableQueryNextPageToken Class

OrgSagebionetworksRepoModelTableQueryNextPageToken Class
}
\details{
Create a new OrgSagebionetworksRepoModelTableQueryNextPageToken
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{concreteType}}{character}

\item{\code{entityId}}{character [optional]}

\item{\code{token}}{character [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-OrgSagebionetworksRepoModelTableQueryNextPageToken-new}{\code{OrgSagebionetworksRepoModelTableQueryNextPageToken$new()}}
\item \href{#method-OrgSagebionetworksRepoModelTableQueryNextPageToken-toJSON}{\code{OrgSagebionetworksRepoModelTableQueryNextPageToken$toJSON()}}
\item \href{#method-OrgSagebionetworksRepoModelTableQueryNextPageToken-fromJSON}{\code{OrgSagebionetworksRepoModelTableQueryNextPageToken$fromJSON()}}
\item \href{#method-OrgSagebionetworksRepoModelTableQueryNextPageToken-toJSONString}{\code{OrgSagebionetworksRepoModelTableQueryNextPageToken$toJSONString()}}
\item \href{#method-OrgSagebionetworksRepoModelTableQueryNextPageToken-fromJSONString}{\code{OrgSagebionetworksRepoModelTableQueryNextPageToken$fromJSONString()}}
\item \href{#method-OrgSagebionetworksRepoModelTableQueryNextPageToken-validateJSON}{\code{OrgSagebionetworksRepoModelTableQueryNextPageToken$validateJSON()}}
\item \href{#method-OrgSagebionetworksRepoModelTableQueryNextPageToken-toString}{\code{OrgSagebionetworksRepoModelTableQueryNextPageToken$toString()}}
\item \href{#method-OrgSagebionetworksRepoModelTableQueryNextPageToken-isValid}{\code{OrgSagebionetworksRepoModelTableQueryNextPageToken$isValid()}}
\item \href{#method-OrgSagebionetworksRepoModelTableQueryNextPageToken-getInvalidFields}{\code{OrgSagebionetworksRepoModelTableQueryNextPageToken$getInvalidFields()}}
\item \href{#method-OrgSagebionetworksRepoModelTableQueryNextPageToken-print}{\code{OrgSagebionetworksRepoModelTableQueryNextPageToken$print()}}
\item \href{#method-OrgSagebionetworksRepoModelTableQueryNextPageToken-clone}{\code{OrgSagebionetworksRepoModelTableQueryNextPageToken$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableQueryNextPageToken-new"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableQueryNextPageToken-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new OrgSagebionetworksRepoModelTableQueryNextPageToken class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableQueryNextPageToken$new(
  concreteType,
  entityId = NULL,
  token = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{concreteType}}{concreteType}

\item{\code{entityId}}{entityId}

\item{\code{token}}{token}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableQueryNextPageToken-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableQueryNextPageToken-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableQueryNextPageToken$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
OrgSagebionetworksRepoModelTableQueryNextPageToken in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableQueryNextPageToken-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableQueryNextPageToken-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of OrgSagebionetworksRepoModelTableQueryNextPageToken
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableQueryNextPageToken$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of OrgSagebionetworksRepoModelTableQueryNextPageToken
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableQueryNextPageToken-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableQueryNextPageToken-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableQueryNextPageToken$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
OrgSagebionetworksRepoModelTableQueryNextPageToken in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableQueryNextPageToken-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableQueryNextPageToken-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of OrgSagebionetworksRepoModelTableQueryNextPageToken
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableQueryNextPageToken$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of OrgSagebionetworksRepoModelTableQueryNextPageToken
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableQueryNextPageToken-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableQueryNextPageToken-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to OrgSagebionetworksRepoModelTableQueryNextPageToken and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableQueryNextPageToken$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableQueryNextPageToken-toString"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableQueryNextPageToken-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableQueryNextPageToken$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of OrgSagebionetworksRepoModelTableQueryNextPageToken
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableQueryNextPageToken-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableQueryNextPageToken-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableQueryNextPageToken$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableQueryNextPageToken-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableQueryNextPageToken-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableQueryNextPageToken$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableQueryNextPageToken-print"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableQueryNextPageToken-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableQueryNextPageToken$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableQueryNextPageToken-clone"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableQueryNextPageToken-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableQueryNextPageToken$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
