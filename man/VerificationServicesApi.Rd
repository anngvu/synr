% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/verification_services_api.R
\docType{class}
\name{VerificationServicesApi}
\alias{VerificationServicesApi}
\title{VerificationServices operations}
\format{
An \code{R6Class} generator object
}
\description{
VerificationServicesApi
}
\details{
Synapse REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: v1
Generated by: https://openapi-generator.tech
}
\section{Methods}{

\describe{
\strong{ deleteRepoV1VerificationSubmissionId } \emph{  }

\itemize{
\item \emph{ @param } id numeric


\item status code : 204 | Void


\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1VerificationSubmission } \emph{  }

\itemize{
\item \emph{ @param } verified_user_id numeric
\item \emph{ @param } current_verification_state \link{OrgSagebionetworksRepoModelVerificationVerificationStateEnum}
\item \emph{ @param } limit numeric
\item \emph{ @param } offset numeric
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelVerificationVerificationPagedResults} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelVerificationVerificationPagedResults
\item response headers :

\tabular{ll}{
}
}

\strong{ postRepoV1VerificationSubmission } \emph{  }

\itemize{
\item \emph{ @param } org_sagebionetworks_repo_model_verification_verification_submission \link{OrgSagebionetworksRepoModelVerificationVerificationSubmission}
\item \emph{ @param } notification_unsubscribe_endpoint character
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelVerificationVerificationSubmission} \cr


\item status code : 201 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelVerificationVerificationSubmission
\item response headers :

\tabular{ll}{
}
}

\strong{ postRepoV1VerificationSubmissionIdState } \emph{  }

\itemize{
\item \emph{ @param } id numeric
\item \emph{ @param } org_sagebionetworks_repo_model_verification_verification_state \link{OrgSagebionetworksRepoModelVerificationVerificationState}
\item \emph{ @param } notification_unsubscribe_endpoint character


\item status code : 201 | Void


\item response headers :

\tabular{ll}{
}
}

}
}

\examples{
\dontrun{
####################  deleteRepoV1VerificationSubmissionId  ####################

library(synr)
var_id <- 3.4 # numeric | 

api_instance <- VerificationServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

api_instance$deleteRepoV1VerificationSubmissionId(var_id)


####################  getRepoV1VerificationSubmission  ####################

library(synr)
var_verified_user_id <- 3.4 # numeric | filter on the user requesting verification (optional) (Optional)
var_current_verification_state <- org.sagebionetworks.repo.model.verification.VerificationStateEnum$new() # OrgSagebionetworksRepoModelVerificationVerificationStateEnum | filter on the state of the verification submission (optional) (Optional)
var_limit <- 3.4 # numeric | page size pagination parameter (optional) (Optional)
var_offset <- 3.4 # numeric | page start pagination parameter (zero offset, optional) (Optional)

api_instance <- VerificationServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1VerificationSubmission(verified_user_id = var_verified_user_id, current_verification_state = var_current_verification_state, limit = var_limit, offset = var_offsetdata_file = "result.txt")
result <- api_instance$getRepoV1VerificationSubmission(verified_user_id = var_verified_user_id, current_verification_state = var_current_verification_state, limit = var_limit, offset = var_offset)
dput(result)


####################  postRepoV1VerificationSubmission  ####################

library(synr)
var_org_sagebionetworks_repo_model_verification_verification_submission <- org.sagebionetworks.repo.model.verification.VerificationSubmission$new("id_example", "createdOn_example", "createdBy_example", "firstName_example", "lastName_example", c("emails_example"), "notificationEmail_example", "location_example", "company_example", "orcid_example", c(org.sagebionetworks.repo.model.verification.VerificationState$new("createdOn_example", "createdBy_example", "state_example", "reason_example", "notes_example")), c(org.sagebionetworks.repo.model.verification.AttachmentMetadata$new("fileName_example", "id_example"))) # OrgSagebionetworksRepoModelVerificationVerificationSubmission | 
var_notification_unsubscribe_endpoint <- "notification_unsubscribe_endpoint_example" # character |  (Optional)

api_instance <- VerificationServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$postRepoV1VerificationSubmission(var_org_sagebionetworks_repo_model_verification_verification_submission, notification_unsubscribe_endpoint = var_notification_unsubscribe_endpointdata_file = "result.txt")
result <- api_instance$postRepoV1VerificationSubmission(var_org_sagebionetworks_repo_model_verification_verification_submission, notification_unsubscribe_endpoint = var_notification_unsubscribe_endpoint)
dput(result)


####################  postRepoV1VerificationSubmissionIdState  ####################

library(synr)
var_id <- 3.4 # numeric | the ID of the verification submission
var_org_sagebionetworks_repo_model_verification_verification_state <- org.sagebionetworks.repo.model.verification.VerificationState$new("createdOn_example", "createdBy_example", "state_example", "reason_example", "notes_example") # OrgSagebionetworksRepoModelVerificationVerificationState | 
var_notification_unsubscribe_endpoint <- "notification_unsubscribe_endpoint_example" # character | the portal prefix for one-click email unsubscription (Optional)

api_instance <- VerificationServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

api_instance$postRepoV1VerificationSubmissionIdState(var_id, var_org_sagebionetworks_repo_model_verification_verification_state, notification_unsubscribe_endpoint = var_notification_unsubscribe_endpoint)


}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{api_client}}{Handles the client-server communication.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-VerificationServicesApi-new}{\code{VerificationServicesApi$new()}}
\item \href{#method-VerificationServicesApi-deleteRepoV1VerificationSubmissionId}{\code{VerificationServicesApi$deleteRepoV1VerificationSubmissionId()}}
\item \href{#method-VerificationServicesApi-deleteRepoV1VerificationSubmissionIdWithHttpInfo}{\code{VerificationServicesApi$deleteRepoV1VerificationSubmissionIdWithHttpInfo()}}
\item \href{#method-VerificationServicesApi-getRepoV1VerificationSubmission}{\code{VerificationServicesApi$getRepoV1VerificationSubmission()}}
\item \href{#method-VerificationServicesApi-getRepoV1VerificationSubmissionWithHttpInfo}{\code{VerificationServicesApi$getRepoV1VerificationSubmissionWithHttpInfo()}}
\item \href{#method-VerificationServicesApi-postRepoV1VerificationSubmission}{\code{VerificationServicesApi$postRepoV1VerificationSubmission()}}
\item \href{#method-VerificationServicesApi-postRepoV1VerificationSubmissionWithHttpInfo}{\code{VerificationServicesApi$postRepoV1VerificationSubmissionWithHttpInfo()}}
\item \href{#method-VerificationServicesApi-postRepoV1VerificationSubmissionIdState}{\code{VerificationServicesApi$postRepoV1VerificationSubmissionIdState()}}
\item \href{#method-VerificationServicesApi-postRepoV1VerificationSubmissionIdStateWithHttpInfo}{\code{VerificationServicesApi$postRepoV1VerificationSubmissionIdStateWithHttpInfo()}}
\item \href{#method-VerificationServicesApi-clone}{\code{VerificationServicesApi$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-VerificationServicesApi-new"></a>}}
\if{latex}{\out{\hypertarget{method-VerificationServicesApi-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new VerificationServicesApi.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{VerificationServicesApi$new(api_client)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{api_client}}{An instance of API client.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-VerificationServicesApi-deleteRepoV1VerificationSubmissionId"></a>}}
\if{latex}{\out{\hypertarget{method-VerificationServicesApi-deleteRepoV1VerificationSubmissionId}{}}}
\subsection{Method \code{deleteRepoV1VerificationSubmissionId()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{VerificationServicesApi$deleteRepoV1VerificationSubmissionId(id, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
void
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-VerificationServicesApi-deleteRepoV1VerificationSubmissionIdWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-VerificationServicesApi-deleteRepoV1VerificationSubmissionIdWithHttpInfo}{}}}
\subsection{Method \code{deleteRepoV1VerificationSubmissionIdWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{VerificationServicesApi$deleteRepoV1VerificationSubmissionIdWithHttpInfo(
  id,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (void) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-VerificationServicesApi-getRepoV1VerificationSubmission"></a>}}
\if{latex}{\out{\hypertarget{method-VerificationServicesApi-getRepoV1VerificationSubmission}{}}}
\subsection{Method \code{getRepoV1VerificationSubmission()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{VerificationServicesApi$getRepoV1VerificationSubmission(
  verified_user_id = NULL,
  current_verification_state = NULL,
  limit = NULL,
  offset = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{verified_user_id}}{(optional) filter on the user requesting verification (optional)}

\item{\code{current_verification_state}}{(optional) filter on the state of the verification submission (optional)}

\item{\code{limit}}{(optional) page size pagination parameter (optional)}

\item{\code{offset}}{(optional) page start pagination parameter (zero offset, optional)}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelVerificationVerificationPagedResults
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-VerificationServicesApi-getRepoV1VerificationSubmissionWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-VerificationServicesApi-getRepoV1VerificationSubmissionWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1VerificationSubmissionWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{VerificationServicesApi$getRepoV1VerificationSubmissionWithHttpInfo(
  verified_user_id = NULL,
  current_verification_state = NULL,
  limit = NULL,
  offset = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{verified_user_id}}{(optional) filter on the user requesting verification (optional)}

\item{\code{current_verification_state}}{(optional) filter on the state of the verification submission (optional)}

\item{\code{limit}}{(optional) page size pagination parameter (optional)}

\item{\code{offset}}{(optional) page start pagination parameter (zero offset, optional)}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelVerificationVerificationPagedResults) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-VerificationServicesApi-postRepoV1VerificationSubmission"></a>}}
\if{latex}{\out{\hypertarget{method-VerificationServicesApi-postRepoV1VerificationSubmission}{}}}
\subsection{Method \code{postRepoV1VerificationSubmission()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{VerificationServicesApi$postRepoV1VerificationSubmission(
  org_sagebionetworks_repo_model_verification_verification_submission,
  notification_unsubscribe_endpoint = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org_sagebionetworks_repo_model_verification_verification_submission}}{}

\item{\code{notification_unsubscribe_endpoint}}{(optional) No description}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelVerificationVerificationSubmission
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-VerificationServicesApi-postRepoV1VerificationSubmissionWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-VerificationServicesApi-postRepoV1VerificationSubmissionWithHttpInfo}{}}}
\subsection{Method \code{postRepoV1VerificationSubmissionWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{VerificationServicesApi$postRepoV1VerificationSubmissionWithHttpInfo(
  org_sagebionetworks_repo_model_verification_verification_submission,
  notification_unsubscribe_endpoint = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org_sagebionetworks_repo_model_verification_verification_submission}}{}

\item{\code{notification_unsubscribe_endpoint}}{(optional) No description}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelVerificationVerificationSubmission) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-VerificationServicesApi-postRepoV1VerificationSubmissionIdState"></a>}}
\if{latex}{\out{\hypertarget{method-VerificationServicesApi-postRepoV1VerificationSubmissionIdState}{}}}
\subsection{Method \code{postRepoV1VerificationSubmissionIdState()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{VerificationServicesApi$postRepoV1VerificationSubmissionIdState(
  id,
  org_sagebionetworks_repo_model_verification_verification_state,
  notification_unsubscribe_endpoint = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{the ID of the verification submission}

\item{\code{org_sagebionetworks_repo_model_verification_verification_state}}{}

\item{\code{notification_unsubscribe_endpoint}}{(optional) the portal prefix for one-click email unsubscription}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
void
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-VerificationServicesApi-postRepoV1VerificationSubmissionIdStateWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-VerificationServicesApi-postRepoV1VerificationSubmissionIdStateWithHttpInfo}{}}}
\subsection{Method \code{postRepoV1VerificationSubmissionIdStateWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{VerificationServicesApi$postRepoV1VerificationSubmissionIdStateWithHttpInfo(
  id,
  org_sagebionetworks_repo_model_verification_verification_state,
  notification_unsubscribe_endpoint = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{the ID of the verification submission}

\item{\code{org_sagebionetworks_repo_model_verification_verification_state}}{}

\item{\code{notification_unsubscribe_endpoint}}{(optional) the portal prefix for one-click email unsubscription}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (void) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-VerificationServicesApi-clone"></a>}}
\if{latex}{\out{\hypertarget{method-VerificationServicesApi-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{VerificationServicesApi$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
