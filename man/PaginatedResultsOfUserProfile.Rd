% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/paginated_results_of_user_profile.R
\docType{class}
\name{PaginatedResultsOfUserProfile}
\alias{PaginatedResultsOfUserProfile}
\title{PaginatedResultsOfUserProfile}
\format{
An \code{R6Class} generator object
}
\description{
PaginatedResultsOfUserProfile Class

PaginatedResultsOfUserProfile Class
}
\details{
Create a new PaginatedResultsOfUserProfile
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{totalNumberOfResults}}{integer [optional]}

\item{\code{results}}{list(\link{OrgSagebionetworksRepoModelUserProfile}) [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-PaginatedResultsOfUserProfile-new}{\code{PaginatedResultsOfUserProfile$new()}}
\item \href{#method-PaginatedResultsOfUserProfile-toJSON}{\code{PaginatedResultsOfUserProfile$toJSON()}}
\item \href{#method-PaginatedResultsOfUserProfile-fromJSON}{\code{PaginatedResultsOfUserProfile$fromJSON()}}
\item \href{#method-PaginatedResultsOfUserProfile-toJSONString}{\code{PaginatedResultsOfUserProfile$toJSONString()}}
\item \href{#method-PaginatedResultsOfUserProfile-fromJSONString}{\code{PaginatedResultsOfUserProfile$fromJSONString()}}
\item \href{#method-PaginatedResultsOfUserProfile-validateJSON}{\code{PaginatedResultsOfUserProfile$validateJSON()}}
\item \href{#method-PaginatedResultsOfUserProfile-toString}{\code{PaginatedResultsOfUserProfile$toString()}}
\item \href{#method-PaginatedResultsOfUserProfile-isValid}{\code{PaginatedResultsOfUserProfile$isValid()}}
\item \href{#method-PaginatedResultsOfUserProfile-getInvalidFields}{\code{PaginatedResultsOfUserProfile$getInvalidFields()}}
\item \href{#method-PaginatedResultsOfUserProfile-print}{\code{PaginatedResultsOfUserProfile$print()}}
\item \href{#method-PaginatedResultsOfUserProfile-clone}{\code{PaginatedResultsOfUserProfile$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfUserProfile-new"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfUserProfile-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new PaginatedResultsOfUserProfile class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfUserProfile$new(
  totalNumberOfResults = NULL,
  results = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{totalNumberOfResults}}{totalNumberOfResults}

\item{\code{results}}{results}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfUserProfile-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfUserProfile-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfUserProfile$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
PaginatedResultsOfUserProfile in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfUserProfile-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfUserProfile-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of PaginatedResultsOfUserProfile
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfUserProfile$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of PaginatedResultsOfUserProfile
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfUserProfile-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfUserProfile-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfUserProfile$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
PaginatedResultsOfUserProfile in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfUserProfile-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfUserProfile-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of PaginatedResultsOfUserProfile
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfUserProfile$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of PaginatedResultsOfUserProfile
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfUserProfile-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfUserProfile-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to PaginatedResultsOfUserProfile and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfUserProfile$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfUserProfile-toString"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfUserProfile-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfUserProfile$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of PaginatedResultsOfUserProfile
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfUserProfile-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfUserProfile-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfUserProfile$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfUserProfile-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfUserProfile-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfUserProfile$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfUserProfile-print"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfUserProfile-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfUserProfile$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfUserProfile-clone"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfUserProfile-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfUserProfile$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
