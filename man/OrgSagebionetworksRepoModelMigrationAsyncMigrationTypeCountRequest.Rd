% Generated by roxygen2: do not edit by hand
% Please edit documentation in
%   R/org_sagebionetworks_repo_model_migration_async_migration_type_count_request.R
\docType{class}
\name{OrgSagebionetworksRepoModelMigrationAsyncMigrationTypeCountRequest}
\alias{OrgSagebionetworksRepoModelMigrationAsyncMigrationTypeCountRequest}
\title{OrgSagebionetworksRepoModelMigrationAsyncMigrationTypeCountRequest}
\format{
An \code{R6Class} generator object
}
\description{
Request count for migration type.

OrgSagebionetworksRepoModelMigrationAsyncMigrationTypeCountRequest Class
}
\details{
Create a new OrgSagebionetworksRepoModelMigrationAsyncMigrationTypeCountRequest
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{concreteType}}{character}

\item{\code{type}}{character [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-OrgSagebionetworksRepoModelMigrationAsyncMigrationTypeCountRequest-new}{\code{OrgSagebionetworksRepoModelMigrationAsyncMigrationTypeCountRequest$new()}}
\item \href{#method-OrgSagebionetworksRepoModelMigrationAsyncMigrationTypeCountRequest-toJSON}{\code{OrgSagebionetworksRepoModelMigrationAsyncMigrationTypeCountRequest$toJSON()}}
\item \href{#method-OrgSagebionetworksRepoModelMigrationAsyncMigrationTypeCountRequest-fromJSON}{\code{OrgSagebionetworksRepoModelMigrationAsyncMigrationTypeCountRequest$fromJSON()}}
\item \href{#method-OrgSagebionetworksRepoModelMigrationAsyncMigrationTypeCountRequest-toJSONString}{\code{OrgSagebionetworksRepoModelMigrationAsyncMigrationTypeCountRequest$toJSONString()}}
\item \href{#method-OrgSagebionetworksRepoModelMigrationAsyncMigrationTypeCountRequest-fromJSONString}{\code{OrgSagebionetworksRepoModelMigrationAsyncMigrationTypeCountRequest$fromJSONString()}}
\item \href{#method-OrgSagebionetworksRepoModelMigrationAsyncMigrationTypeCountRequest-validateJSON}{\code{OrgSagebionetworksRepoModelMigrationAsyncMigrationTypeCountRequest$validateJSON()}}
\item \href{#method-OrgSagebionetworksRepoModelMigrationAsyncMigrationTypeCountRequest-toString}{\code{OrgSagebionetworksRepoModelMigrationAsyncMigrationTypeCountRequest$toString()}}
\item \href{#method-OrgSagebionetworksRepoModelMigrationAsyncMigrationTypeCountRequest-isValid}{\code{OrgSagebionetworksRepoModelMigrationAsyncMigrationTypeCountRequest$isValid()}}
\item \href{#method-OrgSagebionetworksRepoModelMigrationAsyncMigrationTypeCountRequest-getInvalidFields}{\code{OrgSagebionetworksRepoModelMigrationAsyncMigrationTypeCountRequest$getInvalidFields()}}
\item \href{#method-OrgSagebionetworksRepoModelMigrationAsyncMigrationTypeCountRequest-print}{\code{OrgSagebionetworksRepoModelMigrationAsyncMigrationTypeCountRequest$print()}}
\item \href{#method-OrgSagebionetworksRepoModelMigrationAsyncMigrationTypeCountRequest-clone}{\code{OrgSagebionetworksRepoModelMigrationAsyncMigrationTypeCountRequest$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelMigrationAsyncMigrationTypeCountRequest-new"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelMigrationAsyncMigrationTypeCountRequest-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new OrgSagebionetworksRepoModelMigrationAsyncMigrationTypeCountRequest class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelMigrationAsyncMigrationTypeCountRequest$new(
  concreteType,
  type = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{concreteType}}{concreteType}

\item{\code{type}}{type}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelMigrationAsyncMigrationTypeCountRequest-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelMigrationAsyncMigrationTypeCountRequest-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelMigrationAsyncMigrationTypeCountRequest$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
OrgSagebionetworksRepoModelMigrationAsyncMigrationTypeCountRequest in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelMigrationAsyncMigrationTypeCountRequest-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelMigrationAsyncMigrationTypeCountRequest-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of OrgSagebionetworksRepoModelMigrationAsyncMigrationTypeCountRequest
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelMigrationAsyncMigrationTypeCountRequest$fromJSON(
  input_json
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of OrgSagebionetworksRepoModelMigrationAsyncMigrationTypeCountRequest
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelMigrationAsyncMigrationTypeCountRequest-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelMigrationAsyncMigrationTypeCountRequest-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelMigrationAsyncMigrationTypeCountRequest$toJSONString(
  
)}\if{html}{\out{</div>}}
}

\subsection{Returns}{
OrgSagebionetworksRepoModelMigrationAsyncMigrationTypeCountRequest in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelMigrationAsyncMigrationTypeCountRequest-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelMigrationAsyncMigrationTypeCountRequest-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of OrgSagebionetworksRepoModelMigrationAsyncMigrationTypeCountRequest
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelMigrationAsyncMigrationTypeCountRequest$fromJSONString(
  input_json
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of OrgSagebionetworksRepoModelMigrationAsyncMigrationTypeCountRequest
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelMigrationAsyncMigrationTypeCountRequest-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelMigrationAsyncMigrationTypeCountRequest-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to OrgSagebionetworksRepoModelMigrationAsyncMigrationTypeCountRequest and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelMigrationAsyncMigrationTypeCountRequest$validateJSON(
  input
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelMigrationAsyncMigrationTypeCountRequest-toString"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelMigrationAsyncMigrationTypeCountRequest-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelMigrationAsyncMigrationTypeCountRequest$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of OrgSagebionetworksRepoModelMigrationAsyncMigrationTypeCountRequest
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelMigrationAsyncMigrationTypeCountRequest-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelMigrationAsyncMigrationTypeCountRequest-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelMigrationAsyncMigrationTypeCountRequest$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelMigrationAsyncMigrationTypeCountRequest-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelMigrationAsyncMigrationTypeCountRequest-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelMigrationAsyncMigrationTypeCountRequest$getInvalidFields(
  
)}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelMigrationAsyncMigrationTypeCountRequest-print"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelMigrationAsyncMigrationTypeCountRequest-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelMigrationAsyncMigrationTypeCountRequest$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelMigrationAsyncMigrationTypeCountRequest-clone"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelMigrationAsyncMigrationTypeCountRequest-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelMigrationAsyncMigrationTypeCountRequest$clone(
  deep = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
