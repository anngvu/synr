% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/storage_report_services_api.R
\docType{class}
\name{StorageReportServicesApi}
\alias{StorageReportServicesApi}
\title{StorageReportServices operations}
\format{
An \code{R6Class} generator object
}
\description{
StorageReportServicesApi
}
\details{
Synapse REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: v1
Generated by: https://openapi-generator.tech
}
\section{Methods}{

\describe{
\strong{ getRepoV1StorageReportAsyncGetAsyncToken } \emph{  }

\itemize{
\item \emph{ @param } async_token character
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelReportDownloadStorageReportResponse} \cr


\item status code : 200 | The results of the call, including a pre-signed URL to download the report.

\item return type : OrgSagebionetworksRepoModelReportDownloadStorageReportResponse
\item response headers :

\tabular{ll}{
}
}

\strong{ postRepoV1StorageReportAsyncStart } \emph{  }

\itemize{
\item \emph{ @param } org_sagebionetworks_repo_model_report_download_storage_report_request \link{OrgSagebionetworksRepoModelReportDownloadStorageReportRequest}
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelAsynchAsyncJobId} \cr


\item status code : 202 | The asynchronous job ID

\item return type : OrgSagebionetworksRepoModelAsynchAsyncJobId
\item response headers :

\tabular{ll}{
}
}

}
}

\examples{
\dontrun{
####################  getRepoV1StorageReportAsyncGetAsyncToken  ####################

library(synr)
var_async_token <- "async_token_example" # character | The async job token from the create/update call

api_instance <- StorageReportServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1StorageReportAsyncGetAsyncToken(var_async_tokendata_file = "result.txt")
result <- api_instance$getRepoV1StorageReportAsyncGetAsyncToken(var_async_token)
dput(result)


####################  postRepoV1StorageReportAsyncStart  ####################

library(synr)
var_org_sagebionetworks_repo_model_report_download_storage_report_request <- org.sagebionetworks.repo.model.report.DownloadStorageReportRequest$new("org.sagebionetworks.repo.model.report.DownloadStorageReportRequest", "reportType_example") # OrgSagebionetworksRepoModelReportDownloadStorageReportRequest | 

api_instance <- StorageReportServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$postRepoV1StorageReportAsyncStart(var_org_sagebionetworks_repo_model_report_download_storage_report_requestdata_file = "result.txt")
result <- api_instance$postRepoV1StorageReportAsyncStart(var_org_sagebionetworks_repo_model_report_download_storage_report_request)
dput(result)


}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{api_client}}{Handles the client-server communication.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-StorageReportServicesApi-new}{\code{StorageReportServicesApi$new()}}
\item \href{#method-StorageReportServicesApi-getRepoV1StorageReportAsyncGetAsyncToken}{\code{StorageReportServicesApi$getRepoV1StorageReportAsyncGetAsyncToken()}}
\item \href{#method-StorageReportServicesApi-getRepoV1StorageReportAsyncGetAsyncTokenWithHttpInfo}{\code{StorageReportServicesApi$getRepoV1StorageReportAsyncGetAsyncTokenWithHttpInfo()}}
\item \href{#method-StorageReportServicesApi-postRepoV1StorageReportAsyncStart}{\code{StorageReportServicesApi$postRepoV1StorageReportAsyncStart()}}
\item \href{#method-StorageReportServicesApi-postRepoV1StorageReportAsyncStartWithHttpInfo}{\code{StorageReportServicesApi$postRepoV1StorageReportAsyncStartWithHttpInfo()}}
\item \href{#method-StorageReportServicesApi-clone}{\code{StorageReportServicesApi$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-StorageReportServicesApi-new"></a>}}
\if{latex}{\out{\hypertarget{method-StorageReportServicesApi-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new StorageReportServicesApi.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{StorageReportServicesApi$new(api_client)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{api_client}}{An instance of API client.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-StorageReportServicesApi-getRepoV1StorageReportAsyncGetAsyncToken"></a>}}
\if{latex}{\out{\hypertarget{method-StorageReportServicesApi-getRepoV1StorageReportAsyncGetAsyncToken}{}}}
\subsection{Method \code{getRepoV1StorageReportAsyncGetAsyncToken()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{StorageReportServicesApi$getRepoV1StorageReportAsyncGetAsyncToken(
  async_token,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{async_token}}{The async job token from the create/update call}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelReportDownloadStorageReportResponse
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-StorageReportServicesApi-getRepoV1StorageReportAsyncGetAsyncTokenWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-StorageReportServicesApi-getRepoV1StorageReportAsyncGetAsyncTokenWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1StorageReportAsyncGetAsyncTokenWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{StorageReportServicesApi$getRepoV1StorageReportAsyncGetAsyncTokenWithHttpInfo(
  async_token,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{async_token}}{The async job token from the create/update call}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelReportDownloadStorageReportResponse) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-StorageReportServicesApi-postRepoV1StorageReportAsyncStart"></a>}}
\if{latex}{\out{\hypertarget{method-StorageReportServicesApi-postRepoV1StorageReportAsyncStart}{}}}
\subsection{Method \code{postRepoV1StorageReportAsyncStart()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{StorageReportServicesApi$postRepoV1StorageReportAsyncStart(
  org_sagebionetworks_repo_model_report_download_storage_report_request,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org_sagebionetworks_repo_model_report_download_storage_report_request}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelAsynchAsyncJobId
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-StorageReportServicesApi-postRepoV1StorageReportAsyncStartWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-StorageReportServicesApi-postRepoV1StorageReportAsyncStartWithHttpInfo}{}}}
\subsection{Method \code{postRepoV1StorageReportAsyncStartWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{StorageReportServicesApi$postRepoV1StorageReportAsyncStartWithHttpInfo(
  org_sagebionetworks_repo_model_report_download_storage_report_request,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org_sagebionetworks_repo_model_report_download_storage_report_request}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelAsynchAsyncJobId) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-StorageReportServicesApi-clone"></a>}}
\if{latex}{\out{\hypertarget{method-StorageReportServicesApi-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{StorageReportServicesApi$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
