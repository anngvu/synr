% Generated by roxygen2: do not edit by hand
% Please edit documentation in
%   R/org_sagebionetworks_repo_model_table_upload_to_table_result.R
\docType{class}
\name{OrgSagebionetworksRepoModelTableUploadToTableResult}
\alias{OrgSagebionetworksRepoModelTableUploadToTableResult}
\title{OrgSagebionetworksRepoModelTableUploadToTableResult}
\format{
An \code{R6Class} generator object
}
\description{
The result of a CSV table upload job.

OrgSagebionetworksRepoModelTableUploadToTableResult Class
}
\details{
Create a new OrgSagebionetworksRepoModelTableUploadToTableResult
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{concreteType}}{character}

\item{\code{rowsProcessed}}{integer [optional]}

\item{\code{etag}}{character [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-OrgSagebionetworksRepoModelTableUploadToTableResult-new}{\code{OrgSagebionetworksRepoModelTableUploadToTableResult$new()}}
\item \href{#method-OrgSagebionetworksRepoModelTableUploadToTableResult-toJSON}{\code{OrgSagebionetworksRepoModelTableUploadToTableResult$toJSON()}}
\item \href{#method-OrgSagebionetworksRepoModelTableUploadToTableResult-fromJSON}{\code{OrgSagebionetworksRepoModelTableUploadToTableResult$fromJSON()}}
\item \href{#method-OrgSagebionetworksRepoModelTableUploadToTableResult-toJSONString}{\code{OrgSagebionetworksRepoModelTableUploadToTableResult$toJSONString()}}
\item \href{#method-OrgSagebionetworksRepoModelTableUploadToTableResult-fromJSONString}{\code{OrgSagebionetworksRepoModelTableUploadToTableResult$fromJSONString()}}
\item \href{#method-OrgSagebionetworksRepoModelTableUploadToTableResult-validateJSON}{\code{OrgSagebionetworksRepoModelTableUploadToTableResult$validateJSON()}}
\item \href{#method-OrgSagebionetworksRepoModelTableUploadToTableResult-toString}{\code{OrgSagebionetworksRepoModelTableUploadToTableResult$toString()}}
\item \href{#method-OrgSagebionetworksRepoModelTableUploadToTableResult-isValid}{\code{OrgSagebionetworksRepoModelTableUploadToTableResult$isValid()}}
\item \href{#method-OrgSagebionetworksRepoModelTableUploadToTableResult-getInvalidFields}{\code{OrgSagebionetworksRepoModelTableUploadToTableResult$getInvalidFields()}}
\item \href{#method-OrgSagebionetworksRepoModelTableUploadToTableResult-print}{\code{OrgSagebionetworksRepoModelTableUploadToTableResult$print()}}
\item \href{#method-OrgSagebionetworksRepoModelTableUploadToTableResult-clone}{\code{OrgSagebionetworksRepoModelTableUploadToTableResult$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableUploadToTableResult-new"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableUploadToTableResult-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new OrgSagebionetworksRepoModelTableUploadToTableResult class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableUploadToTableResult$new(
  concreteType,
  rowsProcessed = NULL,
  etag = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{concreteType}}{concreteType}

\item{\code{rowsProcessed}}{rowsProcessed}

\item{\code{etag}}{etag}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableUploadToTableResult-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableUploadToTableResult-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableUploadToTableResult$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
OrgSagebionetworksRepoModelTableUploadToTableResult in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableUploadToTableResult-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableUploadToTableResult-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of OrgSagebionetworksRepoModelTableUploadToTableResult
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableUploadToTableResult$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of OrgSagebionetworksRepoModelTableUploadToTableResult
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableUploadToTableResult-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableUploadToTableResult-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableUploadToTableResult$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
OrgSagebionetworksRepoModelTableUploadToTableResult in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableUploadToTableResult-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableUploadToTableResult-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of OrgSagebionetworksRepoModelTableUploadToTableResult
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableUploadToTableResult$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of OrgSagebionetworksRepoModelTableUploadToTableResult
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableUploadToTableResult-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableUploadToTableResult-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to OrgSagebionetworksRepoModelTableUploadToTableResult and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableUploadToTableResult$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableUploadToTableResult-toString"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableUploadToTableResult-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableUploadToTableResult$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of OrgSagebionetworksRepoModelTableUploadToTableResult
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableUploadToTableResult-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableUploadToTableResult-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableUploadToTableResult$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableUploadToTableResult-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableUploadToTableResult-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableUploadToTableResult$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableUploadToTableResult-print"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableUploadToTableResult-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableUploadToTableResult$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableUploadToTableResult-clone"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableUploadToTableResult-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableUploadToTableResult$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
