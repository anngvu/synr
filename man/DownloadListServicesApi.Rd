% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/download_list_services_api.R
\docType{class}
\name{DownloadListServicesApi}
\alias{DownloadListServicesApi}
\title{DownloadListServices operations}
\format{
An \code{R6Class} generator object
}
\description{
DownloadListServicesApi
}
\details{
Synapse REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: v1
Generated by: https://openapi-generator.tech
}
\section{Methods}{

\describe{
\strong{ deleteRepoV1DownloadList } \emph{  }

\itemize{


\item status code : 200 | Void


\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1DownloadListAddAsyncGetAsyncToken } \emph{  }

\itemize{
\item \emph{ @param } async_token character
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelDownloadAddToDownloadListResponse} \cr


\item status code : 201 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelDownloadAddToDownloadListResponse
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1DownloadListManifestAsyncGetAsyncToken } \emph{  }

\itemize{
\item \emph{ @param } async_token character
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelDownloadDownloadListManifestResponse} \cr


\item status code : 201 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelDownloadDownloadListManifestResponse
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1DownloadListPackageAsyncGetAsyncToken } \emph{  }

\itemize{
\item \emph{ @param } async_token character
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelDownloadDownloadListPackageResponse} \cr


\item status code : 201 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelDownloadDownloadListPackageResponse
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1DownloadListQueryAsyncGetAsyncToken } \emph{  }

\itemize{
\item \emph{ @param } async_token character
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelDownloadDownloadListQueryResponse} \cr


\item status code : 201 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelDownloadDownloadListQueryResponse
\item response headers :

\tabular{ll}{
}
}

\strong{ postRepoV1DownloadListAdd } \emph{  }

\itemize{
\item \emph{ @param } org_sagebionetworks_repo_model_download_add_batch_of_files_to_download_list_request \link{OrgSagebionetworksRepoModelDownloadAddBatchOfFilesToDownloadListRequest}
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelDownloadAddBatchOfFilesToDownloadListResponse} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelDownloadAddBatchOfFilesToDownloadListResponse
\item response headers :

\tabular{ll}{
}
}

\strong{ postRepoV1DownloadListAddAsyncStart } \emph{  }

\itemize{
\item \emph{ @param } org_sagebionetworks_repo_model_download_add_to_download_list_request \link{OrgSagebionetworksRepoModelDownloadAddToDownloadListRequest}
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelAsynchAsyncJobId} \cr


\item status code : 201 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelAsynchAsyncJobId
\item response headers :

\tabular{ll}{
}
}

\strong{ postRepoV1DownloadListManifestAsyncStart } \emph{  }

\itemize{
\item \emph{ @param } org_sagebionetworks_repo_model_download_download_list_manifest_request \link{OrgSagebionetworksRepoModelDownloadDownloadListManifestRequest}
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelAsynchAsyncJobId} \cr


\item status code : 201 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelAsynchAsyncJobId
\item response headers :

\tabular{ll}{
}
}

\strong{ postRepoV1DownloadListPackageAsyncStart } \emph{  }

\itemize{
\item \emph{ @param } org_sagebionetworks_repo_model_download_download_list_package_request \link{OrgSagebionetworksRepoModelDownloadDownloadListPackageRequest}
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelAsynchAsyncJobId} \cr


\item status code : 201 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelAsynchAsyncJobId
\item response headers :

\tabular{ll}{
}
}

\strong{ postRepoV1DownloadListQueryAsyncStart } \emph{  }

\itemize{
\item \emph{ @param } org_sagebionetworks_repo_model_download_download_list_query_request \link{OrgSagebionetworksRepoModelDownloadDownloadListQueryRequest}
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelAsynchAsyncJobId} \cr


\item status code : 201 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelAsynchAsyncJobId
\item response headers :

\tabular{ll}{
}
}

\strong{ postRepoV1DownloadListRemove } \emph{  }

\itemize{
\item \emph{ @param } org_sagebionetworks_repo_model_download_remove_batch_of_files_from_download_list_request \link{OrgSagebionetworksRepoModelDownloadRemoveBatchOfFilesFromDownloadListRequest}
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelDownloadRemoveBatchOfFilesFromDownloadListResponse} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelDownloadRemoveBatchOfFilesFromDownloadListResponse
\item response headers :

\tabular{ll}{
}
}

}
}

\examples{
\dontrun{
####################  deleteRepoV1DownloadList  ####################

library(synr)

api_instance <- DownloadListServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

api_instance$deleteRepoV1DownloadList()


####################  getRepoV1DownloadListAddAsyncGetAsyncToken  ####################

library(synr)
var_async_token <- "async_token_example" # character | 

api_instance <- DownloadListServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1DownloadListAddAsyncGetAsyncToken(var_async_tokendata_file = "result.txt")
result <- api_instance$getRepoV1DownloadListAddAsyncGetAsyncToken(var_async_token)
dput(result)


####################  getRepoV1DownloadListManifestAsyncGetAsyncToken  ####################

library(synr)
var_async_token <- "async_token_example" # character | 

api_instance <- DownloadListServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1DownloadListManifestAsyncGetAsyncToken(var_async_tokendata_file = "result.txt")
result <- api_instance$getRepoV1DownloadListManifestAsyncGetAsyncToken(var_async_token)
dput(result)


####################  getRepoV1DownloadListPackageAsyncGetAsyncToken  ####################

library(synr)
var_async_token <- "async_token_example" # character | 

api_instance <- DownloadListServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1DownloadListPackageAsyncGetAsyncToken(var_async_tokendata_file = "result.txt")
result <- api_instance$getRepoV1DownloadListPackageAsyncGetAsyncToken(var_async_token)
dput(result)


####################  getRepoV1DownloadListQueryAsyncGetAsyncToken  ####################

library(synr)
var_async_token <- "async_token_example" # character | 

api_instance <- DownloadListServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1DownloadListQueryAsyncGetAsyncToken(var_async_tokendata_file = "result.txt")
result <- api_instance$getRepoV1DownloadListQueryAsyncGetAsyncToken(var_async_token)
dput(result)


####################  postRepoV1DownloadListAdd  ####################

library(synr)
var_org_sagebionetworks_repo_model_download_add_batch_of_files_to_download_list_request <- org.sagebionetworks.repo.model.download.AddBatchOfFilesToDownloadListRequest$new(c(org.sagebionetworks.repo.model.download.DownloadListItem$new("fileEntityId_example", 123))) # OrgSagebionetworksRepoModelDownloadAddBatchOfFilesToDownloadListRequest | 

api_instance <- DownloadListServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$postRepoV1DownloadListAdd(var_org_sagebionetworks_repo_model_download_add_batch_of_files_to_download_list_requestdata_file = "result.txt")
result <- api_instance$postRepoV1DownloadListAdd(var_org_sagebionetworks_repo_model_download_add_batch_of_files_to_download_list_request)
dput(result)


####################  postRepoV1DownloadListAddAsyncStart  ####################

library(synr)
var_org_sagebionetworks_repo_model_download_add_to_download_list_request <- org.sagebionetworks.repo.model.download.AddToDownloadListRequest$new("org.sagebionetworks.repo.model.download.AddToDownloadListRequest", org.sagebionetworks.repo.model.table.Query$new("sql_example", c(org.sagebionetworks.repo.model.table.QueryFilter$new("concreteType_example", "isDefiningCondition_example", c("values_example"), "columnName_example", "function_example", "operator_example", "searchExpression_example")), c(org.sagebionetworks.repo.model.table.FacetColumnRequest$new("concreteType_example", "columnName_example", "jsonPath_example", c("facetValues_example"), "min_example", "max_example")), "includeEntityEtag_example", 123, 123, 123, c(org.sagebionetworks.repo.model.table.SortItem$new("column_example", "direction_example"))), "parentId_example", "useVersionNumber_example") # OrgSagebionetworksRepoModelDownloadAddToDownloadListRequest | 

api_instance <- DownloadListServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$postRepoV1DownloadListAddAsyncStart(var_org_sagebionetworks_repo_model_download_add_to_download_list_requestdata_file = "result.txt")
result <- api_instance$postRepoV1DownloadListAddAsyncStart(var_org_sagebionetworks_repo_model_download_add_to_download_list_request)
dput(result)


####################  postRepoV1DownloadListManifestAsyncStart  ####################

library(synr)
var_org_sagebionetworks_repo_model_download_download_list_manifest_request <- org.sagebionetworks.repo.model.download.DownloadListManifestRequest$new("org.sagebionetworks.repo.model.download.DownloadListManifestRequest", org.sagebionetworks.repo.model.table.CsvTableDescriptor$new("separator_example", "quoteCharacter_example", "escapeCharacter_example", "lineEnd_example", "isFirstLineHeader_example")) # OrgSagebionetworksRepoModelDownloadDownloadListManifestRequest | 

api_instance <- DownloadListServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$postRepoV1DownloadListManifestAsyncStart(var_org_sagebionetworks_repo_model_download_download_list_manifest_requestdata_file = "result.txt")
result <- api_instance$postRepoV1DownloadListManifestAsyncStart(var_org_sagebionetworks_repo_model_download_download_list_manifest_request)
dput(result)


####################  postRepoV1DownloadListPackageAsyncStart  ####################

library(synr)
var_org_sagebionetworks_repo_model_download_download_list_package_request <- org.sagebionetworks.repo.model.download.DownloadListPackageRequest$new("org.sagebionetworks.repo.model.download.DownloadListPackageRequest", "zipFileName_example", "includeManifest_example", org.sagebionetworks.repo.model.table.CsvTableDescriptor$new("separator_example", "quoteCharacter_example", "escapeCharacter_example", "lineEnd_example", "isFirstLineHeader_example")) # OrgSagebionetworksRepoModelDownloadDownloadListPackageRequest | 

api_instance <- DownloadListServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$postRepoV1DownloadListPackageAsyncStart(var_org_sagebionetworks_repo_model_download_download_list_package_requestdata_file = "result.txt")
result <- api_instance$postRepoV1DownloadListPackageAsyncStart(var_org_sagebionetworks_repo_model_download_download_list_package_request)
dput(result)


####################  postRepoV1DownloadListQueryAsyncStart  ####################

library(synr)
var_org_sagebionetworks_repo_model_download_download_list_query_request <- org.sagebionetworks.repo.model.download.DownloadListQueryRequest$new("org.sagebionetworks.repo.model.download.DownloadListQueryRequest", org.sagebionetworks.repo.model.download.QueryRequestDetails$new("concreteType_example", "nextPageToken_example", c(org.sagebionetworks.repo.model.download.Sort$new("field_example", "direction_example")), "filter_example")) # OrgSagebionetworksRepoModelDownloadDownloadListQueryRequest | 

api_instance <- DownloadListServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$postRepoV1DownloadListQueryAsyncStart(var_org_sagebionetworks_repo_model_download_download_list_query_requestdata_file = "result.txt")
result <- api_instance$postRepoV1DownloadListQueryAsyncStart(var_org_sagebionetworks_repo_model_download_download_list_query_request)
dput(result)


####################  postRepoV1DownloadListRemove  ####################

library(synr)
var_org_sagebionetworks_repo_model_download_remove_batch_of_files_from_download_list_request <- org.sagebionetworks.repo.model.download.RemoveBatchOfFilesFromDownloadListRequest$new(c(org.sagebionetworks.repo.model.download.DownloadListItem$new("fileEntityId_example", 123))) # OrgSagebionetworksRepoModelDownloadRemoveBatchOfFilesFromDownloadListRequest | 

api_instance <- DownloadListServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$postRepoV1DownloadListRemove(var_org_sagebionetworks_repo_model_download_remove_batch_of_files_from_download_list_requestdata_file = "result.txt")
result <- api_instance$postRepoV1DownloadListRemove(var_org_sagebionetworks_repo_model_download_remove_batch_of_files_from_download_list_request)
dput(result)


}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{api_client}}{Handles the client-server communication.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-DownloadListServicesApi-new}{\code{DownloadListServicesApi$new()}}
\item \href{#method-DownloadListServicesApi-deleteRepoV1DownloadList}{\code{DownloadListServicesApi$deleteRepoV1DownloadList()}}
\item \href{#method-DownloadListServicesApi-deleteRepoV1DownloadListWithHttpInfo}{\code{DownloadListServicesApi$deleteRepoV1DownloadListWithHttpInfo()}}
\item \href{#method-DownloadListServicesApi-getRepoV1DownloadListAddAsyncGetAsyncToken}{\code{DownloadListServicesApi$getRepoV1DownloadListAddAsyncGetAsyncToken()}}
\item \href{#method-DownloadListServicesApi-getRepoV1DownloadListAddAsyncGetAsyncTokenWithHttpInfo}{\code{DownloadListServicesApi$getRepoV1DownloadListAddAsyncGetAsyncTokenWithHttpInfo()}}
\item \href{#method-DownloadListServicesApi-getRepoV1DownloadListManifestAsyncGetAsyncToken}{\code{DownloadListServicesApi$getRepoV1DownloadListManifestAsyncGetAsyncToken()}}
\item \href{#method-DownloadListServicesApi-getRepoV1DownloadListManifestAsyncGetAsyncTokenWithHttpInfo}{\code{DownloadListServicesApi$getRepoV1DownloadListManifestAsyncGetAsyncTokenWithHttpInfo()}}
\item \href{#method-DownloadListServicesApi-getRepoV1DownloadListPackageAsyncGetAsyncToken}{\code{DownloadListServicesApi$getRepoV1DownloadListPackageAsyncGetAsyncToken()}}
\item \href{#method-DownloadListServicesApi-getRepoV1DownloadListPackageAsyncGetAsyncTokenWithHttpInfo}{\code{DownloadListServicesApi$getRepoV1DownloadListPackageAsyncGetAsyncTokenWithHttpInfo()}}
\item \href{#method-DownloadListServicesApi-getRepoV1DownloadListQueryAsyncGetAsyncToken}{\code{DownloadListServicesApi$getRepoV1DownloadListQueryAsyncGetAsyncToken()}}
\item \href{#method-DownloadListServicesApi-getRepoV1DownloadListQueryAsyncGetAsyncTokenWithHttpInfo}{\code{DownloadListServicesApi$getRepoV1DownloadListQueryAsyncGetAsyncTokenWithHttpInfo()}}
\item \href{#method-DownloadListServicesApi-postRepoV1DownloadListAdd}{\code{DownloadListServicesApi$postRepoV1DownloadListAdd()}}
\item \href{#method-DownloadListServicesApi-postRepoV1DownloadListAddWithHttpInfo}{\code{DownloadListServicesApi$postRepoV1DownloadListAddWithHttpInfo()}}
\item \href{#method-DownloadListServicesApi-postRepoV1DownloadListAddAsyncStart}{\code{DownloadListServicesApi$postRepoV1DownloadListAddAsyncStart()}}
\item \href{#method-DownloadListServicesApi-postRepoV1DownloadListAddAsyncStartWithHttpInfo}{\code{DownloadListServicesApi$postRepoV1DownloadListAddAsyncStartWithHttpInfo()}}
\item \href{#method-DownloadListServicesApi-postRepoV1DownloadListManifestAsyncStart}{\code{DownloadListServicesApi$postRepoV1DownloadListManifestAsyncStart()}}
\item \href{#method-DownloadListServicesApi-postRepoV1DownloadListManifestAsyncStartWithHttpInfo}{\code{DownloadListServicesApi$postRepoV1DownloadListManifestAsyncStartWithHttpInfo()}}
\item \href{#method-DownloadListServicesApi-postRepoV1DownloadListPackageAsyncStart}{\code{DownloadListServicesApi$postRepoV1DownloadListPackageAsyncStart()}}
\item \href{#method-DownloadListServicesApi-postRepoV1DownloadListPackageAsyncStartWithHttpInfo}{\code{DownloadListServicesApi$postRepoV1DownloadListPackageAsyncStartWithHttpInfo()}}
\item \href{#method-DownloadListServicesApi-postRepoV1DownloadListQueryAsyncStart}{\code{DownloadListServicesApi$postRepoV1DownloadListQueryAsyncStart()}}
\item \href{#method-DownloadListServicesApi-postRepoV1DownloadListQueryAsyncStartWithHttpInfo}{\code{DownloadListServicesApi$postRepoV1DownloadListQueryAsyncStartWithHttpInfo()}}
\item \href{#method-DownloadListServicesApi-postRepoV1DownloadListRemove}{\code{DownloadListServicesApi$postRepoV1DownloadListRemove()}}
\item \href{#method-DownloadListServicesApi-postRepoV1DownloadListRemoveWithHttpInfo}{\code{DownloadListServicesApi$postRepoV1DownloadListRemoveWithHttpInfo()}}
\item \href{#method-DownloadListServicesApi-clone}{\code{DownloadListServicesApi$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DownloadListServicesApi-new"></a>}}
\if{latex}{\out{\hypertarget{method-DownloadListServicesApi-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new DownloadListServicesApi.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DownloadListServicesApi$new(api_client)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{api_client}}{An instance of API client.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DownloadListServicesApi-deleteRepoV1DownloadList"></a>}}
\if{latex}{\out{\hypertarget{method-DownloadListServicesApi-deleteRepoV1DownloadList}{}}}
\subsection{Method \code{deleteRepoV1DownloadList()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DownloadListServicesApi$deleteRepoV1DownloadList(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
void
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DownloadListServicesApi-deleteRepoV1DownloadListWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-DownloadListServicesApi-deleteRepoV1DownloadListWithHttpInfo}{}}}
\subsection{Method \code{deleteRepoV1DownloadListWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DownloadListServicesApi$deleteRepoV1DownloadListWithHttpInfo(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (void) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DownloadListServicesApi-getRepoV1DownloadListAddAsyncGetAsyncToken"></a>}}
\if{latex}{\out{\hypertarget{method-DownloadListServicesApi-getRepoV1DownloadListAddAsyncGetAsyncToken}{}}}
\subsection{Method \code{getRepoV1DownloadListAddAsyncGetAsyncToken()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DownloadListServicesApi$getRepoV1DownloadListAddAsyncGetAsyncToken(
  async_token,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{async_token}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelDownloadAddToDownloadListResponse
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DownloadListServicesApi-getRepoV1DownloadListAddAsyncGetAsyncTokenWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-DownloadListServicesApi-getRepoV1DownloadListAddAsyncGetAsyncTokenWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1DownloadListAddAsyncGetAsyncTokenWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DownloadListServicesApi$getRepoV1DownloadListAddAsyncGetAsyncTokenWithHttpInfo(
  async_token,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{async_token}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelDownloadAddToDownloadListResponse) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DownloadListServicesApi-getRepoV1DownloadListManifestAsyncGetAsyncToken"></a>}}
\if{latex}{\out{\hypertarget{method-DownloadListServicesApi-getRepoV1DownloadListManifestAsyncGetAsyncToken}{}}}
\subsection{Method \code{getRepoV1DownloadListManifestAsyncGetAsyncToken()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DownloadListServicesApi$getRepoV1DownloadListManifestAsyncGetAsyncToken(
  async_token,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{async_token}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelDownloadDownloadListManifestResponse
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DownloadListServicesApi-getRepoV1DownloadListManifestAsyncGetAsyncTokenWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-DownloadListServicesApi-getRepoV1DownloadListManifestAsyncGetAsyncTokenWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1DownloadListManifestAsyncGetAsyncTokenWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DownloadListServicesApi$getRepoV1DownloadListManifestAsyncGetAsyncTokenWithHttpInfo(
  async_token,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{async_token}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelDownloadDownloadListManifestResponse) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DownloadListServicesApi-getRepoV1DownloadListPackageAsyncGetAsyncToken"></a>}}
\if{latex}{\out{\hypertarget{method-DownloadListServicesApi-getRepoV1DownloadListPackageAsyncGetAsyncToken}{}}}
\subsection{Method \code{getRepoV1DownloadListPackageAsyncGetAsyncToken()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DownloadListServicesApi$getRepoV1DownloadListPackageAsyncGetAsyncToken(
  async_token,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{async_token}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelDownloadDownloadListPackageResponse
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DownloadListServicesApi-getRepoV1DownloadListPackageAsyncGetAsyncTokenWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-DownloadListServicesApi-getRepoV1DownloadListPackageAsyncGetAsyncTokenWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1DownloadListPackageAsyncGetAsyncTokenWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DownloadListServicesApi$getRepoV1DownloadListPackageAsyncGetAsyncTokenWithHttpInfo(
  async_token,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{async_token}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelDownloadDownloadListPackageResponse) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DownloadListServicesApi-getRepoV1DownloadListQueryAsyncGetAsyncToken"></a>}}
\if{latex}{\out{\hypertarget{method-DownloadListServicesApi-getRepoV1DownloadListQueryAsyncGetAsyncToken}{}}}
\subsection{Method \code{getRepoV1DownloadListQueryAsyncGetAsyncToken()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DownloadListServicesApi$getRepoV1DownloadListQueryAsyncGetAsyncToken(
  async_token,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{async_token}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelDownloadDownloadListQueryResponse
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DownloadListServicesApi-getRepoV1DownloadListQueryAsyncGetAsyncTokenWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-DownloadListServicesApi-getRepoV1DownloadListQueryAsyncGetAsyncTokenWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1DownloadListQueryAsyncGetAsyncTokenWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DownloadListServicesApi$getRepoV1DownloadListQueryAsyncGetAsyncTokenWithHttpInfo(
  async_token,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{async_token}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelDownloadDownloadListQueryResponse) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DownloadListServicesApi-postRepoV1DownloadListAdd"></a>}}
\if{latex}{\out{\hypertarget{method-DownloadListServicesApi-postRepoV1DownloadListAdd}{}}}
\subsection{Method \code{postRepoV1DownloadListAdd()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DownloadListServicesApi$postRepoV1DownloadListAdd(
  org_sagebionetworks_repo_model_download_add_batch_of_files_to_download_list_request,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org_sagebionetworks_repo_model_download_add_batch_of_files_to_download_list_request}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelDownloadAddBatchOfFilesToDownloadListResponse
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DownloadListServicesApi-postRepoV1DownloadListAddWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-DownloadListServicesApi-postRepoV1DownloadListAddWithHttpInfo}{}}}
\subsection{Method \code{postRepoV1DownloadListAddWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DownloadListServicesApi$postRepoV1DownloadListAddWithHttpInfo(
  org_sagebionetworks_repo_model_download_add_batch_of_files_to_download_list_request,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org_sagebionetworks_repo_model_download_add_batch_of_files_to_download_list_request}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelDownloadAddBatchOfFilesToDownloadListResponse) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DownloadListServicesApi-postRepoV1DownloadListAddAsyncStart"></a>}}
\if{latex}{\out{\hypertarget{method-DownloadListServicesApi-postRepoV1DownloadListAddAsyncStart}{}}}
\subsection{Method \code{postRepoV1DownloadListAddAsyncStart()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DownloadListServicesApi$postRepoV1DownloadListAddAsyncStart(
  org_sagebionetworks_repo_model_download_add_to_download_list_request,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org_sagebionetworks_repo_model_download_add_to_download_list_request}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelAsynchAsyncJobId
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DownloadListServicesApi-postRepoV1DownloadListAddAsyncStartWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-DownloadListServicesApi-postRepoV1DownloadListAddAsyncStartWithHttpInfo}{}}}
\subsection{Method \code{postRepoV1DownloadListAddAsyncStartWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DownloadListServicesApi$postRepoV1DownloadListAddAsyncStartWithHttpInfo(
  org_sagebionetworks_repo_model_download_add_to_download_list_request,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org_sagebionetworks_repo_model_download_add_to_download_list_request}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelAsynchAsyncJobId) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DownloadListServicesApi-postRepoV1DownloadListManifestAsyncStart"></a>}}
\if{latex}{\out{\hypertarget{method-DownloadListServicesApi-postRepoV1DownloadListManifestAsyncStart}{}}}
\subsection{Method \code{postRepoV1DownloadListManifestAsyncStart()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DownloadListServicesApi$postRepoV1DownloadListManifestAsyncStart(
  org_sagebionetworks_repo_model_download_download_list_manifest_request,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org_sagebionetworks_repo_model_download_download_list_manifest_request}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelAsynchAsyncJobId
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DownloadListServicesApi-postRepoV1DownloadListManifestAsyncStartWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-DownloadListServicesApi-postRepoV1DownloadListManifestAsyncStartWithHttpInfo}{}}}
\subsection{Method \code{postRepoV1DownloadListManifestAsyncStartWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DownloadListServicesApi$postRepoV1DownloadListManifestAsyncStartWithHttpInfo(
  org_sagebionetworks_repo_model_download_download_list_manifest_request,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org_sagebionetworks_repo_model_download_download_list_manifest_request}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelAsynchAsyncJobId) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DownloadListServicesApi-postRepoV1DownloadListPackageAsyncStart"></a>}}
\if{latex}{\out{\hypertarget{method-DownloadListServicesApi-postRepoV1DownloadListPackageAsyncStart}{}}}
\subsection{Method \code{postRepoV1DownloadListPackageAsyncStart()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DownloadListServicesApi$postRepoV1DownloadListPackageAsyncStart(
  org_sagebionetworks_repo_model_download_download_list_package_request,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org_sagebionetworks_repo_model_download_download_list_package_request}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelAsynchAsyncJobId
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DownloadListServicesApi-postRepoV1DownloadListPackageAsyncStartWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-DownloadListServicesApi-postRepoV1DownloadListPackageAsyncStartWithHttpInfo}{}}}
\subsection{Method \code{postRepoV1DownloadListPackageAsyncStartWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DownloadListServicesApi$postRepoV1DownloadListPackageAsyncStartWithHttpInfo(
  org_sagebionetworks_repo_model_download_download_list_package_request,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org_sagebionetworks_repo_model_download_download_list_package_request}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelAsynchAsyncJobId) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DownloadListServicesApi-postRepoV1DownloadListQueryAsyncStart"></a>}}
\if{latex}{\out{\hypertarget{method-DownloadListServicesApi-postRepoV1DownloadListQueryAsyncStart}{}}}
\subsection{Method \code{postRepoV1DownloadListQueryAsyncStart()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DownloadListServicesApi$postRepoV1DownloadListQueryAsyncStart(
  org_sagebionetworks_repo_model_download_download_list_query_request,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org_sagebionetworks_repo_model_download_download_list_query_request}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelAsynchAsyncJobId
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DownloadListServicesApi-postRepoV1DownloadListQueryAsyncStartWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-DownloadListServicesApi-postRepoV1DownloadListQueryAsyncStartWithHttpInfo}{}}}
\subsection{Method \code{postRepoV1DownloadListQueryAsyncStartWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DownloadListServicesApi$postRepoV1DownloadListQueryAsyncStartWithHttpInfo(
  org_sagebionetworks_repo_model_download_download_list_query_request,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org_sagebionetworks_repo_model_download_download_list_query_request}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelAsynchAsyncJobId) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DownloadListServicesApi-postRepoV1DownloadListRemove"></a>}}
\if{latex}{\out{\hypertarget{method-DownloadListServicesApi-postRepoV1DownloadListRemove}{}}}
\subsection{Method \code{postRepoV1DownloadListRemove()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DownloadListServicesApi$postRepoV1DownloadListRemove(
 
    org_sagebionetworks_repo_model_download_remove_batch_of_files_from_download_list_request,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org_sagebionetworks_repo_model_download_remove_batch_of_files_from_download_list_request}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelDownloadRemoveBatchOfFilesFromDownloadListResponse
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DownloadListServicesApi-postRepoV1DownloadListRemoveWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-DownloadListServicesApi-postRepoV1DownloadListRemoveWithHttpInfo}{}}}
\subsection{Method \code{postRepoV1DownloadListRemoveWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DownloadListServicesApi$postRepoV1DownloadListRemoveWithHttpInfo(
 
    org_sagebionetworks_repo_model_download_remove_batch_of_files_from_download_list_request,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org_sagebionetworks_repo_model_download_remove_batch_of_files_from_download_list_request}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelDownloadRemoveBatchOfFilesFromDownloadListResponse) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DownloadListServicesApi-clone"></a>}}
\if{latex}{\out{\hypertarget{method-DownloadListServicesApi-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DownloadListServicesApi$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
