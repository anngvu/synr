% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/recycle_bin_services_api.R
\docType{class}
\name{RecycleBinServicesApi}
\alias{RecycleBinServicesApi}
\title{RecycleBinServices operations}
\format{
An \code{R6Class} generator object
}
\description{
RecycleBinServicesApi
}
\details{
Synapse REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: v1
Generated by: https://openapi-generator.tech
}
\section{Methods}{

\describe{
\strong{ getRepoV1TrashcanView } \emph{  }

\itemize{
\item \emph{ @param } offset numeric
\item \emph{ @param } limit numeric
\item \emph{ @returnType } \link{PaginatedResultsOfTrashedEntity} \cr


\item status code : 200 | The paginated list of trash entities.

\item return type : PaginatedResultsOfTrashedEntity
\item response headers :

\tabular{ll}{
}
}

\strong{ putRepoV1TrashcanPurgeId } \emph{  }

\itemize{
\item \emph{ @param } id character


\item status code : 200 | Void


\item response headers :

\tabular{ll}{
}
}

\strong{ putRepoV1TrashcanRestoreId } \emph{  }

\itemize{
\item \emph{ @param } id character


\item status code : 200 | Void


\item response headers :

\tabular{ll}{
}
}

\strong{ putRepoV1TrashcanRestoreIdParentId } \emph{  }

\itemize{
\item \emph{ @param } id character
\item \emph{ @param } parent_id character


\item status code : 200 | Void


\item response headers :

\tabular{ll}{
}
}

\strong{ putRepoV1TrashcanTrashId } \emph{  }

\itemize{
\item \emph{ @param } id character


\item status code : 200 | Void


\item response headers :

\tabular{ll}{
}
}

}
}

\examples{
\dontrun{
####################  getRepoV1TrashcanView  ####################

library(synr)
var_offset <- 3.4 # numeric | Paginated results. Offset to the current page. (Optional)
var_limit <- 3.4 # numeric | The maximum number of entities to retrieve per page. (Optional)

api_instance <- RecycleBinServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1TrashcanView(offset = var_offset, limit = var_limitdata_file = "result.txt")
result <- api_instance$getRepoV1TrashcanView(offset = var_offset, limit = var_limit)
dput(result)


####################  putRepoV1TrashcanPurgeId  ####################

library(synr)
var_id <- "id_example" # character | The ID of the entity to be purged.

api_instance <- RecycleBinServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

api_instance$putRepoV1TrashcanPurgeId(var_id)


####################  putRepoV1TrashcanRestoreId  ####################

library(synr)
var_id <- "id_example" # character | The ID of the entity being restored out of the trash can.

api_instance <- RecycleBinServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

api_instance$putRepoV1TrashcanRestoreId(var_id)


####################  putRepoV1TrashcanRestoreIdParentId  ####################

library(synr)
var_id <- "id_example" # character | The ID of the entity being restored out of the trash can.
var_parent_id <- "parent_id_example" # character | The ID of the new parent entity.

api_instance <- RecycleBinServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

api_instance$putRepoV1TrashcanRestoreIdParentId(var_id, var_parent_id)


####################  putRepoV1TrashcanTrashId  ####################

library(synr)
var_id <- "id_example" # character | The ID of the entity being moved to the trash can.

api_instance <- RecycleBinServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

api_instance$putRepoV1TrashcanTrashId(var_id)


}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{api_client}}{Handles the client-server communication.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-RecycleBinServicesApi-new}{\code{RecycleBinServicesApi$new()}}
\item \href{#method-RecycleBinServicesApi-getRepoV1TrashcanView}{\code{RecycleBinServicesApi$getRepoV1TrashcanView()}}
\item \href{#method-RecycleBinServicesApi-getRepoV1TrashcanViewWithHttpInfo}{\code{RecycleBinServicesApi$getRepoV1TrashcanViewWithHttpInfo()}}
\item \href{#method-RecycleBinServicesApi-putRepoV1TrashcanPurgeId}{\code{RecycleBinServicesApi$putRepoV1TrashcanPurgeId()}}
\item \href{#method-RecycleBinServicesApi-putRepoV1TrashcanPurgeIdWithHttpInfo}{\code{RecycleBinServicesApi$putRepoV1TrashcanPurgeIdWithHttpInfo()}}
\item \href{#method-RecycleBinServicesApi-putRepoV1TrashcanRestoreId}{\code{RecycleBinServicesApi$putRepoV1TrashcanRestoreId()}}
\item \href{#method-RecycleBinServicesApi-putRepoV1TrashcanRestoreIdWithHttpInfo}{\code{RecycleBinServicesApi$putRepoV1TrashcanRestoreIdWithHttpInfo()}}
\item \href{#method-RecycleBinServicesApi-putRepoV1TrashcanRestoreIdParentId}{\code{RecycleBinServicesApi$putRepoV1TrashcanRestoreIdParentId()}}
\item \href{#method-RecycleBinServicesApi-putRepoV1TrashcanRestoreIdParentIdWithHttpInfo}{\code{RecycleBinServicesApi$putRepoV1TrashcanRestoreIdParentIdWithHttpInfo()}}
\item \href{#method-RecycleBinServicesApi-putRepoV1TrashcanTrashId}{\code{RecycleBinServicesApi$putRepoV1TrashcanTrashId()}}
\item \href{#method-RecycleBinServicesApi-putRepoV1TrashcanTrashIdWithHttpInfo}{\code{RecycleBinServicesApi$putRepoV1TrashcanTrashIdWithHttpInfo()}}
\item \href{#method-RecycleBinServicesApi-clone}{\code{RecycleBinServicesApi$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RecycleBinServicesApi-new"></a>}}
\if{latex}{\out{\hypertarget{method-RecycleBinServicesApi-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new RecycleBinServicesApi.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RecycleBinServicesApi$new(api_client)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{api_client}}{An instance of API client.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RecycleBinServicesApi-getRepoV1TrashcanView"></a>}}
\if{latex}{\out{\hypertarget{method-RecycleBinServicesApi-getRepoV1TrashcanView}{}}}
\subsection{Method \code{getRepoV1TrashcanView()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RecycleBinServicesApi$getRepoV1TrashcanView(
  offset = NULL,
  limit = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{offset}}{(optional) Paginated results. Offset to the current page.}

\item{\code{limit}}{(optional) The maximum number of entities to retrieve per page.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
PaginatedResultsOfTrashedEntity
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RecycleBinServicesApi-getRepoV1TrashcanViewWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-RecycleBinServicesApi-getRepoV1TrashcanViewWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1TrashcanViewWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RecycleBinServicesApi$getRepoV1TrashcanViewWithHttpInfo(
  offset = NULL,
  limit = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{offset}}{(optional) Paginated results. Offset to the current page.}

\item{\code{limit}}{(optional) The maximum number of entities to retrieve per page.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (PaginatedResultsOfTrashedEntity) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RecycleBinServicesApi-putRepoV1TrashcanPurgeId"></a>}}
\if{latex}{\out{\hypertarget{method-RecycleBinServicesApi-putRepoV1TrashcanPurgeId}{}}}
\subsection{Method \code{putRepoV1TrashcanPurgeId()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RecycleBinServicesApi$putRepoV1TrashcanPurgeId(id, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The ID of the entity to be purged.}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
void
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RecycleBinServicesApi-putRepoV1TrashcanPurgeIdWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-RecycleBinServicesApi-putRepoV1TrashcanPurgeIdWithHttpInfo}{}}}
\subsection{Method \code{putRepoV1TrashcanPurgeIdWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RecycleBinServicesApi$putRepoV1TrashcanPurgeIdWithHttpInfo(id, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The ID of the entity to be purged.}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (void) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RecycleBinServicesApi-putRepoV1TrashcanRestoreId"></a>}}
\if{latex}{\out{\hypertarget{method-RecycleBinServicesApi-putRepoV1TrashcanRestoreId}{}}}
\subsection{Method \code{putRepoV1TrashcanRestoreId()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RecycleBinServicesApi$putRepoV1TrashcanRestoreId(id, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The ID of the entity being restored out of the trash can.}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
void
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RecycleBinServicesApi-putRepoV1TrashcanRestoreIdWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-RecycleBinServicesApi-putRepoV1TrashcanRestoreIdWithHttpInfo}{}}}
\subsection{Method \code{putRepoV1TrashcanRestoreIdWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RecycleBinServicesApi$putRepoV1TrashcanRestoreIdWithHttpInfo(id, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The ID of the entity being restored out of the trash can.}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (void) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RecycleBinServicesApi-putRepoV1TrashcanRestoreIdParentId"></a>}}
\if{latex}{\out{\hypertarget{method-RecycleBinServicesApi-putRepoV1TrashcanRestoreIdParentId}{}}}
\subsection{Method \code{putRepoV1TrashcanRestoreIdParentId()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RecycleBinServicesApi$putRepoV1TrashcanRestoreIdParentId(id, parent_id, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The ID of the entity being restored out of the trash can.}

\item{\code{parent_id}}{The ID of the new parent entity.}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
void
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RecycleBinServicesApi-putRepoV1TrashcanRestoreIdParentIdWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-RecycleBinServicesApi-putRepoV1TrashcanRestoreIdParentIdWithHttpInfo}{}}}
\subsection{Method \code{putRepoV1TrashcanRestoreIdParentIdWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RecycleBinServicesApi$putRepoV1TrashcanRestoreIdParentIdWithHttpInfo(
  id,
  parent_id,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The ID of the entity being restored out of the trash can.}

\item{\code{parent_id}}{The ID of the new parent entity.}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (void) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RecycleBinServicesApi-putRepoV1TrashcanTrashId"></a>}}
\if{latex}{\out{\hypertarget{method-RecycleBinServicesApi-putRepoV1TrashcanTrashId}{}}}
\subsection{Method \code{putRepoV1TrashcanTrashId()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RecycleBinServicesApi$putRepoV1TrashcanTrashId(id, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The ID of the entity being moved to the trash can.}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
void
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RecycleBinServicesApi-putRepoV1TrashcanTrashIdWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-RecycleBinServicesApi-putRepoV1TrashcanTrashIdWithHttpInfo}{}}}
\subsection{Method \code{putRepoV1TrashcanTrashIdWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RecycleBinServicesApi$putRepoV1TrashcanTrashIdWithHttpInfo(id, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The ID of the entity being moved to the trash can.}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (void) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RecycleBinServicesApi-clone"></a>}}
\if{latex}{\out{\hypertarget{method-RecycleBinServicesApi-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RecycleBinServicesApi$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
