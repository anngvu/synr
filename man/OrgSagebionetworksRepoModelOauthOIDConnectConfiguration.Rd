% Generated by roxygen2: do not edit by hand
% Please edit documentation in
%   R/org_sagebionetworks_repo_model_oauth_oid_connect_configuration.R
\docType{class}
\name{OrgSagebionetworksRepoModelOauthOIDConnectConfiguration}
\alias{OrgSagebionetworksRepoModelOauthOIDConnectConfiguration}
\title{OrgSagebionetworksRepoModelOauthOIDConnectConfiguration}
\format{
An \code{R6Class} generator object
}
\description{
OpenID Provider Configuration, described by <a href=\"https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderConfig\">OpenID Connect Core 1.0</a>. Fields are defined by the <a href=\"https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata\">OpenID Provider Metadata</a>.

OrgSagebionetworksRepoModelOauthOIDConnectConfiguration Class
}
\details{
Create a new OrgSagebionetworksRepoModelOauthOIDConnectConfiguration
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{issuer}}{character [optional]}

\item{\code{authorization_endpoint}}{character [optional]}

\item{\code{token_endpoint}}{character [optional]}

\item{\code{revocation_endpoint}}{character [optional]}

\item{\code{userinfo_endpoint}}{character [optional]}

\item{\code{jwks_uri}}{character [optional]}

\item{\code{registration_endpoint}}{character [optional]}

\item{\code{scopes_supported}}{List of the OAuth 2.0 scope values that Synapse supports. list(character) [optional]}

\item{\code{response_types_supported}}{List of the OAuth 2.0 response types that Synapse supports. list(character) [optional]}

\item{\code{grant_types_supported}}{List of the OAuth 2.0 grant types that Synapse supports. list(character) [optional]}

\item{\code{subject_types_supported}}{List of the subject identified types that Synapse supports. list(character) [optional]}

\item{\code{id_token_signing_alg_values_supported}}{List of the JWS signing algorithms (alg values) supported by Synapse for the ID Token to encode the Claims in a JWT list(character) [optional]}

\item{\code{userinfo_signing_alg_values_supported}}{List of the JWS signing algorithms (alg values) supported by the UserInfo Endpoint to encode the Claims in a JWT list(character) [optional]}

\item{\code{request_object_signing_alg_values_supported}}{List of signing algorithms supported for signing request objects, or '[\"none\"]' if passing by 'request' parameter is unsupported.  See <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RequestObject\">OpenID Connect Core 1.0</a> list(character) [optional]}

\item{\code{claims_supported}}{List of the Claim Names of the Claims that the Synapse MAY be able to supply values for. list(character) [optional]}

\item{\code{service_documentation}}{character [optional]}

\item{\code{claims_parameter_supported}}{character [optional]}

\item{\code{token_endpoint_auth_methods_supported}}{a list of Client Authentication methods supported by Synapse's Token Endpoint.  See <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#ClientAuthentication\">OpenID Connect Core 1.0 Client Authentication</a> list(character) [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-OrgSagebionetworksRepoModelOauthOIDConnectConfiguration-new}{\code{OrgSagebionetworksRepoModelOauthOIDConnectConfiguration$new()}}
\item \href{#method-OrgSagebionetworksRepoModelOauthOIDConnectConfiguration-toJSON}{\code{OrgSagebionetworksRepoModelOauthOIDConnectConfiguration$toJSON()}}
\item \href{#method-OrgSagebionetworksRepoModelOauthOIDConnectConfiguration-fromJSON}{\code{OrgSagebionetworksRepoModelOauthOIDConnectConfiguration$fromJSON()}}
\item \href{#method-OrgSagebionetworksRepoModelOauthOIDConnectConfiguration-toJSONString}{\code{OrgSagebionetworksRepoModelOauthOIDConnectConfiguration$toJSONString()}}
\item \href{#method-OrgSagebionetworksRepoModelOauthOIDConnectConfiguration-fromJSONString}{\code{OrgSagebionetworksRepoModelOauthOIDConnectConfiguration$fromJSONString()}}
\item \href{#method-OrgSagebionetworksRepoModelOauthOIDConnectConfiguration-validateJSON}{\code{OrgSagebionetworksRepoModelOauthOIDConnectConfiguration$validateJSON()}}
\item \href{#method-OrgSagebionetworksRepoModelOauthOIDConnectConfiguration-toString}{\code{OrgSagebionetworksRepoModelOauthOIDConnectConfiguration$toString()}}
\item \href{#method-OrgSagebionetworksRepoModelOauthOIDConnectConfiguration-isValid}{\code{OrgSagebionetworksRepoModelOauthOIDConnectConfiguration$isValid()}}
\item \href{#method-OrgSagebionetworksRepoModelOauthOIDConnectConfiguration-getInvalidFields}{\code{OrgSagebionetworksRepoModelOauthOIDConnectConfiguration$getInvalidFields()}}
\item \href{#method-OrgSagebionetworksRepoModelOauthOIDConnectConfiguration-print}{\code{OrgSagebionetworksRepoModelOauthOIDConnectConfiguration$print()}}
\item \href{#method-OrgSagebionetworksRepoModelOauthOIDConnectConfiguration-clone}{\code{OrgSagebionetworksRepoModelOauthOIDConnectConfiguration$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelOauthOIDConnectConfiguration-new"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelOauthOIDConnectConfiguration-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new OrgSagebionetworksRepoModelOauthOIDConnectConfiguration class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelOauthOIDConnectConfiguration$new(
  issuer = NULL,
  authorization_endpoint = NULL,
  token_endpoint = NULL,
  revocation_endpoint = NULL,
  userinfo_endpoint = NULL,
  jwks_uri = NULL,
  registration_endpoint = NULL,
  scopes_supported = NULL,
  response_types_supported = NULL,
  grant_types_supported = NULL,
  subject_types_supported = NULL,
  id_token_signing_alg_values_supported = NULL,
  userinfo_signing_alg_values_supported = NULL,
  request_object_signing_alg_values_supported = NULL,
  claims_supported = NULL,
  service_documentation = NULL,
  claims_parameter_supported = NULL,
  token_endpoint_auth_methods_supported = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{issuer}}{issuer}

\item{\code{authorization_endpoint}}{authorization_endpoint}

\item{\code{token_endpoint}}{token_endpoint}

\item{\code{revocation_endpoint}}{revocation_endpoint}

\item{\code{userinfo_endpoint}}{userinfo_endpoint}

\item{\code{jwks_uri}}{jwks_uri}

\item{\code{registration_endpoint}}{registration_endpoint}

\item{\code{scopes_supported}}{List of the OAuth 2.0 scope values that Synapse supports.}

\item{\code{response_types_supported}}{List of the OAuth 2.0 response types that Synapse supports.}

\item{\code{grant_types_supported}}{List of the OAuth 2.0 grant types that Synapse supports.}

\item{\code{subject_types_supported}}{List of the subject identified types that Synapse supports.}

\item{\code{id_token_signing_alg_values_supported}}{List of the JWS signing algorithms (alg values) supported by Synapse for the ID Token to encode the Claims in a JWT}

\item{\code{userinfo_signing_alg_values_supported}}{List of the JWS signing algorithms (alg values) supported by the UserInfo Endpoint to encode the Claims in a JWT}

\item{\code{request_object_signing_alg_values_supported}}{List of signing algorithms supported for signing request objects, or '[\"none\"]' if passing by 'request' parameter is unsupported.  See <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RequestObject\">OpenID Connect Core 1.0</a>}

\item{\code{claims_supported}}{List of the Claim Names of the Claims that the Synapse MAY be able to supply values for.}

\item{\code{service_documentation}}{service_documentation}

\item{\code{claims_parameter_supported}}{claims_parameter_supported}

\item{\code{token_endpoint_auth_methods_supported}}{a list of Client Authentication methods supported by Synapse's Token Endpoint.  See <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#ClientAuthentication\">OpenID Connect Core 1.0 Client Authentication</a>}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelOauthOIDConnectConfiguration-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelOauthOIDConnectConfiguration-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelOauthOIDConnectConfiguration$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
OrgSagebionetworksRepoModelOauthOIDConnectConfiguration in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelOauthOIDConnectConfiguration-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelOauthOIDConnectConfiguration-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of OrgSagebionetworksRepoModelOauthOIDConnectConfiguration
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelOauthOIDConnectConfiguration$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of OrgSagebionetworksRepoModelOauthOIDConnectConfiguration
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelOauthOIDConnectConfiguration-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelOauthOIDConnectConfiguration-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelOauthOIDConnectConfiguration$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
OrgSagebionetworksRepoModelOauthOIDConnectConfiguration in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelOauthOIDConnectConfiguration-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelOauthOIDConnectConfiguration-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of OrgSagebionetworksRepoModelOauthOIDConnectConfiguration
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelOauthOIDConnectConfiguration$fromJSONString(
  input_json
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of OrgSagebionetworksRepoModelOauthOIDConnectConfiguration
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelOauthOIDConnectConfiguration-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelOauthOIDConnectConfiguration-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to OrgSagebionetworksRepoModelOauthOIDConnectConfiguration and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelOauthOIDConnectConfiguration$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelOauthOIDConnectConfiguration-toString"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelOauthOIDConnectConfiguration-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelOauthOIDConnectConfiguration$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of OrgSagebionetworksRepoModelOauthOIDConnectConfiguration
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelOauthOIDConnectConfiguration-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelOauthOIDConnectConfiguration-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelOauthOIDConnectConfiguration$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelOauthOIDConnectConfiguration-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelOauthOIDConnectConfiguration-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelOauthOIDConnectConfiguration$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelOauthOIDConnectConfiguration-print"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelOauthOIDConnectConfiguration-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelOauthOIDConnectConfiguration$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelOauthOIDConnectConfiguration-clone"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelOauthOIDConnectConfiguration-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelOauthOIDConnectConfiguration$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
