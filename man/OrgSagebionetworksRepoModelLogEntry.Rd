% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/org_sagebionetworks_repo_model_log_entry.R
\docType{class}
\name{OrgSagebionetworksRepoModelLogEntry}
\alias{OrgSagebionetworksRepoModelLogEntry}
\title{OrgSagebionetworksRepoModelLogEntry}
\format{
An \code{R6Class} generator object
}
\description{
JSON schema for a log entry

OrgSagebionetworksRepoModelLogEntry Class
}
\details{
Create a new OrgSagebionetworksRepoModelLogEntry
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{label}}{character [optional]}

\item{\code{message}}{character [optional]}

\item{\code{stacktrace}}{character [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-OrgSagebionetworksRepoModelLogEntry-new}{\code{OrgSagebionetworksRepoModelLogEntry$new()}}
\item \href{#method-OrgSagebionetworksRepoModelLogEntry-toJSON}{\code{OrgSagebionetworksRepoModelLogEntry$toJSON()}}
\item \href{#method-OrgSagebionetworksRepoModelLogEntry-fromJSON}{\code{OrgSagebionetworksRepoModelLogEntry$fromJSON()}}
\item \href{#method-OrgSagebionetworksRepoModelLogEntry-toJSONString}{\code{OrgSagebionetworksRepoModelLogEntry$toJSONString()}}
\item \href{#method-OrgSagebionetworksRepoModelLogEntry-fromJSONString}{\code{OrgSagebionetworksRepoModelLogEntry$fromJSONString()}}
\item \href{#method-OrgSagebionetworksRepoModelLogEntry-validateJSON}{\code{OrgSagebionetworksRepoModelLogEntry$validateJSON()}}
\item \href{#method-OrgSagebionetworksRepoModelLogEntry-toString}{\code{OrgSagebionetworksRepoModelLogEntry$toString()}}
\item \href{#method-OrgSagebionetworksRepoModelLogEntry-isValid}{\code{OrgSagebionetworksRepoModelLogEntry$isValid()}}
\item \href{#method-OrgSagebionetworksRepoModelLogEntry-getInvalidFields}{\code{OrgSagebionetworksRepoModelLogEntry$getInvalidFields()}}
\item \href{#method-OrgSagebionetworksRepoModelLogEntry-print}{\code{OrgSagebionetworksRepoModelLogEntry$print()}}
\item \href{#method-OrgSagebionetworksRepoModelLogEntry-clone}{\code{OrgSagebionetworksRepoModelLogEntry$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelLogEntry-new"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelLogEntry-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new OrgSagebionetworksRepoModelLogEntry class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelLogEntry$new(
  label = NULL,
  message = NULL,
  stacktrace = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{label}}{label}

\item{\code{message}}{message}

\item{\code{stacktrace}}{stacktrace}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelLogEntry-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelLogEntry-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelLogEntry$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
OrgSagebionetworksRepoModelLogEntry in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelLogEntry-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelLogEntry-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of OrgSagebionetworksRepoModelLogEntry
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelLogEntry$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of OrgSagebionetworksRepoModelLogEntry
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelLogEntry-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelLogEntry-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelLogEntry$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
OrgSagebionetworksRepoModelLogEntry in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelLogEntry-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelLogEntry-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of OrgSagebionetworksRepoModelLogEntry
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelLogEntry$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of OrgSagebionetworksRepoModelLogEntry
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelLogEntry-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelLogEntry-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to OrgSagebionetworksRepoModelLogEntry and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelLogEntry$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelLogEntry-toString"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelLogEntry-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelLogEntry$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of OrgSagebionetworksRepoModelLogEntry
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelLogEntry-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelLogEntry-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelLogEntry$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelLogEntry-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelLogEntry-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelLogEntry$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelLogEntry-print"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelLogEntry-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelLogEntry$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelLogEntry-clone"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelLogEntry-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelLogEntry$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
