% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/paginated_results_of_submission_status.R
\docType{class}
\name{PaginatedResultsOfSubmissionStatus}
\alias{PaginatedResultsOfSubmissionStatus}
\title{PaginatedResultsOfSubmissionStatus}
\format{
An \code{R6Class} generator object
}
\description{
PaginatedResultsOfSubmissionStatus Class

PaginatedResultsOfSubmissionStatus Class
}
\details{
Create a new PaginatedResultsOfSubmissionStatus
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{totalNumberOfResults}}{integer [optional]}

\item{\code{results}}{list(\link{OrgSagebionetworksEvaluationModelSubmissionStatus}) [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-PaginatedResultsOfSubmissionStatus-new}{\code{PaginatedResultsOfSubmissionStatus$new()}}
\item \href{#method-PaginatedResultsOfSubmissionStatus-toJSON}{\code{PaginatedResultsOfSubmissionStatus$toJSON()}}
\item \href{#method-PaginatedResultsOfSubmissionStatus-fromJSON}{\code{PaginatedResultsOfSubmissionStatus$fromJSON()}}
\item \href{#method-PaginatedResultsOfSubmissionStatus-toJSONString}{\code{PaginatedResultsOfSubmissionStatus$toJSONString()}}
\item \href{#method-PaginatedResultsOfSubmissionStatus-fromJSONString}{\code{PaginatedResultsOfSubmissionStatus$fromJSONString()}}
\item \href{#method-PaginatedResultsOfSubmissionStatus-validateJSON}{\code{PaginatedResultsOfSubmissionStatus$validateJSON()}}
\item \href{#method-PaginatedResultsOfSubmissionStatus-toString}{\code{PaginatedResultsOfSubmissionStatus$toString()}}
\item \href{#method-PaginatedResultsOfSubmissionStatus-isValid}{\code{PaginatedResultsOfSubmissionStatus$isValid()}}
\item \href{#method-PaginatedResultsOfSubmissionStatus-getInvalidFields}{\code{PaginatedResultsOfSubmissionStatus$getInvalidFields()}}
\item \href{#method-PaginatedResultsOfSubmissionStatus-print}{\code{PaginatedResultsOfSubmissionStatus$print()}}
\item \href{#method-PaginatedResultsOfSubmissionStatus-clone}{\code{PaginatedResultsOfSubmissionStatus$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfSubmissionStatus-new"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfSubmissionStatus-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new PaginatedResultsOfSubmissionStatus class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfSubmissionStatus$new(
  totalNumberOfResults = NULL,
  results = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{totalNumberOfResults}}{totalNumberOfResults}

\item{\code{results}}{results}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfSubmissionStatus-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfSubmissionStatus-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfSubmissionStatus$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
PaginatedResultsOfSubmissionStatus in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfSubmissionStatus-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfSubmissionStatus-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of PaginatedResultsOfSubmissionStatus
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfSubmissionStatus$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of PaginatedResultsOfSubmissionStatus
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfSubmissionStatus-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfSubmissionStatus-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfSubmissionStatus$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
PaginatedResultsOfSubmissionStatus in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfSubmissionStatus-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfSubmissionStatus-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of PaginatedResultsOfSubmissionStatus
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfSubmissionStatus$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of PaginatedResultsOfSubmissionStatus
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfSubmissionStatus-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfSubmissionStatus-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to PaginatedResultsOfSubmissionStatus and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfSubmissionStatus$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfSubmissionStatus-toString"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfSubmissionStatus-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfSubmissionStatus$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of PaginatedResultsOfSubmissionStatus
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfSubmissionStatus-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfSubmissionStatus-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfSubmissionStatus$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfSubmissionStatus-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfSubmissionStatus-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfSubmissionStatus$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfSubmissionStatus-print"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfSubmissionStatus-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfSubmissionStatus$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PaginatedResultsOfSubmissionStatus-clone"></a>}}
\if{latex}{\out{\hypertarget{method-PaginatedResultsOfSubmissionStatus-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PaginatedResultsOfSubmissionStatus$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
