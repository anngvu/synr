% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/challenge_services_api.R
\docType{class}
\name{ChallengeServicesApi}
\alias{ChallengeServicesApi}
\title{ChallengeServices operations}
\format{
An \code{R6Class} generator object
}
\description{
ChallengeServicesApi
}
\details{
Synapse REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: v1
Generated by: https://openapi-generator.tech
}
\section{Methods}{

\describe{
\strong{ deleteRepoV1ChallengeChallengeId } \emph{  }

\itemize{
\item \emph{ @param } challenge_id numeric


\item status code : 200 | Void


\item response headers :

\tabular{ll}{
}
}

\strong{ deleteRepoV1ChallengeTeamChallengeTeamId } \emph{  }

\itemize{
\item \emph{ @param } challenge_team_id numeric


\item status code : 200 | Void


\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1Challenge } \emph{  }

\itemize{
\item \emph{ @param } participant_id numeric
\item \emph{ @param } limit numeric
\item \emph{ @param } offset numeric
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelChallengePagedResults} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelChallengePagedResults
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1ChallengeChallengeId } \emph{  }

\itemize{
\item \emph{ @param } challenge_id numeric
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelChallenge} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelChallenge
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1ChallengeChallengeIdChallengeTeam } \emph{  }

\itemize{
\item \emph{ @param } challenge_id numeric
\item \emph{ @param } limit numeric
\item \emph{ @param } offset numeric
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelChallengeTeamPagedResults} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelChallengeTeamPagedResults
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1ChallengeChallengeIdParticipant } \emph{  }

\itemize{
\item \emph{ @param } challenge_id numeric
\item \emph{ @param } affiliated character
\item \emph{ @param } limit numeric
\item \emph{ @param } offset numeric
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelPaginatedIds} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelPaginatedIds
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1ChallengeChallengeIdRegistratableTeam } \emph{  }

\itemize{
\item \emph{ @param } challenge_id numeric
\item \emph{ @param } limit numeric
\item \emph{ @param } offset numeric
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelPaginatedIds} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelPaginatedIds
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1ChallengeChallengeIdSubmissionTeams } \emph{  }

\itemize{
\item \emph{ @param } challenge_id numeric
\item \emph{ @param } limit numeric
\item \emph{ @param } offset numeric
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelPaginatedIds} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelPaginatedIds
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1EntityIdChallenge } \emph{  }

\itemize{
\item \emph{ @param } id character
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelChallenge} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelChallenge
\item response headers :

\tabular{ll}{
}
}

\strong{ postRepoV1Challenge } \emph{  }

\itemize{
\item \emph{ @param } org_sagebionetworks_repo_model_challenge \link{OrgSagebionetworksRepoModelChallenge}
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelChallenge} \cr


\item status code : 201 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelChallenge
\item response headers :

\tabular{ll}{
}
}

\strong{ postRepoV1ChallengeChallengeIdChallengeTeam } \emph{  }

\itemize{
\item \emph{ @param } challenge_id numeric
\item \emph{ @param } org_sagebionetworks_repo_model_challenge_team \link{OrgSagebionetworksRepoModelChallengeTeam}
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelChallengeTeam} \cr


\item status code : 201 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelChallengeTeam
\item response headers :

\tabular{ll}{
}
}

\strong{ putRepoV1ChallengeChallengeId } \emph{  }

\itemize{
\item \emph{ @param } challenge_id numeric
\item \emph{ @param } org_sagebionetworks_repo_model_challenge \link{OrgSagebionetworksRepoModelChallenge}
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelChallenge} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelChallenge
\item response headers :

\tabular{ll}{
}
}

\strong{ putRepoV1ChallengeChallengeIdChallengeTeamChallengeTeamId } \emph{  }

\itemize{
\item \emph{ @param } challenge_id numeric
\item \emph{ @param } challenge_team_id numeric
\item \emph{ @param } org_sagebionetworks_repo_model_challenge_team \link{OrgSagebionetworksRepoModelChallengeTeam}
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelChallengeTeam} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelChallengeTeam
\item response headers :

\tabular{ll}{
}
}

}
}

\examples{
\dontrun{
####################  deleteRepoV1ChallengeChallengeId  ####################

library(synr)
var_challenge_id <- 3.4 # numeric | 

api_instance <- ChallengeServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

api_instance$deleteRepoV1ChallengeChallengeId(var_challenge_id)


####################  deleteRepoV1ChallengeTeamChallengeTeamId  ####################

library(synr)
var_challenge_team_id <- 3.4 # numeric | 

api_instance <- ChallengeServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

api_instance$deleteRepoV1ChallengeTeamChallengeTeamId(var_challenge_team_id)


####################  getRepoV1Challenge  ####################

library(synr)
var_participant_id <- 3.4 # numeric | 
var_limit <- 3.4 # numeric |  (Optional)
var_offset <- 3.4 # numeric |  (Optional)

api_instance <- ChallengeServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1Challenge(var_participant_id, limit = var_limit, offset = var_offsetdata_file = "result.txt")
result <- api_instance$getRepoV1Challenge(var_participant_id, limit = var_limit, offset = var_offset)
dput(result)


####################  getRepoV1ChallengeChallengeId  ####################

library(synr)
var_challenge_id <- 3.4 # numeric | 

api_instance <- ChallengeServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1ChallengeChallengeId(var_challenge_iddata_file = "result.txt")
result <- api_instance$getRepoV1ChallengeChallengeId(var_challenge_id)
dput(result)


####################  getRepoV1ChallengeChallengeIdChallengeTeam  ####################

library(synr)
var_challenge_id <- 3.4 # numeric | 
var_limit <- 3.4 # numeric |  (Optional)
var_offset <- 3.4 # numeric |  (Optional)

api_instance <- ChallengeServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1ChallengeChallengeIdChallengeTeam(var_challenge_id, limit = var_limit, offset = var_offsetdata_file = "result.txt")
result <- api_instance$getRepoV1ChallengeChallengeIdChallengeTeam(var_challenge_id, limit = var_limit, offset = var_offset)
dput(result)


####################  getRepoV1ChallengeChallengeIdParticipant  ####################

library(synr)
var_challenge_id <- 3.4 # numeric | 
var_affiliated <- "affiliated_example" # character | If affiliated=true, return just participants affiliated with some   registered Team.  If false, return those not affiliated with any registered Team.    If omitted return all participants. (Optional)
var_limit <- 3.4 # numeric |  (Optional)
var_offset <- 3.4 # numeric |  (Optional)

api_instance <- ChallengeServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1ChallengeChallengeIdParticipant(var_challenge_id, affiliated = var_affiliated, limit = var_limit, offset = var_offsetdata_file = "result.txt")
result <- api_instance$getRepoV1ChallengeChallengeIdParticipant(var_challenge_id, affiliated = var_affiliated, limit = var_limit, offset = var_offset)
dput(result)


####################  getRepoV1ChallengeChallengeIdRegistratableTeam  ####################

library(synr)
var_challenge_id <- 3.4 # numeric | 
var_limit <- 3.4 # numeric |  (Optional)
var_offset <- 3.4 # numeric |  (Optional)

api_instance <- ChallengeServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1ChallengeChallengeIdRegistratableTeam(var_challenge_id, limit = var_limit, offset = var_offsetdata_file = "result.txt")
result <- api_instance$getRepoV1ChallengeChallengeIdRegistratableTeam(var_challenge_id, limit = var_limit, offset = var_offset)
dput(result)


####################  getRepoV1ChallengeChallengeIdSubmissionTeams  ####################

library(synr)
var_challenge_id <- 3.4 # numeric | 
var_limit <- 3.4 # numeric |  (Optional)
var_offset <- 3.4 # numeric |  (Optional)

api_instance <- ChallengeServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1ChallengeChallengeIdSubmissionTeams(var_challenge_id, limit = var_limit, offset = var_offsetdata_file = "result.txt")
result <- api_instance$getRepoV1ChallengeChallengeIdSubmissionTeams(var_challenge_id, limit = var_limit, offset = var_offset)
dput(result)


####################  getRepoV1EntityIdChallenge  ####################

library(synr)
var_id <- "id_example" # character | 

api_instance <- ChallengeServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1EntityIdChallenge(var_iddata_file = "result.txt")
result <- api_instance$getRepoV1EntityIdChallenge(var_id)
dput(result)


####################  postRepoV1Challenge  ####################

library(synr)
var_org_sagebionetworks_repo_model_challenge <- org.sagebionetworks.repo.model.Challenge$new("id_example", "etag_example", "projectId_example", "participantTeamId_example") # OrgSagebionetworksRepoModelChallenge | 

api_instance <- ChallengeServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$postRepoV1Challenge(var_org_sagebionetworks_repo_model_challengedata_file = "result.txt")
result <- api_instance$postRepoV1Challenge(var_org_sagebionetworks_repo_model_challenge)
dput(result)


####################  postRepoV1ChallengeChallengeIdChallengeTeam  ####################

library(synr)
var_challenge_id <- 3.4 # numeric | 
var_org_sagebionetworks_repo_model_challenge_team <- org.sagebionetworks.repo.model.ChallengeTeam$new("id_example", "etag_example", "challengeId_example", "teamId_example", "message_example") # OrgSagebionetworksRepoModelChallengeTeam | 

api_instance <- ChallengeServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$postRepoV1ChallengeChallengeIdChallengeTeam(var_challenge_id, var_org_sagebionetworks_repo_model_challenge_teamdata_file = "result.txt")
result <- api_instance$postRepoV1ChallengeChallengeIdChallengeTeam(var_challenge_id, var_org_sagebionetworks_repo_model_challenge_team)
dput(result)


####################  putRepoV1ChallengeChallengeId  ####################

library(synr)
var_challenge_id <- 3.4 # numeric | 
var_org_sagebionetworks_repo_model_challenge <- org.sagebionetworks.repo.model.Challenge$new("id_example", "etag_example", "projectId_example", "participantTeamId_example") # OrgSagebionetworksRepoModelChallenge | 

api_instance <- ChallengeServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$putRepoV1ChallengeChallengeId(var_challenge_id, var_org_sagebionetworks_repo_model_challengedata_file = "result.txt")
result <- api_instance$putRepoV1ChallengeChallengeId(var_challenge_id, var_org_sagebionetworks_repo_model_challenge)
dput(result)


####################  putRepoV1ChallengeChallengeIdChallengeTeamChallengeTeamId  ####################

library(synr)
var_challenge_id <- 3.4 # numeric | 
var_challenge_team_id <- 3.4 # numeric | 
var_org_sagebionetworks_repo_model_challenge_team <- org.sagebionetworks.repo.model.ChallengeTeam$new("id_example", "etag_example", "challengeId_example", "teamId_example", "message_example") # OrgSagebionetworksRepoModelChallengeTeam | 

api_instance <- ChallengeServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$putRepoV1ChallengeChallengeIdChallengeTeamChallengeTeamId(var_challenge_id, var_challenge_team_id, var_org_sagebionetworks_repo_model_challenge_teamdata_file = "result.txt")
result <- api_instance$putRepoV1ChallengeChallengeIdChallengeTeamChallengeTeamId(var_challenge_id, var_challenge_team_id, var_org_sagebionetworks_repo_model_challenge_team)
dput(result)


}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{api_client}}{Handles the client-server communication.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-ChallengeServicesApi-new}{\code{ChallengeServicesApi$new()}}
\item \href{#method-ChallengeServicesApi-deleteRepoV1ChallengeChallengeId}{\code{ChallengeServicesApi$deleteRepoV1ChallengeChallengeId()}}
\item \href{#method-ChallengeServicesApi-deleteRepoV1ChallengeChallengeIdWithHttpInfo}{\code{ChallengeServicesApi$deleteRepoV1ChallengeChallengeIdWithHttpInfo()}}
\item \href{#method-ChallengeServicesApi-deleteRepoV1ChallengeTeamChallengeTeamId}{\code{ChallengeServicesApi$deleteRepoV1ChallengeTeamChallengeTeamId()}}
\item \href{#method-ChallengeServicesApi-deleteRepoV1ChallengeTeamChallengeTeamIdWithHttpInfo}{\code{ChallengeServicesApi$deleteRepoV1ChallengeTeamChallengeTeamIdWithHttpInfo()}}
\item \href{#method-ChallengeServicesApi-getRepoV1Challenge}{\code{ChallengeServicesApi$getRepoV1Challenge()}}
\item \href{#method-ChallengeServicesApi-getRepoV1ChallengeWithHttpInfo}{\code{ChallengeServicesApi$getRepoV1ChallengeWithHttpInfo()}}
\item \href{#method-ChallengeServicesApi-getRepoV1ChallengeChallengeId}{\code{ChallengeServicesApi$getRepoV1ChallengeChallengeId()}}
\item \href{#method-ChallengeServicesApi-getRepoV1ChallengeChallengeIdWithHttpInfo}{\code{ChallengeServicesApi$getRepoV1ChallengeChallengeIdWithHttpInfo()}}
\item \href{#method-ChallengeServicesApi-getRepoV1ChallengeChallengeIdChallengeTeam}{\code{ChallengeServicesApi$getRepoV1ChallengeChallengeIdChallengeTeam()}}
\item \href{#method-ChallengeServicesApi-getRepoV1ChallengeChallengeIdChallengeTeamWithHttpInfo}{\code{ChallengeServicesApi$getRepoV1ChallengeChallengeIdChallengeTeamWithHttpInfo()}}
\item \href{#method-ChallengeServicesApi-getRepoV1ChallengeChallengeIdParticipant}{\code{ChallengeServicesApi$getRepoV1ChallengeChallengeIdParticipant()}}
\item \href{#method-ChallengeServicesApi-getRepoV1ChallengeChallengeIdParticipantWithHttpInfo}{\code{ChallengeServicesApi$getRepoV1ChallengeChallengeIdParticipantWithHttpInfo()}}
\item \href{#method-ChallengeServicesApi-getRepoV1ChallengeChallengeIdRegistratableTeam}{\code{ChallengeServicesApi$getRepoV1ChallengeChallengeIdRegistratableTeam()}}
\item \href{#method-ChallengeServicesApi-getRepoV1ChallengeChallengeIdRegistratableTeamWithHttpInfo}{\code{ChallengeServicesApi$getRepoV1ChallengeChallengeIdRegistratableTeamWithHttpInfo()}}
\item \href{#method-ChallengeServicesApi-getRepoV1ChallengeChallengeIdSubmissionTeams}{\code{ChallengeServicesApi$getRepoV1ChallengeChallengeIdSubmissionTeams()}}
\item \href{#method-ChallengeServicesApi-getRepoV1ChallengeChallengeIdSubmissionTeamsWithHttpInfo}{\code{ChallengeServicesApi$getRepoV1ChallengeChallengeIdSubmissionTeamsWithHttpInfo()}}
\item \href{#method-ChallengeServicesApi-getRepoV1EntityIdChallenge}{\code{ChallengeServicesApi$getRepoV1EntityIdChallenge()}}
\item \href{#method-ChallengeServicesApi-getRepoV1EntityIdChallengeWithHttpInfo}{\code{ChallengeServicesApi$getRepoV1EntityIdChallengeWithHttpInfo()}}
\item \href{#method-ChallengeServicesApi-postRepoV1Challenge}{\code{ChallengeServicesApi$postRepoV1Challenge()}}
\item \href{#method-ChallengeServicesApi-postRepoV1ChallengeWithHttpInfo}{\code{ChallengeServicesApi$postRepoV1ChallengeWithHttpInfo()}}
\item \href{#method-ChallengeServicesApi-postRepoV1ChallengeChallengeIdChallengeTeam}{\code{ChallengeServicesApi$postRepoV1ChallengeChallengeIdChallengeTeam()}}
\item \href{#method-ChallengeServicesApi-postRepoV1ChallengeChallengeIdChallengeTeamWithHttpInfo}{\code{ChallengeServicesApi$postRepoV1ChallengeChallengeIdChallengeTeamWithHttpInfo()}}
\item \href{#method-ChallengeServicesApi-putRepoV1ChallengeChallengeId}{\code{ChallengeServicesApi$putRepoV1ChallengeChallengeId()}}
\item \href{#method-ChallengeServicesApi-putRepoV1ChallengeChallengeIdWithHttpInfo}{\code{ChallengeServicesApi$putRepoV1ChallengeChallengeIdWithHttpInfo()}}
\item \href{#method-ChallengeServicesApi-putRepoV1ChallengeChallengeIdChallengeTeamChallengeTeamId}{\code{ChallengeServicesApi$putRepoV1ChallengeChallengeIdChallengeTeamChallengeTeamId()}}
\item \href{#method-ChallengeServicesApi-putRepoV1ChallengeChallengeIdChallengeTeamChallengeTeamIdWithHttpInfo}{\code{ChallengeServicesApi$putRepoV1ChallengeChallengeIdChallengeTeamChallengeTeamIdWithHttpInfo()}}
\item \href{#method-ChallengeServicesApi-clone}{\code{ChallengeServicesApi$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ChallengeServicesApi-new"></a>}}
\if{latex}{\out{\hypertarget{method-ChallengeServicesApi-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new ChallengeServicesApi.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ChallengeServicesApi$new(api_client)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{api_client}}{An instance of API client.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ChallengeServicesApi-deleteRepoV1ChallengeChallengeId"></a>}}
\if{latex}{\out{\hypertarget{method-ChallengeServicesApi-deleteRepoV1ChallengeChallengeId}{}}}
\subsection{Method \code{deleteRepoV1ChallengeChallengeId()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ChallengeServicesApi$deleteRepoV1ChallengeChallengeId(challenge_id, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{challenge_id}}{}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
void
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ChallengeServicesApi-deleteRepoV1ChallengeChallengeIdWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-ChallengeServicesApi-deleteRepoV1ChallengeChallengeIdWithHttpInfo}{}}}
\subsection{Method \code{deleteRepoV1ChallengeChallengeIdWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ChallengeServicesApi$deleteRepoV1ChallengeChallengeIdWithHttpInfo(
  challenge_id,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{challenge_id}}{}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (void) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ChallengeServicesApi-deleteRepoV1ChallengeTeamChallengeTeamId"></a>}}
\if{latex}{\out{\hypertarget{method-ChallengeServicesApi-deleteRepoV1ChallengeTeamChallengeTeamId}{}}}
\subsection{Method \code{deleteRepoV1ChallengeTeamChallengeTeamId()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ChallengeServicesApi$deleteRepoV1ChallengeTeamChallengeTeamId(
  challenge_team_id,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{challenge_team_id}}{}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
void
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ChallengeServicesApi-deleteRepoV1ChallengeTeamChallengeTeamIdWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-ChallengeServicesApi-deleteRepoV1ChallengeTeamChallengeTeamIdWithHttpInfo}{}}}
\subsection{Method \code{deleteRepoV1ChallengeTeamChallengeTeamIdWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ChallengeServicesApi$deleteRepoV1ChallengeTeamChallengeTeamIdWithHttpInfo(
  challenge_team_id,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{challenge_team_id}}{}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (void) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ChallengeServicesApi-getRepoV1Challenge"></a>}}
\if{latex}{\out{\hypertarget{method-ChallengeServicesApi-getRepoV1Challenge}{}}}
\subsection{Method \code{getRepoV1Challenge()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ChallengeServicesApi$getRepoV1Challenge(
  participant_id,
  limit = NULL,
  offset = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{participant_id}}{}

\item{\code{limit}}{(optional) No description}

\item{\code{offset}}{(optional) No description}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelChallengePagedResults
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ChallengeServicesApi-getRepoV1ChallengeWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-ChallengeServicesApi-getRepoV1ChallengeWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1ChallengeWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ChallengeServicesApi$getRepoV1ChallengeWithHttpInfo(
  participant_id,
  limit = NULL,
  offset = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{participant_id}}{}

\item{\code{limit}}{(optional) No description}

\item{\code{offset}}{(optional) No description}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelChallengePagedResults) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ChallengeServicesApi-getRepoV1ChallengeChallengeId"></a>}}
\if{latex}{\out{\hypertarget{method-ChallengeServicesApi-getRepoV1ChallengeChallengeId}{}}}
\subsection{Method \code{getRepoV1ChallengeChallengeId()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ChallengeServicesApi$getRepoV1ChallengeChallengeId(
  challenge_id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{challenge_id}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelChallenge
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ChallengeServicesApi-getRepoV1ChallengeChallengeIdWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-ChallengeServicesApi-getRepoV1ChallengeChallengeIdWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1ChallengeChallengeIdWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ChallengeServicesApi$getRepoV1ChallengeChallengeIdWithHttpInfo(
  challenge_id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{challenge_id}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelChallenge) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ChallengeServicesApi-getRepoV1ChallengeChallengeIdChallengeTeam"></a>}}
\if{latex}{\out{\hypertarget{method-ChallengeServicesApi-getRepoV1ChallengeChallengeIdChallengeTeam}{}}}
\subsection{Method \code{getRepoV1ChallengeChallengeIdChallengeTeam()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ChallengeServicesApi$getRepoV1ChallengeChallengeIdChallengeTeam(
  challenge_id,
  limit = NULL,
  offset = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{challenge_id}}{}

\item{\code{limit}}{(optional) No description}

\item{\code{offset}}{(optional) No description}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelChallengeTeamPagedResults
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ChallengeServicesApi-getRepoV1ChallengeChallengeIdChallengeTeamWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-ChallengeServicesApi-getRepoV1ChallengeChallengeIdChallengeTeamWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1ChallengeChallengeIdChallengeTeamWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ChallengeServicesApi$getRepoV1ChallengeChallengeIdChallengeTeamWithHttpInfo(
  challenge_id,
  limit = NULL,
  offset = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{challenge_id}}{}

\item{\code{limit}}{(optional) No description}

\item{\code{offset}}{(optional) No description}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelChallengeTeamPagedResults) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ChallengeServicesApi-getRepoV1ChallengeChallengeIdParticipant"></a>}}
\if{latex}{\out{\hypertarget{method-ChallengeServicesApi-getRepoV1ChallengeChallengeIdParticipant}{}}}
\subsection{Method \code{getRepoV1ChallengeChallengeIdParticipant()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ChallengeServicesApi$getRepoV1ChallengeChallengeIdParticipant(
  challenge_id,
  affiliated = NULL,
  limit = NULL,
  offset = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{challenge_id}}{}

\item{\code{affiliated}}{(optional) If affiliated=true, return just participants affiliated with some   registered Team.  If false, return those not affiliated with any registered Team.    If omitted return all participants.}

\item{\code{limit}}{(optional) No description}

\item{\code{offset}}{(optional) No description}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelPaginatedIds
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ChallengeServicesApi-getRepoV1ChallengeChallengeIdParticipantWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-ChallengeServicesApi-getRepoV1ChallengeChallengeIdParticipantWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1ChallengeChallengeIdParticipantWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ChallengeServicesApi$getRepoV1ChallengeChallengeIdParticipantWithHttpInfo(
  challenge_id,
  affiliated = NULL,
  limit = NULL,
  offset = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{challenge_id}}{}

\item{\code{affiliated}}{(optional) If affiliated=true, return just participants affiliated with some   registered Team.  If false, return those not affiliated with any registered Team.    If omitted return all participants.}

\item{\code{limit}}{(optional) No description}

\item{\code{offset}}{(optional) No description}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelPaginatedIds) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ChallengeServicesApi-getRepoV1ChallengeChallengeIdRegistratableTeam"></a>}}
\if{latex}{\out{\hypertarget{method-ChallengeServicesApi-getRepoV1ChallengeChallengeIdRegistratableTeam}{}}}
\subsection{Method \code{getRepoV1ChallengeChallengeIdRegistratableTeam()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ChallengeServicesApi$getRepoV1ChallengeChallengeIdRegistratableTeam(
  challenge_id,
  limit = NULL,
  offset = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{challenge_id}}{}

\item{\code{limit}}{(optional) No description}

\item{\code{offset}}{(optional) No description}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelPaginatedIds
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ChallengeServicesApi-getRepoV1ChallengeChallengeIdRegistratableTeamWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-ChallengeServicesApi-getRepoV1ChallengeChallengeIdRegistratableTeamWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1ChallengeChallengeIdRegistratableTeamWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ChallengeServicesApi$getRepoV1ChallengeChallengeIdRegistratableTeamWithHttpInfo(
  challenge_id,
  limit = NULL,
  offset = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{challenge_id}}{}

\item{\code{limit}}{(optional) No description}

\item{\code{offset}}{(optional) No description}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelPaginatedIds) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ChallengeServicesApi-getRepoV1ChallengeChallengeIdSubmissionTeams"></a>}}
\if{latex}{\out{\hypertarget{method-ChallengeServicesApi-getRepoV1ChallengeChallengeIdSubmissionTeams}{}}}
\subsection{Method \code{getRepoV1ChallengeChallengeIdSubmissionTeams()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ChallengeServicesApi$getRepoV1ChallengeChallengeIdSubmissionTeams(
  challenge_id,
  limit = NULL,
  offset = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{challenge_id}}{}

\item{\code{limit}}{(optional) No description}

\item{\code{offset}}{(optional) No description}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelPaginatedIds
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ChallengeServicesApi-getRepoV1ChallengeChallengeIdSubmissionTeamsWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-ChallengeServicesApi-getRepoV1ChallengeChallengeIdSubmissionTeamsWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1ChallengeChallengeIdSubmissionTeamsWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ChallengeServicesApi$getRepoV1ChallengeChallengeIdSubmissionTeamsWithHttpInfo(
  challenge_id,
  limit = NULL,
  offset = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{challenge_id}}{}

\item{\code{limit}}{(optional) No description}

\item{\code{offset}}{(optional) No description}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelPaginatedIds) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ChallengeServicesApi-getRepoV1EntityIdChallenge"></a>}}
\if{latex}{\out{\hypertarget{method-ChallengeServicesApi-getRepoV1EntityIdChallenge}{}}}
\subsection{Method \code{getRepoV1EntityIdChallenge()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ChallengeServicesApi$getRepoV1EntityIdChallenge(id, data_file = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelChallenge
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ChallengeServicesApi-getRepoV1EntityIdChallengeWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-ChallengeServicesApi-getRepoV1EntityIdChallengeWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1EntityIdChallengeWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ChallengeServicesApi$getRepoV1EntityIdChallengeWithHttpInfo(
  id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelChallenge) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ChallengeServicesApi-postRepoV1Challenge"></a>}}
\if{latex}{\out{\hypertarget{method-ChallengeServicesApi-postRepoV1Challenge}{}}}
\subsection{Method \code{postRepoV1Challenge()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ChallengeServicesApi$postRepoV1Challenge(
  org_sagebionetworks_repo_model_challenge,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org_sagebionetworks_repo_model_challenge}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelChallenge
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ChallengeServicesApi-postRepoV1ChallengeWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-ChallengeServicesApi-postRepoV1ChallengeWithHttpInfo}{}}}
\subsection{Method \code{postRepoV1ChallengeWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ChallengeServicesApi$postRepoV1ChallengeWithHttpInfo(
  org_sagebionetworks_repo_model_challenge,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org_sagebionetworks_repo_model_challenge}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelChallenge) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ChallengeServicesApi-postRepoV1ChallengeChallengeIdChallengeTeam"></a>}}
\if{latex}{\out{\hypertarget{method-ChallengeServicesApi-postRepoV1ChallengeChallengeIdChallengeTeam}{}}}
\subsection{Method \code{postRepoV1ChallengeChallengeIdChallengeTeam()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ChallengeServicesApi$postRepoV1ChallengeChallengeIdChallengeTeam(
  challenge_id,
  org_sagebionetworks_repo_model_challenge_team,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{challenge_id}}{}

\item{\code{org_sagebionetworks_repo_model_challenge_team}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelChallengeTeam
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ChallengeServicesApi-postRepoV1ChallengeChallengeIdChallengeTeamWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-ChallengeServicesApi-postRepoV1ChallengeChallengeIdChallengeTeamWithHttpInfo}{}}}
\subsection{Method \code{postRepoV1ChallengeChallengeIdChallengeTeamWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ChallengeServicesApi$postRepoV1ChallengeChallengeIdChallengeTeamWithHttpInfo(
  challenge_id,
  org_sagebionetworks_repo_model_challenge_team,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{challenge_id}}{}

\item{\code{org_sagebionetworks_repo_model_challenge_team}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelChallengeTeam) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ChallengeServicesApi-putRepoV1ChallengeChallengeId"></a>}}
\if{latex}{\out{\hypertarget{method-ChallengeServicesApi-putRepoV1ChallengeChallengeId}{}}}
\subsection{Method \code{putRepoV1ChallengeChallengeId()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ChallengeServicesApi$putRepoV1ChallengeChallengeId(
  challenge_id,
  org_sagebionetworks_repo_model_challenge,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{challenge_id}}{}

\item{\code{org_sagebionetworks_repo_model_challenge}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelChallenge
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ChallengeServicesApi-putRepoV1ChallengeChallengeIdWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-ChallengeServicesApi-putRepoV1ChallengeChallengeIdWithHttpInfo}{}}}
\subsection{Method \code{putRepoV1ChallengeChallengeIdWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ChallengeServicesApi$putRepoV1ChallengeChallengeIdWithHttpInfo(
  challenge_id,
  org_sagebionetworks_repo_model_challenge,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{challenge_id}}{}

\item{\code{org_sagebionetworks_repo_model_challenge}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelChallenge) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ChallengeServicesApi-putRepoV1ChallengeChallengeIdChallengeTeamChallengeTeamId"></a>}}
\if{latex}{\out{\hypertarget{method-ChallengeServicesApi-putRepoV1ChallengeChallengeIdChallengeTeamChallengeTeamId}{}}}
\subsection{Method \code{putRepoV1ChallengeChallengeIdChallengeTeamChallengeTeamId()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ChallengeServicesApi$putRepoV1ChallengeChallengeIdChallengeTeamChallengeTeamId(
  challenge_id,
  challenge_team_id,
  org_sagebionetworks_repo_model_challenge_team,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{challenge_id}}{}

\item{\code{challenge_team_id}}{}

\item{\code{org_sagebionetworks_repo_model_challenge_team}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelChallengeTeam
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ChallengeServicesApi-putRepoV1ChallengeChallengeIdChallengeTeamChallengeTeamIdWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-ChallengeServicesApi-putRepoV1ChallengeChallengeIdChallengeTeamChallengeTeamIdWithHttpInfo}{}}}
\subsection{Method \code{putRepoV1ChallengeChallengeIdChallengeTeamChallengeTeamIdWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ChallengeServicesApi$putRepoV1ChallengeChallengeIdChallengeTeamChallengeTeamIdWithHttpInfo(
  challenge_id,
  challenge_team_id,
  org_sagebionetworks_repo_model_challenge_team,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{challenge_id}}{}

\item{\code{challenge_team_id}}{}

\item{\code{org_sagebionetworks_repo_model_challenge_team}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelChallengeTeam) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ChallengeServicesApi-clone"></a>}}
\if{latex}{\out{\hypertarget{method-ChallengeServicesApi-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ChallengeServicesApi$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
