% Generated by roxygen2: do not edit by hand
% Please edit documentation in
%   R/org_sagebionetworks_repo_model_discussion_update_thread_message.R
\docType{class}
\name{OrgSagebionetworksRepoModelDiscussionUpdateThreadMessage}
\alias{OrgSagebionetworksRepoModelDiscussionUpdateThreadMessage}
\title{OrgSagebionetworksRepoModelDiscussionUpdateThreadMessage}
\format{
An \code{R6Class} generator object
}
\description{
OrgSagebionetworksRepoModelDiscussionUpdateThreadMessage Class

OrgSagebionetworksRepoModelDiscussionUpdateThreadMessage Class
}
\details{
Create a new OrgSagebionetworksRepoModelDiscussionUpdateThreadMessage
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{messageMarkdown}}{character [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-OrgSagebionetworksRepoModelDiscussionUpdateThreadMessage-new}{\code{OrgSagebionetworksRepoModelDiscussionUpdateThreadMessage$new()}}
\item \href{#method-OrgSagebionetworksRepoModelDiscussionUpdateThreadMessage-toJSON}{\code{OrgSagebionetworksRepoModelDiscussionUpdateThreadMessage$toJSON()}}
\item \href{#method-OrgSagebionetworksRepoModelDiscussionUpdateThreadMessage-fromJSON}{\code{OrgSagebionetworksRepoModelDiscussionUpdateThreadMessage$fromJSON()}}
\item \href{#method-OrgSagebionetworksRepoModelDiscussionUpdateThreadMessage-toJSONString}{\code{OrgSagebionetworksRepoModelDiscussionUpdateThreadMessage$toJSONString()}}
\item \href{#method-OrgSagebionetworksRepoModelDiscussionUpdateThreadMessage-fromJSONString}{\code{OrgSagebionetworksRepoModelDiscussionUpdateThreadMessage$fromJSONString()}}
\item \href{#method-OrgSagebionetworksRepoModelDiscussionUpdateThreadMessage-validateJSON}{\code{OrgSagebionetworksRepoModelDiscussionUpdateThreadMessage$validateJSON()}}
\item \href{#method-OrgSagebionetworksRepoModelDiscussionUpdateThreadMessage-toString}{\code{OrgSagebionetworksRepoModelDiscussionUpdateThreadMessage$toString()}}
\item \href{#method-OrgSagebionetworksRepoModelDiscussionUpdateThreadMessage-isValid}{\code{OrgSagebionetworksRepoModelDiscussionUpdateThreadMessage$isValid()}}
\item \href{#method-OrgSagebionetworksRepoModelDiscussionUpdateThreadMessage-getInvalidFields}{\code{OrgSagebionetworksRepoModelDiscussionUpdateThreadMessage$getInvalidFields()}}
\item \href{#method-OrgSagebionetworksRepoModelDiscussionUpdateThreadMessage-print}{\code{OrgSagebionetworksRepoModelDiscussionUpdateThreadMessage$print()}}
\item \href{#method-OrgSagebionetworksRepoModelDiscussionUpdateThreadMessage-clone}{\code{OrgSagebionetworksRepoModelDiscussionUpdateThreadMessage$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelDiscussionUpdateThreadMessage-new"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelDiscussionUpdateThreadMessage-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new OrgSagebionetworksRepoModelDiscussionUpdateThreadMessage class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelDiscussionUpdateThreadMessage$new(
  messageMarkdown = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{messageMarkdown}}{messageMarkdown}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelDiscussionUpdateThreadMessage-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelDiscussionUpdateThreadMessage-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelDiscussionUpdateThreadMessage$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
OrgSagebionetworksRepoModelDiscussionUpdateThreadMessage in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelDiscussionUpdateThreadMessage-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelDiscussionUpdateThreadMessage-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of OrgSagebionetworksRepoModelDiscussionUpdateThreadMessage
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelDiscussionUpdateThreadMessage$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of OrgSagebionetworksRepoModelDiscussionUpdateThreadMessage
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelDiscussionUpdateThreadMessage-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelDiscussionUpdateThreadMessage-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelDiscussionUpdateThreadMessage$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
OrgSagebionetworksRepoModelDiscussionUpdateThreadMessage in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelDiscussionUpdateThreadMessage-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelDiscussionUpdateThreadMessage-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of OrgSagebionetworksRepoModelDiscussionUpdateThreadMessage
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelDiscussionUpdateThreadMessage$fromJSONString(
  input_json
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of OrgSagebionetworksRepoModelDiscussionUpdateThreadMessage
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelDiscussionUpdateThreadMessage-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelDiscussionUpdateThreadMessage-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to OrgSagebionetworksRepoModelDiscussionUpdateThreadMessage and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelDiscussionUpdateThreadMessage$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelDiscussionUpdateThreadMessage-toString"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelDiscussionUpdateThreadMessage-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelDiscussionUpdateThreadMessage$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of OrgSagebionetworksRepoModelDiscussionUpdateThreadMessage
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelDiscussionUpdateThreadMessage-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelDiscussionUpdateThreadMessage-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelDiscussionUpdateThreadMessage$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelDiscussionUpdateThreadMessage-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelDiscussionUpdateThreadMessage-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelDiscussionUpdateThreadMessage$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelDiscussionUpdateThreadMessage-print"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelDiscussionUpdateThreadMessage-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelDiscussionUpdateThreadMessage$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelDiscussionUpdateThreadMessage-clone"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelDiscussionUpdateThreadMessage-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelDiscussionUpdateThreadMessage$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
