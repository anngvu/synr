% Generated by roxygen2: do not edit by hand
% Please edit documentation in
%   R/org_sagebionetworks_repo_model_table_entity_update_results.R
\docType{class}
\name{OrgSagebionetworksRepoModelTableEntityUpdateResults}
\alias{OrgSagebionetworksRepoModelTableEntityUpdateResults}
\title{OrgSagebionetworksRepoModelTableEntityUpdateResults}
\format{
An \code{R6Class} generator object
}
\description{
A list of EntityUpdateResults

OrgSagebionetworksRepoModelTableEntityUpdateResults Class
}
\details{
Create a new OrgSagebionetworksRepoModelTableEntityUpdateResults
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{concreteType}}{character}

\item{\code{updateResults}}{List of Results list(\link{OrgSagebionetworksRepoModelTableEntityUpdateResult}) [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-OrgSagebionetworksRepoModelTableEntityUpdateResults-new}{\code{OrgSagebionetworksRepoModelTableEntityUpdateResults$new()}}
\item \href{#method-OrgSagebionetworksRepoModelTableEntityUpdateResults-toJSON}{\code{OrgSagebionetworksRepoModelTableEntityUpdateResults$toJSON()}}
\item \href{#method-OrgSagebionetworksRepoModelTableEntityUpdateResults-fromJSON}{\code{OrgSagebionetworksRepoModelTableEntityUpdateResults$fromJSON()}}
\item \href{#method-OrgSagebionetworksRepoModelTableEntityUpdateResults-toJSONString}{\code{OrgSagebionetworksRepoModelTableEntityUpdateResults$toJSONString()}}
\item \href{#method-OrgSagebionetworksRepoModelTableEntityUpdateResults-fromJSONString}{\code{OrgSagebionetworksRepoModelTableEntityUpdateResults$fromJSONString()}}
\item \href{#method-OrgSagebionetworksRepoModelTableEntityUpdateResults-validateJSON}{\code{OrgSagebionetworksRepoModelTableEntityUpdateResults$validateJSON()}}
\item \href{#method-OrgSagebionetworksRepoModelTableEntityUpdateResults-toString}{\code{OrgSagebionetworksRepoModelTableEntityUpdateResults$toString()}}
\item \href{#method-OrgSagebionetworksRepoModelTableEntityUpdateResults-isValid}{\code{OrgSagebionetworksRepoModelTableEntityUpdateResults$isValid()}}
\item \href{#method-OrgSagebionetworksRepoModelTableEntityUpdateResults-getInvalidFields}{\code{OrgSagebionetworksRepoModelTableEntityUpdateResults$getInvalidFields()}}
\item \href{#method-OrgSagebionetworksRepoModelTableEntityUpdateResults-print}{\code{OrgSagebionetworksRepoModelTableEntityUpdateResults$print()}}
\item \href{#method-OrgSagebionetworksRepoModelTableEntityUpdateResults-clone}{\code{OrgSagebionetworksRepoModelTableEntityUpdateResults$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableEntityUpdateResults-new"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableEntityUpdateResults-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new OrgSagebionetworksRepoModelTableEntityUpdateResults class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableEntityUpdateResults$new(
  concreteType,
  updateResults = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{concreteType}}{concreteType}

\item{\code{updateResults}}{List of Results}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableEntityUpdateResults-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableEntityUpdateResults-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableEntityUpdateResults$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
OrgSagebionetworksRepoModelTableEntityUpdateResults in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableEntityUpdateResults-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableEntityUpdateResults-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of OrgSagebionetworksRepoModelTableEntityUpdateResults
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableEntityUpdateResults$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of OrgSagebionetworksRepoModelTableEntityUpdateResults
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableEntityUpdateResults-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableEntityUpdateResults-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableEntityUpdateResults$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
OrgSagebionetworksRepoModelTableEntityUpdateResults in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableEntityUpdateResults-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableEntityUpdateResults-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of OrgSagebionetworksRepoModelTableEntityUpdateResults
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableEntityUpdateResults$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of OrgSagebionetworksRepoModelTableEntityUpdateResults
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableEntityUpdateResults-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableEntityUpdateResults-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to OrgSagebionetworksRepoModelTableEntityUpdateResults and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableEntityUpdateResults$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableEntityUpdateResults-toString"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableEntityUpdateResults-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableEntityUpdateResults$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of OrgSagebionetworksRepoModelTableEntityUpdateResults
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableEntityUpdateResults-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableEntityUpdateResults-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableEntityUpdateResults$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableEntityUpdateResults-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableEntityUpdateResults-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableEntityUpdateResults$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableEntityUpdateResults-print"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableEntityUpdateResults-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableEntityUpdateResults$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableEntityUpdateResults-clone"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableEntityUpdateResults-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableEntityUpdateResults$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
