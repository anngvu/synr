% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/entity_bundle_services_v2_api.R
\docType{class}
\name{EntityBundleServicesV2Api}
\alias{EntityBundleServicesV2Api}
\title{EntityBundleServicesV2 operations}
\format{
An \code{R6Class} generator object
}
\description{
EntityBundleServicesV2Api
}
\details{
Synapse REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: v1
Generated by: https://openapi-generator.tech
}
\section{Methods}{

\describe{
\strong{ postRepoV1EntityBundle2Create } \emph{  }

\itemize{
\item \emph{ @param } org_sagebionetworks_repo_model_entitybundle_v2_entity_bundle_create \link{OrgSagebionetworksRepoModelEntitybundleV2EntityBundleCreate}
\item \emph{ @param } generated_by character
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelEntitybundleV2EntityBundle} \cr


\item status code : 201 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelEntitybundleV2EntityBundle
\item response headers :

\tabular{ll}{
}
}

\strong{ postRepoV1EntityIdBundle2 } \emph{  }

\itemize{
\item \emph{ @param } id character
\item \emph{ @param } org_sagebionetworks_repo_model_entitybundle_v2_entity_bundle_request \link{OrgSagebionetworksRepoModelEntitybundleV2EntityBundleRequest}
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelEntitybundleV2EntityBundle} \cr


\item status code : 200 | The requested Entity if it exists.

\item return type : OrgSagebionetworksRepoModelEntitybundleV2EntityBundle
\item response headers :

\tabular{ll}{
}
}

\strong{ postRepoV1EntityIdVersionVersionNumberBundle2 } \emph{  }

\itemize{
\item \emph{ @param } id character
\item \emph{ @param } version_number numeric
\item \emph{ @param } org_sagebionetworks_repo_model_entitybundle_v2_entity_bundle_request \link{OrgSagebionetworksRepoModelEntitybundleV2EntityBundleRequest}
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelEntitybundleV2EntityBundle} \cr


\item status code : 200 | The requested Entity if it exists.

\item return type : OrgSagebionetworksRepoModelEntitybundleV2EntityBundle
\item response headers :

\tabular{ll}{
}
}

\strong{ putRepoV1EntityIdBundle2 } \emph{  }

\itemize{
\item \emph{ @param } id character
\item \emph{ @param } org_sagebionetworks_repo_model_entitybundle_v2_entity_bundle_create \link{OrgSagebionetworksRepoModelEntitybundleV2EntityBundleCreate}
\item \emph{ @param } generated_by character
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelEntitybundleV2EntityBundle} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelEntitybundleV2EntityBundle
\item response headers :

\tabular{ll}{
}
}

}
}

\examples{
\dontrun{
####################  postRepoV1EntityBundle2Create  ####################

library(synr)
var_org_sagebionetworks_repo_model_entitybundle_v2_entity_bundle_create <- org.sagebionetworks.repo.model.entitybundle.v2.EntityBundleCreate$new(org.sagebionetworks.repo.model.Entity$new("concreteType_example", "name_example", "description_example", "id_example", "etag_example", "createdOn_example", "modifiedOn_example", "createdBy_example", "modifiedBy_example", "parentId_example", "repositoryName_example", "isManaged_example", 123, "versionLabel_example", "versionComment_example", "isLatestVersion_example", c("columnIds_example"), "isSearchEnabled_example", c(org.sagebionetworks.repo.model.EntityRef$new("entityId_example", 123)), 123, "type_example", c("scopeIds_example"), "definingSQL_example", org.sagebionetworks.repo.model.Reference$new("targetId_example", 123), "linksToClassName_example", "previewString_example", c("headers_example"), c(org.sagebionetworks.repo.model.Row$new(c("cells_example"))), "dataFileHandleId_example", "fileNameOverride_example", "alias_example", 123, "checksum_example", 123, "singleString_example", c("stringList_example"), "singleDate_example", c("dateList_example"), 123, c(123), 123, c(123), "concept_example", "someEnum_example", c(org.sagebionetworks.repo.model.Reference$new("targetId_example", 123)), c(org.sagebionetworks.repo.model.EnvironmentDescriptor$new("type_example", "name_example", "quantifier_example"))), org.sagebionetworks.repo.model.annotation.v2.Annotations$new("id_example", "etag_example", c(key = org.sagebionetworks.repo.model.annotation.v2.AnnotationsValue$new(c("value_example"), "type_example"))), org.sagebionetworks.repo.model.AccessControlList$new("id_example", "createdBy_example", "creationDate_example", "modifiedBy_example", "modifiedOn_example", "etag_example", c(org.sagebionetworks.repo.model.ResourceAccess$new(123, c("accessType_example"))))) # OrgSagebionetworksRepoModelEntitybundleV2EntityBundleCreate | 
var_generated_by <- "generated_by_example" # character |  (Optional)

api_instance <- EntityBundleServicesV2Api$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$postRepoV1EntityBundle2Create(var_org_sagebionetworks_repo_model_entitybundle_v2_entity_bundle_create, generated_by = var_generated_bydata_file = "result.txt")
result <- api_instance$postRepoV1EntityBundle2Create(var_org_sagebionetworks_repo_model_entitybundle_v2_entity_bundle_create, generated_by = var_generated_by)
dput(result)


####################  postRepoV1EntityIdBundle2  ####################

library(synr)
var_id <- "id_example" # character | - The ID of the entity to fetch.
var_org_sagebionetworks_repo_model_entitybundle_v2_entity_bundle_request <- org.sagebionetworks.repo.model.entitybundle.v2.EntityBundleRequest$new("includeEntity_example", "includeAnnotations_example", "includePermissions_example", "includeEntityPath_example", "includeHasChildren_example", "includeAccessControlList_example", "includeFileHandles_example", "includeTableBundle_example", "includeRootWikiId_example", "includeBenefactorACL_example", "includeDOIAssociation_example", "includeFileName_example", "includeThreadCount_example", "includeRestrictionInformation_example", "includeActivity_example") # OrgSagebionetworksRepoModelEntitybundleV2EntityBundleRequest | 

api_instance <- EntityBundleServicesV2Api$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$postRepoV1EntityIdBundle2(var_id, var_org_sagebionetworks_repo_model_entitybundle_v2_entity_bundle_requestdata_file = "result.txt")
result <- api_instance$postRepoV1EntityIdBundle2(var_id, var_org_sagebionetworks_repo_model_entitybundle_v2_entity_bundle_request)
dput(result)


####################  postRepoV1EntityIdVersionVersionNumberBundle2  ####################

library(synr)
var_id <- "id_example" # character | - The ID of the entity to fetch.
var_version_number <- 3.4 # numeric | - The version of the entity to fetch
var_org_sagebionetworks_repo_model_entitybundle_v2_entity_bundle_request <- org.sagebionetworks.repo.model.entitybundle.v2.EntityBundleRequest$new("includeEntity_example", "includeAnnotations_example", "includePermissions_example", "includeEntityPath_example", "includeHasChildren_example", "includeAccessControlList_example", "includeFileHandles_example", "includeTableBundle_example", "includeRootWikiId_example", "includeBenefactorACL_example", "includeDOIAssociation_example", "includeFileName_example", "includeThreadCount_example", "includeRestrictionInformation_example", "includeActivity_example") # OrgSagebionetworksRepoModelEntitybundleV2EntityBundleRequest | 

api_instance <- EntityBundleServicesV2Api$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$postRepoV1EntityIdVersionVersionNumberBundle2(var_id, var_version_number, var_org_sagebionetworks_repo_model_entitybundle_v2_entity_bundle_requestdata_file = "result.txt")
result <- api_instance$postRepoV1EntityIdVersionVersionNumberBundle2(var_id, var_version_number, var_org_sagebionetworks_repo_model_entitybundle_v2_entity_bundle_request)
dput(result)


####################  putRepoV1EntityIdBundle2  ####################

library(synr)
var_id <- "id_example" # character | 
var_org_sagebionetworks_repo_model_entitybundle_v2_entity_bundle_create <- org.sagebionetworks.repo.model.entitybundle.v2.EntityBundleCreate$new(org.sagebionetworks.repo.model.Entity$new("concreteType_example", "name_example", "description_example", "id_example", "etag_example", "createdOn_example", "modifiedOn_example", "createdBy_example", "modifiedBy_example", "parentId_example", "repositoryName_example", "isManaged_example", 123, "versionLabel_example", "versionComment_example", "isLatestVersion_example", c("columnIds_example"), "isSearchEnabled_example", c(org.sagebionetworks.repo.model.EntityRef$new("entityId_example", 123)), 123, "type_example", c("scopeIds_example"), "definingSQL_example", org.sagebionetworks.repo.model.Reference$new("targetId_example", 123), "linksToClassName_example", "previewString_example", c("headers_example"), c(org.sagebionetworks.repo.model.Row$new(c("cells_example"))), "dataFileHandleId_example", "fileNameOverride_example", "alias_example", 123, "checksum_example", 123, "singleString_example", c("stringList_example"), "singleDate_example", c("dateList_example"), 123, c(123), 123, c(123), "concept_example", "someEnum_example", c(org.sagebionetworks.repo.model.Reference$new("targetId_example", 123)), c(org.sagebionetworks.repo.model.EnvironmentDescriptor$new("type_example", "name_example", "quantifier_example"))), org.sagebionetworks.repo.model.annotation.v2.Annotations$new("id_example", "etag_example", c(key = org.sagebionetworks.repo.model.annotation.v2.AnnotationsValue$new(c("value_example"), "type_example"))), org.sagebionetworks.repo.model.AccessControlList$new("id_example", "createdBy_example", "creationDate_example", "modifiedBy_example", "modifiedOn_example", "etag_example", c(org.sagebionetworks.repo.model.ResourceAccess$new(123, c("accessType_example"))))) # OrgSagebionetworksRepoModelEntitybundleV2EntityBundleCreate | 
var_generated_by <- "generated_by_example" # character |  (Optional)

api_instance <- EntityBundleServicesV2Api$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$putRepoV1EntityIdBundle2(var_id, var_org_sagebionetworks_repo_model_entitybundle_v2_entity_bundle_create, generated_by = var_generated_bydata_file = "result.txt")
result <- api_instance$putRepoV1EntityIdBundle2(var_id, var_org_sagebionetworks_repo_model_entitybundle_v2_entity_bundle_create, generated_by = var_generated_by)
dput(result)


}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{api_client}}{Handles the client-server communication.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-EntityBundleServicesV2Api-new}{\code{EntityBundleServicesV2Api$new()}}
\item \href{#method-EntityBundleServicesV2Api-postRepoV1EntityBundle2Create}{\code{EntityBundleServicesV2Api$postRepoV1EntityBundle2Create()}}
\item \href{#method-EntityBundleServicesV2Api-postRepoV1EntityBundle2CreateWithHttpInfo}{\code{EntityBundleServicesV2Api$postRepoV1EntityBundle2CreateWithHttpInfo()}}
\item \href{#method-EntityBundleServicesV2Api-postRepoV1EntityIdBundle2}{\code{EntityBundleServicesV2Api$postRepoV1EntityIdBundle2()}}
\item \href{#method-EntityBundleServicesV2Api-postRepoV1EntityIdBundle2WithHttpInfo}{\code{EntityBundleServicesV2Api$postRepoV1EntityIdBundle2WithHttpInfo()}}
\item \href{#method-EntityBundleServicesV2Api-postRepoV1EntityIdVersionVersionNumberBundle2}{\code{EntityBundleServicesV2Api$postRepoV1EntityIdVersionVersionNumberBundle2()}}
\item \href{#method-EntityBundleServicesV2Api-postRepoV1EntityIdVersionVersionNumberBundle2WithHttpInfo}{\code{EntityBundleServicesV2Api$postRepoV1EntityIdVersionVersionNumberBundle2WithHttpInfo()}}
\item \href{#method-EntityBundleServicesV2Api-putRepoV1EntityIdBundle2}{\code{EntityBundleServicesV2Api$putRepoV1EntityIdBundle2()}}
\item \href{#method-EntityBundleServicesV2Api-putRepoV1EntityIdBundle2WithHttpInfo}{\code{EntityBundleServicesV2Api$putRepoV1EntityIdBundle2WithHttpInfo()}}
\item \href{#method-EntityBundleServicesV2Api-clone}{\code{EntityBundleServicesV2Api$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityBundleServicesV2Api-new"></a>}}
\if{latex}{\out{\hypertarget{method-EntityBundleServicesV2Api-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new EntityBundleServicesV2Api.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityBundleServicesV2Api$new(api_client)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{api_client}}{An instance of API client.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityBundleServicesV2Api-postRepoV1EntityBundle2Create"></a>}}
\if{latex}{\out{\hypertarget{method-EntityBundleServicesV2Api-postRepoV1EntityBundle2Create}{}}}
\subsection{Method \code{postRepoV1EntityBundle2Create()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityBundleServicesV2Api$postRepoV1EntityBundle2Create(
  org_sagebionetworks_repo_model_entitybundle_v2_entity_bundle_create,
  generated_by = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org_sagebionetworks_repo_model_entitybundle_v2_entity_bundle_create}}{}

\item{\code{generated_by}}{(optional) No description}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelEntitybundleV2EntityBundle
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityBundleServicesV2Api-postRepoV1EntityBundle2CreateWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EntityBundleServicesV2Api-postRepoV1EntityBundle2CreateWithHttpInfo}{}}}
\subsection{Method \code{postRepoV1EntityBundle2CreateWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityBundleServicesV2Api$postRepoV1EntityBundle2CreateWithHttpInfo(
  org_sagebionetworks_repo_model_entitybundle_v2_entity_bundle_create,
  generated_by = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org_sagebionetworks_repo_model_entitybundle_v2_entity_bundle_create}}{}

\item{\code{generated_by}}{(optional) No description}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelEntitybundleV2EntityBundle) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityBundleServicesV2Api-postRepoV1EntityIdBundle2"></a>}}
\if{latex}{\out{\hypertarget{method-EntityBundleServicesV2Api-postRepoV1EntityIdBundle2}{}}}
\subsection{Method \code{postRepoV1EntityIdBundle2()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityBundleServicesV2Api$postRepoV1EntityIdBundle2(
  id,
  org_sagebionetworks_repo_model_entitybundle_v2_entity_bundle_request,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{- The ID of the entity to fetch.}

\item{\code{org_sagebionetworks_repo_model_entitybundle_v2_entity_bundle_request}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelEntitybundleV2EntityBundle
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityBundleServicesV2Api-postRepoV1EntityIdBundle2WithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EntityBundleServicesV2Api-postRepoV1EntityIdBundle2WithHttpInfo}{}}}
\subsection{Method \code{postRepoV1EntityIdBundle2WithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityBundleServicesV2Api$postRepoV1EntityIdBundle2WithHttpInfo(
  id,
  org_sagebionetworks_repo_model_entitybundle_v2_entity_bundle_request,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{- The ID of the entity to fetch.}

\item{\code{org_sagebionetworks_repo_model_entitybundle_v2_entity_bundle_request}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelEntitybundleV2EntityBundle) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityBundleServicesV2Api-postRepoV1EntityIdVersionVersionNumberBundle2"></a>}}
\if{latex}{\out{\hypertarget{method-EntityBundleServicesV2Api-postRepoV1EntityIdVersionVersionNumberBundle2}{}}}
\subsection{Method \code{postRepoV1EntityIdVersionVersionNumberBundle2()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityBundleServicesV2Api$postRepoV1EntityIdVersionVersionNumberBundle2(
  id,
  version_number,
  org_sagebionetworks_repo_model_entitybundle_v2_entity_bundle_request,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{- The ID of the entity to fetch.}

\item{\code{version_number}}{- The version of the entity to fetch}

\item{\code{org_sagebionetworks_repo_model_entitybundle_v2_entity_bundle_request}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelEntitybundleV2EntityBundle
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityBundleServicesV2Api-postRepoV1EntityIdVersionVersionNumberBundle2WithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EntityBundleServicesV2Api-postRepoV1EntityIdVersionVersionNumberBundle2WithHttpInfo}{}}}
\subsection{Method \code{postRepoV1EntityIdVersionVersionNumberBundle2WithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityBundleServicesV2Api$postRepoV1EntityIdVersionVersionNumberBundle2WithHttpInfo(
  id,
  version_number,
  org_sagebionetworks_repo_model_entitybundle_v2_entity_bundle_request,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{- The ID of the entity to fetch.}

\item{\code{version_number}}{- The version of the entity to fetch}

\item{\code{org_sagebionetworks_repo_model_entitybundle_v2_entity_bundle_request}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelEntitybundleV2EntityBundle) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityBundleServicesV2Api-putRepoV1EntityIdBundle2"></a>}}
\if{latex}{\out{\hypertarget{method-EntityBundleServicesV2Api-putRepoV1EntityIdBundle2}{}}}
\subsection{Method \code{putRepoV1EntityIdBundle2()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityBundleServicesV2Api$putRepoV1EntityIdBundle2(
  id,
  org_sagebionetworks_repo_model_entitybundle_v2_entity_bundle_create,
  generated_by = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{}

\item{\code{org_sagebionetworks_repo_model_entitybundle_v2_entity_bundle_create}}{}

\item{\code{generated_by}}{(optional) No description}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelEntitybundleV2EntityBundle
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityBundleServicesV2Api-putRepoV1EntityIdBundle2WithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EntityBundleServicesV2Api-putRepoV1EntityIdBundle2WithHttpInfo}{}}}
\subsection{Method \code{putRepoV1EntityIdBundle2WithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityBundleServicesV2Api$putRepoV1EntityIdBundle2WithHttpInfo(
  id,
  org_sagebionetworks_repo_model_entitybundle_v2_entity_bundle_create,
  generated_by = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{}

\item{\code{org_sagebionetworks_repo_model_entitybundle_v2_entity_bundle_create}}{}

\item{\code{generated_by}}{(optional) No description}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelEntitybundleV2EntityBundle) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EntityBundleServicesV2Api-clone"></a>}}
\if{latex}{\out{\hypertarget{method-EntityBundleServicesV2Api-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EntityBundleServicesV2Api$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
