% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/evaluation_services_api.R
\docType{class}
\name{EvaluationServicesApi}
\alias{EvaluationServicesApi}
\title{EvaluationServices operations}
\format{
An \code{R6Class} generator object
}
\description{
EvaluationServicesApi
}
\details{
Synapse REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: v1
Generated by: https://openapi-generator.tech
}
\section{Methods}{

\describe{
\strong{ deleteRepoV1EvaluationEvalId } \emph{  }

\itemize{
\item \emph{ @param } eval_id character


\item status code : 204 | Void


\item response headers :

\tabular{ll}{
}
}

\strong{ deleteRepoV1EvaluationEvalIdRoundRoundId } \emph{  }

\itemize{
\item \emph{ @param } eval_id character
\item \emph{ @param } round_id character


\item status code : 204 | Void


\item response headers :

\tabular{ll}{
}
}

\strong{ deleteRepoV1EvaluationSubmissionSubId } \emph{  }

\itemize{
\item \emph{ @param } sub_id character


\item status code : 204 | Void


\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1EntityIdEvaluation } \emph{  }

\itemize{
\item \emph{ @param } id character
\item \emph{ @param } access_type \link{OrgSagebionetworksRepoModelACCESSTYPE}
\item \emph{ @param } active_only character
\item \emph{ @param } evaluation_ids character
\item \emph{ @param } offset numeric
\item \emph{ @param } limit numeric
\item \emph{ @returnType } \link{PaginatedResultsOfEvaluation} \cr


\item status code : 200 | Auto-generated description

\item return type : PaginatedResultsOfEvaluation
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1Evaluation } \emph{  }

\itemize{
\item \emph{ @param } access_type \link{OrgSagebionetworksRepoModelACCESSTYPE}
\item \emph{ @param } active_only character
\item \emph{ @param } evaluation_ids character
\item \emph{ @param } offset numeric
\item \emph{ @param } limit numeric
\item \emph{ @returnType } \link{PaginatedResultsOfEvaluation} \cr


\item status code : 200 | Auto-generated description

\item return type : PaginatedResultsOfEvaluation
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1EvaluationAvailable } \emph{  }

\itemize{
\item \emph{ @param } active_only character
\item \emph{ @param } evaluation_ids character
\item \emph{ @param } offset numeric
\item \emph{ @param } limit numeric
\item \emph{ @returnType } \link{PaginatedResultsOfEvaluation} \cr


\item status code : 200 | Auto-generated description

\item return type : PaginatedResultsOfEvaluation
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1EvaluationEvalId } \emph{  }

\itemize{
\item \emph{ @param } eval_id character
\item \emph{ @returnType } \link{OrgSagebionetworksEvaluationModelEvaluation} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksEvaluationModelEvaluation
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1EvaluationEvalIdAccess } \emph{  }

\itemize{
\item \emph{ @param } eval_id character
\item \emph{ @param } access_type character


\item status code : 200 | the access types that the given user has to the given resource

\item return type : character
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1EvaluationEvalIdAcl } \emph{  }

\itemize{
\item \emph{ @param } eval_id character
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelAccessControlList} \cr


\item status code : 200 | The ACL requested.

\item return type : OrgSagebionetworksRepoModelAccessControlList
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1EvaluationEvalIdPermissions } \emph{  }

\itemize{
\item \emph{ @param } eval_id character
\item \emph{ @returnType } \link{OrgSagebionetworksEvaluationModelUserEvaluationPermissions} \cr


\item status code : 200 | The requested user permissions.

\item return type : OrgSagebionetworksEvaluationModelUserEvaluationPermissions
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1EvaluationEvalIdRoundRoundId } \emph{  }

\itemize{
\item \emph{ @param } eval_id character
\item \emph{ @param } round_id character
\item \emph{ @returnType } \link{OrgSagebionetworksEvaluationModelEvaluationRound} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksEvaluationModelEvaluationRound
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1EvaluationEvalIdSubmission } \emph{  }

\itemize{
\item \emph{ @param } eval_id character
\item \emph{ @param } offset numeric
\item \emph{ @param } limit numeric
\item \emph{ @returnType } \link{PaginatedResultsOfSubmission} \cr


\item status code : 200 | Auto-generated description

\item return type : PaginatedResultsOfSubmission
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1EvaluationEvalIdSubmissionAll } \emph{  }

\itemize{
\item \emph{ @param } eval_id character
\item \emph{ @param } status character
\item \emph{ @param } offset numeric
\item \emph{ @param } limit numeric
\item \emph{ @returnType } \link{PaginatedResultsOfSubmission} \cr


\item status code : 200 | Auto-generated description

\item return type : PaginatedResultsOfSubmission
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1EvaluationEvalIdSubmissionBundle } \emph{  }

\itemize{
\item \emph{ @param } eval_id character
\item \emph{ @param } offset numeric
\item \emph{ @param } limit numeric
\item \emph{ @returnType } \link{PaginatedResultsOfSubmissionBundle} \cr


\item status code : 200 | Auto-generated description

\item return type : PaginatedResultsOfSubmissionBundle
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1EvaluationEvalIdSubmissionBundleAll } \emph{  }

\itemize{
\item \emph{ @param } eval_id character
\item \emph{ @param } status character
\item \emph{ @param } offset numeric
\item \emph{ @param } limit numeric
\item \emph{ @returnType } \link{PaginatedResultsOfSubmissionBundle} \cr


\item status code : 200 | Auto-generated description

\item return type : PaginatedResultsOfSubmissionBundle
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1EvaluationEvalIdSubmissionCount } \emph{  }

\itemize{
\item \emph{ @param } eval_id character


\item status code : 200 | Auto-generated description

\item return type : numeric
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1EvaluationEvalIdSubmissionStatusAll } \emph{  }

\itemize{
\item \emph{ @param } eval_id character
\item \emph{ @param } status character
\item \emph{ @param } offset numeric
\item \emph{ @param } limit numeric
\item \emph{ @returnType } \link{PaginatedResultsOfSubmissionStatus} \cr


\item status code : 200 | Auto-generated description

\item return type : PaginatedResultsOfSubmissionStatus
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1EvaluationEvalIdTeamIdSubmissionEligibility } \emph{  }

\itemize{
\item \emph{ @param } eval_id character
\item \emph{ @param } id character
\item \emph{ @returnType } \link{OrgSagebionetworksEvaluationModelTeamSubmissionEligibility} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksEvaluationModelTeamSubmissionEligibility
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1EvaluationNameName } \emph{  }

\itemize{
\item \emph{ @param } name character
\item \emph{ @returnType } \link{OrgSagebionetworksEvaluationModelEvaluation} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksEvaluationModelEvaluation
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1EvaluationSubmissionSubId } \emph{  }

\itemize{
\item \emph{ @param } sub_id character
\item \emph{ @returnType } \link{OrgSagebionetworksEvaluationModelSubmission} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksEvaluationModelSubmission
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1EvaluationSubmissionSubIdFileFileHandleId } \emph{  }

\itemize{
\item \emph{ @param } sub_id character
\item \emph{ @param } file_handle_id character
\item \emph{ @param } redirect character
\item \emph{ @returnType } \link{AnyType} \cr


\item status code : 200 | Status 200 will be returned if the 'redirect' boolean param is false

\item return type : AnyType
\item response headers :

\tabular{ll}{
}
\item status code : 307 | Status 307 will be returned if the 'redirect' boolean param is true or null


\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1EvaluationSubmissionSubIdStatus } \emph{  }

\itemize{
\item \emph{ @param } sub_id character
\item \emph{ @returnType } \link{OrgSagebionetworksEvaluationModelSubmissionStatus} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksEvaluationModelSubmissionStatus
\item response headers :

\tabular{ll}{
}
}

\strong{ postRepoV1AdminEvaluationSubmissionSubIdContributor } \emph{  }

\itemize{
\item \emph{ @param } sub_id character
\item \emph{ @param } org_sagebionetworks_evaluation_model_submission_contributor \link{OrgSagebionetworksEvaluationModelSubmissionContributor}
\item \emph{ @returnType } \link{OrgSagebionetworksEvaluationModelSubmissionContributor} \cr


\item status code : 201 | Auto-generated description

\item return type : OrgSagebionetworksEvaluationModelSubmissionContributor
\item response headers :

\tabular{ll}{
}
}

\strong{ postRepoV1Evaluation } \emph{  }

\itemize{
\item \emph{ @param } org_sagebionetworks_evaluation_model_evaluation \link{OrgSagebionetworksEvaluationModelEvaluation}
\item \emph{ @returnType } \link{OrgSagebionetworksEvaluationModelEvaluation} \cr


\item status code : 201 | Auto-generated description

\item return type : OrgSagebionetworksEvaluationModelEvaluation
\item response headers :

\tabular{ll}{
}
}

\strong{ postRepoV1EvaluationEvalIdMigratequota } \emph{  }

\itemize{
\item \emph{ @param } eval_id character


\item status code : 200 | Void


\item response headers :

\tabular{ll}{
}
}

\strong{ postRepoV1EvaluationEvalIdRound } \emph{  }

\itemize{
\item \emph{ @param } eval_id character
\item \emph{ @param } org_sagebionetworks_evaluation_model_evaluation_round \link{OrgSagebionetworksEvaluationModelEvaluationRound}
\item \emph{ @returnType } \link{OrgSagebionetworksEvaluationModelEvaluationRound} \cr


\item status code : 201 | Auto-generated description

\item return type : OrgSagebionetworksEvaluationModelEvaluationRound
\item response headers :

\tabular{ll}{
}
}

\strong{ postRepoV1EvaluationEvalIdRoundList } \emph{  }

\itemize{
\item \emph{ @param } eval_id character
\item \emph{ @param } org_sagebionetworks_evaluation_model_evaluation_round_list_request \link{OrgSagebionetworksEvaluationModelEvaluationRoundListRequest}
\item \emph{ @returnType } \link{OrgSagebionetworksEvaluationModelEvaluationRoundListResponse} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksEvaluationModelEvaluationRoundListResponse
\item response headers :

\tabular{ll}{
}
}

\strong{ postRepoV1EvaluationSubmission } \emph{  }

\itemize{
\item \emph{ @param } challenge_endpoint character
\item \emph{ @param } notification_unsubscribe_endpoint character
\item \emph{ @param } org_sagebionetworks_evaluation_model_submission \link{OrgSagebionetworksEvaluationModelSubmission}
\item \emph{ @param } etag character
\item \emph{ @param } submission_eligibility_hash character
\item \emph{ @returnType } \link{OrgSagebionetworksEvaluationModelSubmission} \cr


\item status code : 201 | Auto-generated description

\item return type : OrgSagebionetworksEvaluationModelSubmission
\item response headers :

\tabular{ll}{
}
}

\strong{ putRepoV1EvaluationAcl } \emph{  }

\itemize{
\item \emph{ @param } org_sagebionetworks_repo_model_access_control_list \link{OrgSagebionetworksRepoModelAccessControlList}
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelAccessControlList} \cr


\item status code : 200 | The updated ACL.

\item return type : OrgSagebionetworksRepoModelAccessControlList
\item response headers :

\tabular{ll}{
}
}

\strong{ putRepoV1EvaluationEvalId } \emph{  }

\itemize{
\item \emph{ @param } eval_id character
\item \emph{ @param } org_sagebionetworks_evaluation_model_evaluation \link{OrgSagebionetworksEvaluationModelEvaluation}
\item \emph{ @returnType } \link{OrgSagebionetworksEvaluationModelEvaluation} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksEvaluationModelEvaluation
\item response headers :

\tabular{ll}{
}
}

\strong{ putRepoV1EvaluationEvalIdRoundRoundId } \emph{  }

\itemize{
\item \emph{ @param } eval_id character
\item \emph{ @param } round_id character
\item \emph{ @param } org_sagebionetworks_evaluation_model_evaluation_round \link{OrgSagebionetworksEvaluationModelEvaluationRound}
\item \emph{ @returnType } \link{OrgSagebionetworksEvaluationModelEvaluationRound} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksEvaluationModelEvaluationRound
\item response headers :

\tabular{ll}{
}
}

\strong{ putRepoV1EvaluationEvalIdStatusBatch } \emph{  }

\itemize{
\item \emph{ @param } eval_id character
\item \emph{ @param } org_sagebionetworks_evaluation_model_submission_status_batch \link{OrgSagebionetworksEvaluationModelSubmissionStatusBatch}
\item \emph{ @returnType } \link{OrgSagebionetworksEvaluationModelBatchUploadResponse} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksEvaluationModelBatchUploadResponse
\item response headers :

\tabular{ll}{
}
}

\strong{ putRepoV1EvaluationSubmissionSubIdCancellation } \emph{  }

\itemize{
\item \emph{ @param } sub_id character


\item status code : 204 | Void


\item response headers :

\tabular{ll}{
}
}

\strong{ putRepoV1EvaluationSubmissionSubIdStatus } \emph{  }

\itemize{
\item \emph{ @param } sub_id character
\item \emph{ @param } org_sagebionetworks_evaluation_model_submission_status \link{OrgSagebionetworksEvaluationModelSubmissionStatus}
\item \emph{ @returnType } \link{OrgSagebionetworksEvaluationModelSubmissionStatus} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksEvaluationModelSubmissionStatus
\item response headers :

\tabular{ll}{
}
}

}
}

\examples{
\dontrun{
####################  deleteRepoV1EvaluationEvalId  ####################

library(synr)
var_eval_id <- "eval_id_example" # character | - the ID of the requested Evaluation

api_instance <- EvaluationServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

api_instance$deleteRepoV1EvaluationEvalId(var_eval_id)


####################  deleteRepoV1EvaluationEvalIdRoundRoundId  ####################

library(synr)
var_eval_id <- "eval_id_example" # character | 
var_round_id <- "round_id_example" # character | 

api_instance <- EvaluationServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

api_instance$deleteRepoV1EvaluationEvalIdRoundRoundId(var_eval_id, var_round_id)


####################  deleteRepoV1EvaluationSubmissionSubId  ####################

library(synr)
var_sub_id <- "sub_id_example" # character | - the ID of the Submission to be deleted.

api_instance <- EvaluationServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

api_instance$deleteRepoV1EvaluationSubmissionSubId(var_sub_id)


####################  getRepoV1EntityIdEvaluation  ####################

library(synr)
var_id <- "id_example" # character | the ID of the project
var_access_type <- org.sagebionetworks.repo.model.ACCESS_TYPE$new() # OrgSagebionetworksRepoModelACCESSTYPE | The type of access for the user to filter for, optional and defaults to ,<a href=\"${org.sagebionetworks.repo.model.ACCESS_TYPE}\">,ACCESS_TYPE.READ,</a> (Optional)
var_active_only <- "active_only_example" # character | If 'true' then return only those evaluations with rounds defined and for which the current time is in one of the rounds. (Optional)
var_evaluation_ids <- "evaluation_ids_example" # character | an optional, comma-delimited list of evaluation IDs to which the response is limited (Optional)
var_offset <- 3.4 # numeric | The offset index determines where this page will start from.             An index of 0 is the first entity. When null it will default             to 0. (Optional)
var_limit <- 3.4 # numeric | Limits the number of entities that will be fetched for this             page. When null it will default to 10. (Optional)

api_instance <- EvaluationServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1EntityIdEvaluation(var_id, access_type = var_access_type, active_only = var_active_only, evaluation_ids = var_evaluation_ids, offset = var_offset, limit = var_limitdata_file = "result.txt")
result <- api_instance$getRepoV1EntityIdEvaluation(var_id, access_type = var_access_type, active_only = var_active_only, evaluation_ids = var_evaluation_ids, offset = var_offset, limit = var_limit)
dput(result)


####################  getRepoV1Evaluation  ####################

library(synr)
var_access_type <- org.sagebionetworks.repo.model.ACCESS_TYPE$new() # OrgSagebionetworksRepoModelACCESSTYPE | The type of access for the user to filter for, optional and defaults to ,<a href=\"${org.sagebionetworks.repo.model.ACCESS_TYPE}\">,ACCESS_TYPE.READ,</a> (Optional)
var_active_only <- "active_only_example" # character | If 'true' then return only those evaluations with rounds defined and for which the current time is in one of the rounds. (Optional)
var_evaluation_ids <- "evaluation_ids_example" # character | an optional, comma-delimited list of evaluation IDs to which the response is limited (Optional)
var_offset <- 3.4 # numeric | The offset index determines where this page will start from.             An index of 0 is the first entity. When null it will default             to 0. (Optional)
var_limit <- 3.4 # numeric | Limits the number of entities that will be fetched for this             page. When null it will default to 10. (Optional)

api_instance <- EvaluationServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1Evaluation(access_type = var_access_type, active_only = var_active_only, evaluation_ids = var_evaluation_ids, offset = var_offset, limit = var_limitdata_file = "result.txt")
result <- api_instance$getRepoV1Evaluation(access_type = var_access_type, active_only = var_active_only, evaluation_ids = var_evaluation_ids, offset = var_offset, limit = var_limit)
dput(result)


####################  getRepoV1EvaluationAvailable  ####################

library(synr)
var_active_only <- "active_only_example" # character |  (Optional)
var_evaluation_ids <- "evaluation_ids_example" # character | an optional, comma-delimited list of evaluation IDs to which the response is limited (Optional)
var_offset <- 3.4 # numeric | The offset index determines where this page will start from.             An index of 0 is the first evaluation. When null it will default             to 0. (Optional)
var_limit <- 3.4 # numeric | Limits the number of entities that will be fetched for this             page. When null it will default to 10. (Optional)

api_instance <- EvaluationServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1EvaluationAvailable(active_only = var_active_only, evaluation_ids = var_evaluation_ids, offset = var_offset, limit = var_limitdata_file = "result.txt")
result <- api_instance$getRepoV1EvaluationAvailable(active_only = var_active_only, evaluation_ids = var_evaluation_ids, offset = var_offset, limit = var_limit)
dput(result)


####################  getRepoV1EvaluationEvalId  ####################

library(synr)
var_eval_id <- "eval_id_example" # character | - the ID of the desired Evaluation

api_instance <- EvaluationServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1EvaluationEvalId(var_eval_iddata_file = "result.txt")
result <- api_instance$getRepoV1EvaluationEvalId(var_eval_id)
dput(result)


####################  getRepoV1EvaluationEvalIdAccess  ####################

library(synr)
var_eval_id <- "eval_id_example" # character | 
var_access_type <- "access_type_example" # character | 

api_instance <- EvaluationServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1EvaluationEvalIdAccess(var_eval_id, var_access_typedata_file = "result.txt")
result <- api_instance$getRepoV1EvaluationEvalIdAccess(var_eval_id, var_access_type)
dput(result)


####################  getRepoV1EvaluationEvalIdAcl  ####################

library(synr)
var_eval_id <- "eval_id_example" # character | The ID of the evaluation whose ACL is being retrieved.

api_instance <- EvaluationServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1EvaluationEvalIdAcl(var_eval_iddata_file = "result.txt")
result <- api_instance$getRepoV1EvaluationEvalIdAcl(var_eval_id)
dput(result)


####################  getRepoV1EvaluationEvalIdPermissions  ####################

library(synr)
var_eval_id <- "eval_id_example" # character | The ID of the evaluation over which the user permission are being retrieved.

api_instance <- EvaluationServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1EvaluationEvalIdPermissions(var_eval_iddata_file = "result.txt")
result <- api_instance$getRepoV1EvaluationEvalIdPermissions(var_eval_id)
dput(result)


####################  getRepoV1EvaluationEvalIdRoundRoundId  ####################

library(synr)
var_eval_id <- "eval_id_example" # character | 
var_round_id <- "round_id_example" # character | 

api_instance <- EvaluationServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1EvaluationEvalIdRoundRoundId(var_eval_id, var_round_iddata_file = "result.txt")
result <- api_instance$getRepoV1EvaluationEvalIdRoundRoundId(var_eval_id, var_round_id)
dput(result)


####################  getRepoV1EvaluationEvalIdSubmission  ####################

library(synr)
var_eval_id <- "eval_id_example" # character | - the ID of the specified Evaluation.
var_offset <- 3.4 # numeric | The offset index determines where this page will start from.             An index of 0 is the first entity. When null it will default             to 0. (Optional)
var_limit <- 3.4 # numeric | Limits the number of entities that will be fetched for this             page. When null it will default to 10. (Optional)

api_instance <- EvaluationServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1EvaluationEvalIdSubmission(var_eval_id, offset = var_offset, limit = var_limitdata_file = "result.txt")
result <- api_instance$getRepoV1EvaluationEvalIdSubmission(var_eval_id, offset = var_offset, limit = var_limit)
dput(result)


####################  getRepoV1EvaluationEvalIdSubmissionAll  ####################

library(synr)
var_eval_id <- "eval_id_example" # character | - the ID of the specified Evaluation.
var_status <- "status_example" # character | 
var_offset <- 3.4 # numeric | The offset index determines where this page will start from.             An index of 0 is the first entity. When null it will default             to 0. (Optional)
var_limit <- 3.4 # numeric | Limits the number of entities that will be fetched for this             page. When null it will default to 10, max value 100. (Optional)

api_instance <- EvaluationServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1EvaluationEvalIdSubmissionAll(var_eval_id, var_status, offset = var_offset, limit = var_limitdata_file = "result.txt")
result <- api_instance$getRepoV1EvaluationEvalIdSubmissionAll(var_eval_id, var_status, offset = var_offset, limit = var_limit)
dput(result)


####################  getRepoV1EvaluationEvalIdSubmissionBundle  ####################

library(synr)
var_eval_id <- "eval_id_example" # character | - the ID of the specified Evaluation.
var_offset <- 3.4 # numeric | The offset index determines where this page will start from.             An index of 0 is the first entity. When null it will default             to 0. (Optional)
var_limit <- 3.4 # numeric | Limits the number of entities that will be fetched for this             page. When null it will default to 10. (Optional)

api_instance <- EvaluationServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1EvaluationEvalIdSubmissionBundle(var_eval_id, offset = var_offset, limit = var_limitdata_file = "result.txt")
result <- api_instance$getRepoV1EvaluationEvalIdSubmissionBundle(var_eval_id, offset = var_offset, limit = var_limit)
dput(result)


####################  getRepoV1EvaluationEvalIdSubmissionBundleAll  ####################

library(synr)
var_eval_id <- "eval_id_example" # character | - the ID of the specified Evaluation.
var_status <- "status_example" # character | 
var_offset <- 3.4 # numeric | The offset index determines where this page will start from.             An index of 0 is the first entity. When null it will default             to 0. (Optional)
var_limit <- 3.4 # numeric | Limits the number of entities that will be fetched for this             page. When null it will default to 10, max value 100. (Optional)

api_instance <- EvaluationServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1EvaluationEvalIdSubmissionBundleAll(var_eval_id, var_status, offset = var_offset, limit = var_limitdata_file = "result.txt")
result <- api_instance$getRepoV1EvaluationEvalIdSubmissionBundleAll(var_eval_id, var_status, offset = var_offset, limit = var_limit)
dput(result)


####################  getRepoV1EvaluationEvalIdSubmissionCount  ####################

library(synr)
var_eval_id <- "eval_id_example" # character | - the ID of the specified Evaluation.

api_instance <- EvaluationServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1EvaluationEvalIdSubmissionCount(var_eval_iddata_file = "result.txt")
result <- api_instance$getRepoV1EvaluationEvalIdSubmissionCount(var_eval_id)
dput(result)


####################  getRepoV1EvaluationEvalIdSubmissionStatusAll  ####################

library(synr)
var_eval_id <- "eval_id_example" # character | - the ID of the specified Evaluation.
var_status <- "status_example" # character | 
var_offset <- 3.4 # numeric | The offset index determines where this page will start from.             An index of 0 is the first entity. When null it will default             to 0. (Optional)
var_limit <- 3.4 # numeric | Limits the number of entities that will be fetched for this             page. When null it will default to 10, max value 100. (Optional)

api_instance <- EvaluationServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1EvaluationEvalIdSubmissionStatusAll(var_eval_id, var_status, offset = var_offset, limit = var_limitdata_file = "result.txt")
result <- api_instance$getRepoV1EvaluationEvalIdSubmissionStatusAll(var_eval_id, var_status, offset = var_offset, limit = var_limit)
dput(result)


####################  getRepoV1EvaluationEvalIdTeamIdSubmissionEligibility  ####################

library(synr)
var_eval_id <- "eval_id_example" # character | 
var_id <- "id_example" # character | 

api_instance <- EvaluationServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1EvaluationEvalIdTeamIdSubmissionEligibility(var_eval_id, var_iddata_file = "result.txt")
result <- api_instance$getRepoV1EvaluationEvalIdTeamIdSubmissionEligibility(var_eval_id, var_id)
dput(result)


####################  getRepoV1EvaluationNameName  ####################

library(synr)
var_name <- "name_example" # character | - the name of the desired Evaluation.

api_instance <- EvaluationServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1EvaluationNameName(var_namedata_file = "result.txt")
result <- api_instance$getRepoV1EvaluationNameName(var_name)
dput(result)


####################  getRepoV1EvaluationSubmissionSubId  ####################

library(synr)
var_sub_id <- "sub_id_example" # character | 

api_instance <- EvaluationServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1EvaluationSubmissionSubId(var_sub_iddata_file = "result.txt")
result <- api_instance$getRepoV1EvaluationSubmissionSubId(var_sub_id)
dput(result)


####################  getRepoV1EvaluationSubmissionSubIdFileFileHandleId  ####################

library(synr)
var_sub_id <- "sub_id_example" # character | 
var_file_handle_id <- "file_handle_id_example" # character | - the ID of the requested FileHandle contained in the Submission.
var_redirect <- "redirect_example" # character |  (Optional)

api_instance <- EvaluationServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1EvaluationSubmissionSubIdFileFileHandleId(var_sub_id, var_file_handle_id, redirect = var_redirectdata_file = "result.txt")
result <- api_instance$getRepoV1EvaluationSubmissionSubIdFileFileHandleId(var_sub_id, var_file_handle_id, redirect = var_redirect)
dput(result)


####################  getRepoV1EvaluationSubmissionSubIdStatus  ####################

library(synr)
var_sub_id <- "sub_id_example" # character | - the ID of the requested SubmissionStatus.

api_instance <- EvaluationServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1EvaluationSubmissionSubIdStatus(var_sub_iddata_file = "result.txt")
result <- api_instance$getRepoV1EvaluationSubmissionSubIdStatus(var_sub_id)
dput(result)


####################  postRepoV1AdminEvaluationSubmissionSubIdContributor  ####################

library(synr)
var_sub_id <- "sub_id_example" # character | 
var_org_sagebionetworks_evaluation_model_submission_contributor <- org.sagebionetworks.evaluation.model.SubmissionContributor$new("principalId_example", "createdOn_example") # OrgSagebionetworksEvaluationModelSubmissionContributor | 

api_instance <- EvaluationServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$postRepoV1AdminEvaluationSubmissionSubIdContributor(var_sub_id, var_org_sagebionetworks_evaluation_model_submission_contributordata_file = "result.txt")
result <- api_instance$postRepoV1AdminEvaluationSubmissionSubIdContributor(var_sub_id, var_org_sagebionetworks_evaluation_model_submission_contributor)
dput(result)


####################  postRepoV1Evaluation  ####################

library(synr)
var_org_sagebionetworks_evaluation_model_evaluation <- org.sagebionetworks.evaluation.model.Evaluation$new("id_example", "etag_example", "name_example", "description_example", "ownerId_example", "createdOn_example", "contentSource_example", "submissionInstructionsMessage_example", "submissionReceiptMessage_example", org.sagebionetworks.evaluation.model.SubmissionQuota$new("firstRoundStart_example", 123, 123, 123)) # OrgSagebionetworksEvaluationModelEvaluation | 

api_instance <- EvaluationServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$postRepoV1Evaluation(var_org_sagebionetworks_evaluation_model_evaluationdata_file = "result.txt")
result <- api_instance$postRepoV1Evaluation(var_org_sagebionetworks_evaluation_model_evaluation)
dput(result)


####################  postRepoV1EvaluationEvalIdMigratequota  ####################

library(synr)
var_eval_id <- "eval_id_example" # character | 

api_instance <- EvaluationServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

api_instance$postRepoV1EvaluationEvalIdMigratequota(var_eval_id)


####################  postRepoV1EvaluationEvalIdRound  ####################

library(synr)
var_eval_id <- "eval_id_example" # character | 
var_org_sagebionetworks_evaluation_model_evaluation_round <- org.sagebionetworks.evaluation.model.EvaluationRound$new("evaluationId_example", "roundStart_example", "roundEnd_example", "id_example", "etag_example", c(org.sagebionetworks.evaluation.model.EvaluationRoundLimit$new("limitType_example", 123))) # OrgSagebionetworksEvaluationModelEvaluationRound | 

api_instance <- EvaluationServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$postRepoV1EvaluationEvalIdRound(var_eval_id, var_org_sagebionetworks_evaluation_model_evaluation_rounddata_file = "result.txt")
result <- api_instance$postRepoV1EvaluationEvalIdRound(var_eval_id, var_org_sagebionetworks_evaluation_model_evaluation_round)
dput(result)


####################  postRepoV1EvaluationEvalIdRoundList  ####################

library(synr)
var_eval_id <- "eval_id_example" # character | 
var_org_sagebionetworks_evaluation_model_evaluation_round_list_request <- org.sagebionetworks.evaluation.model.EvaluationRoundListRequest$new("nextPageToken_example") # OrgSagebionetworksEvaluationModelEvaluationRoundListRequest | 

api_instance <- EvaluationServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$postRepoV1EvaluationEvalIdRoundList(var_eval_id, var_org_sagebionetworks_evaluation_model_evaluation_round_list_requestdata_file = "result.txt")
result <- api_instance$postRepoV1EvaluationEvalIdRoundList(var_eval_id, var_org_sagebionetworks_evaluation_model_evaluation_round_list_request)
dput(result)


####################  postRepoV1EvaluationSubmission  ####################

library(synr)
var_challenge_endpoint <- "challenge_endpoint_example" # character | The portal endpoint prefix to the an entity/challenge page. The entity ID of the  challenge project is appended to create the complete URL. In normal operation, this parameter should be omitted.
var_notification_unsubscribe_endpoint <- "notification_unsubscribe_endpoint_example" # character | The portal endpoint prefix for one-click email unsubscription.  A signed, serialized token is appended to create the complete URL:  ,<a href=\"${org.sagebionetworks.repo.model.message.NotificationSettingsSignedToken}\">,NotificationSettingsSignedToken,</a>,.  In normal operation, this parameter should be omitted.
var_org_sagebionetworks_evaluation_model_submission <- org.sagebionetworks.evaluation.model.Submission$new("id_example", "userId_example", "submitterAlias_example", "evaluationId_example", "evaluationRoundId_example", "entityId_example", "entityBundleJSON_example", 123, "dockerRepositoryName_example", "dockerDigest_example", "name_example", "createdOn_example", "teamId_example", c(org.sagebionetworks.evaluation.model.SubmissionContributor$new("principalId_example", "createdOn_example"))) # OrgSagebionetworksEvaluationModelSubmission | 
var_etag <- "etag_example" # character |  (Optional)
var_submission_eligibility_hash <- "submission_eligibility_hash_example" # character | The hash provided by the  ,<a href=\"${org.sagebionetworks.evaluation.model.TeamSubmissionEligibility}\">,TeamSubmissionEligibility,</a>,  object. (Optional)

api_instance <- EvaluationServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$postRepoV1EvaluationSubmission(var_challenge_endpoint, var_notification_unsubscribe_endpoint, var_org_sagebionetworks_evaluation_model_submission, etag = var_etag, submission_eligibility_hash = var_submission_eligibility_hashdata_file = "result.txt")
result <- api_instance$postRepoV1EvaluationSubmission(var_challenge_endpoint, var_notification_unsubscribe_endpoint, var_org_sagebionetworks_evaluation_model_submission, etag = var_etag, submission_eligibility_hash = var_submission_eligibility_hash)
dput(result)


####################  putRepoV1EvaluationAcl  ####################

library(synr)
var_org_sagebionetworks_repo_model_access_control_list <- org.sagebionetworks.repo.model.AccessControlList$new("id_example", "createdBy_example", "creationDate_example", "modifiedBy_example", "modifiedOn_example", "etag_example", c(org.sagebionetworks.repo.model.ResourceAccess$new(123, c("accessType_example")))) # OrgSagebionetworksRepoModelAccessControlList | 

api_instance <- EvaluationServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$putRepoV1EvaluationAcl(var_org_sagebionetworks_repo_model_access_control_listdata_file = "result.txt")
result <- api_instance$putRepoV1EvaluationAcl(var_org_sagebionetworks_repo_model_access_control_list)
dput(result)


####################  putRepoV1EvaluationEvalId  ####################

library(synr)
var_eval_id <- "eval_id_example" # character | - the ID of the Evaluation being updated
var_org_sagebionetworks_evaluation_model_evaluation <- org.sagebionetworks.evaluation.model.Evaluation$new("id_example", "etag_example", "name_example", "description_example", "ownerId_example", "createdOn_example", "contentSource_example", "submissionInstructionsMessage_example", "submissionReceiptMessage_example", org.sagebionetworks.evaluation.model.SubmissionQuota$new("firstRoundStart_example", 123, 123, 123)) # OrgSagebionetworksEvaluationModelEvaluation | 

api_instance <- EvaluationServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$putRepoV1EvaluationEvalId(var_eval_id, var_org_sagebionetworks_evaluation_model_evaluationdata_file = "result.txt")
result <- api_instance$putRepoV1EvaluationEvalId(var_eval_id, var_org_sagebionetworks_evaluation_model_evaluation)
dput(result)


####################  putRepoV1EvaluationEvalIdRoundRoundId  ####################

library(synr)
var_eval_id <- "eval_id_example" # character | 
var_round_id <- "round_id_example" # character | 
var_org_sagebionetworks_evaluation_model_evaluation_round <- org.sagebionetworks.evaluation.model.EvaluationRound$new("evaluationId_example", "roundStart_example", "roundEnd_example", "id_example", "etag_example", c(org.sagebionetworks.evaluation.model.EvaluationRoundLimit$new("limitType_example", 123))) # OrgSagebionetworksEvaluationModelEvaluationRound | 

api_instance <- EvaluationServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$putRepoV1EvaluationEvalIdRoundRoundId(var_eval_id, var_round_id, var_org_sagebionetworks_evaluation_model_evaluation_rounddata_file = "result.txt")
result <- api_instance$putRepoV1EvaluationEvalIdRoundRoundId(var_eval_id, var_round_id, var_org_sagebionetworks_evaluation_model_evaluation_round)
dput(result)


####################  putRepoV1EvaluationEvalIdStatusBatch  ####################

library(synr)
var_eval_id <- "eval_id_example" # character | the ID of the Evaluation to which the SubmissionSatus objects belong.
var_org_sagebionetworks_evaluation_model_submission_status_batch <- org.sagebionetworks.evaluation.model.SubmissionStatusBatch$new(c(org.sagebionetworks.evaluation.model.SubmissionStatus$new("id_example", "etag_example", "modifiedOn_example", "status_example", 123, "report_example", org.sagebionetworks.repo.model.annotation.Annotations$new("objectId_example", "scopeId_example", 123, c(org.sagebionetworks.repo.model.annotation.StringAnnotation$new("key_example", "isPrivate_example", "value_example")), c(org.sagebionetworks.repo.model.annotation.LongAnnotation$new("key_example", "isPrivate_example", 123)), c(org.sagebionetworks.repo.model.annotation.DoubleAnnotation$new("key_example", "isPrivate_example", 123))), org.sagebionetworks.repo.model.annotation.v2.Annotations$new("id_example", "etag_example", c(key = org.sagebionetworks.repo.model.annotation.v2.AnnotationsValue$new(c("value_example"), "type_example"))), "entityId_example", 123, 123, "canCancel_example", "cancelRequested_example")), "batchToken_example", "isFirstBatch_example", "isLastBatch_example") # OrgSagebionetworksEvaluationModelSubmissionStatusBatch | 

api_instance <- EvaluationServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$putRepoV1EvaluationEvalIdStatusBatch(var_eval_id, var_org_sagebionetworks_evaluation_model_submission_status_batchdata_file = "result.txt")
result <- api_instance$putRepoV1EvaluationEvalIdStatusBatch(var_eval_id, var_org_sagebionetworks_evaluation_model_submission_status_batch)
dput(result)


####################  putRepoV1EvaluationSubmissionSubIdCancellation  ####################

library(synr)
var_sub_id <- "sub_id_example" # character | 

api_instance <- EvaluationServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

api_instance$putRepoV1EvaluationSubmissionSubIdCancellation(var_sub_id)


####################  putRepoV1EvaluationSubmissionSubIdStatus  ####################

library(synr)
var_sub_id <- "sub_id_example" # character | - the ID of the SubmissionStatus being updated.
var_org_sagebionetworks_evaluation_model_submission_status <- org.sagebionetworks.evaluation.model.SubmissionStatus$new("id_example", "etag_example", "modifiedOn_example", "status_example", 123, "report_example", org.sagebionetworks.repo.model.annotation.Annotations$new("objectId_example", "scopeId_example", 123, c(org.sagebionetworks.repo.model.annotation.StringAnnotation$new("key_example", "isPrivate_example", "value_example")), c(org.sagebionetworks.repo.model.annotation.LongAnnotation$new("key_example", "isPrivate_example", 123)), c(org.sagebionetworks.repo.model.annotation.DoubleAnnotation$new("key_example", "isPrivate_example", 123))), org.sagebionetworks.repo.model.annotation.v2.Annotations$new("id_example", "etag_example", c(key = org.sagebionetworks.repo.model.annotation.v2.AnnotationsValue$new(c("value_example"), "type_example"))), "entityId_example", 123, 123, "canCancel_example", "cancelRequested_example") # OrgSagebionetworksEvaluationModelSubmissionStatus | 

api_instance <- EvaluationServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$putRepoV1EvaluationSubmissionSubIdStatus(var_sub_id, var_org_sagebionetworks_evaluation_model_submission_statusdata_file = "result.txt")
result <- api_instance$putRepoV1EvaluationSubmissionSubIdStatus(var_sub_id, var_org_sagebionetworks_evaluation_model_submission_status)
dput(result)


}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{api_client}}{Handles the client-server communication.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-EvaluationServicesApi-new}{\code{EvaluationServicesApi$new()}}
\item \href{#method-EvaluationServicesApi-deleteRepoV1EvaluationEvalId}{\code{EvaluationServicesApi$deleteRepoV1EvaluationEvalId()}}
\item \href{#method-EvaluationServicesApi-deleteRepoV1EvaluationEvalIdWithHttpInfo}{\code{EvaluationServicesApi$deleteRepoV1EvaluationEvalIdWithHttpInfo()}}
\item \href{#method-EvaluationServicesApi-deleteRepoV1EvaluationEvalIdRoundRoundId}{\code{EvaluationServicesApi$deleteRepoV1EvaluationEvalIdRoundRoundId()}}
\item \href{#method-EvaluationServicesApi-deleteRepoV1EvaluationEvalIdRoundRoundIdWithHttpInfo}{\code{EvaluationServicesApi$deleteRepoV1EvaluationEvalIdRoundRoundIdWithHttpInfo()}}
\item \href{#method-EvaluationServicesApi-deleteRepoV1EvaluationSubmissionSubId}{\code{EvaluationServicesApi$deleteRepoV1EvaluationSubmissionSubId()}}
\item \href{#method-EvaluationServicesApi-deleteRepoV1EvaluationSubmissionSubIdWithHttpInfo}{\code{EvaluationServicesApi$deleteRepoV1EvaluationSubmissionSubIdWithHttpInfo()}}
\item \href{#method-EvaluationServicesApi-getRepoV1EntityIdEvaluation}{\code{EvaluationServicesApi$getRepoV1EntityIdEvaluation()}}
\item \href{#method-EvaluationServicesApi-getRepoV1EntityIdEvaluationWithHttpInfo}{\code{EvaluationServicesApi$getRepoV1EntityIdEvaluationWithHttpInfo()}}
\item \href{#method-EvaluationServicesApi-getRepoV1Evaluation}{\code{EvaluationServicesApi$getRepoV1Evaluation()}}
\item \href{#method-EvaluationServicesApi-getRepoV1EvaluationWithHttpInfo}{\code{EvaluationServicesApi$getRepoV1EvaluationWithHttpInfo()}}
\item \href{#method-EvaluationServicesApi-getRepoV1EvaluationAvailable}{\code{EvaluationServicesApi$getRepoV1EvaluationAvailable()}}
\item \href{#method-EvaluationServicesApi-getRepoV1EvaluationAvailableWithHttpInfo}{\code{EvaluationServicesApi$getRepoV1EvaluationAvailableWithHttpInfo()}}
\item \href{#method-EvaluationServicesApi-getRepoV1EvaluationEvalId}{\code{EvaluationServicesApi$getRepoV1EvaluationEvalId()}}
\item \href{#method-EvaluationServicesApi-getRepoV1EvaluationEvalIdWithHttpInfo}{\code{EvaluationServicesApi$getRepoV1EvaluationEvalIdWithHttpInfo()}}
\item \href{#method-EvaluationServicesApi-getRepoV1EvaluationEvalIdAccess}{\code{EvaluationServicesApi$getRepoV1EvaluationEvalIdAccess()}}
\item \href{#method-EvaluationServicesApi-getRepoV1EvaluationEvalIdAccessWithHttpInfo}{\code{EvaluationServicesApi$getRepoV1EvaluationEvalIdAccessWithHttpInfo()}}
\item \href{#method-EvaluationServicesApi-getRepoV1EvaluationEvalIdAcl}{\code{EvaluationServicesApi$getRepoV1EvaluationEvalIdAcl()}}
\item \href{#method-EvaluationServicesApi-getRepoV1EvaluationEvalIdAclWithHttpInfo}{\code{EvaluationServicesApi$getRepoV1EvaluationEvalIdAclWithHttpInfo()}}
\item \href{#method-EvaluationServicesApi-getRepoV1EvaluationEvalIdPermissions}{\code{EvaluationServicesApi$getRepoV1EvaluationEvalIdPermissions()}}
\item \href{#method-EvaluationServicesApi-getRepoV1EvaluationEvalIdPermissionsWithHttpInfo}{\code{EvaluationServicesApi$getRepoV1EvaluationEvalIdPermissionsWithHttpInfo()}}
\item \href{#method-EvaluationServicesApi-getRepoV1EvaluationEvalIdRoundRoundId}{\code{EvaluationServicesApi$getRepoV1EvaluationEvalIdRoundRoundId()}}
\item \href{#method-EvaluationServicesApi-getRepoV1EvaluationEvalIdRoundRoundIdWithHttpInfo}{\code{EvaluationServicesApi$getRepoV1EvaluationEvalIdRoundRoundIdWithHttpInfo()}}
\item \href{#method-EvaluationServicesApi-getRepoV1EvaluationEvalIdSubmission}{\code{EvaluationServicesApi$getRepoV1EvaluationEvalIdSubmission()}}
\item \href{#method-EvaluationServicesApi-getRepoV1EvaluationEvalIdSubmissionWithHttpInfo}{\code{EvaluationServicesApi$getRepoV1EvaluationEvalIdSubmissionWithHttpInfo()}}
\item \href{#method-EvaluationServicesApi-getRepoV1EvaluationEvalIdSubmissionAll}{\code{EvaluationServicesApi$getRepoV1EvaluationEvalIdSubmissionAll()}}
\item \href{#method-EvaluationServicesApi-getRepoV1EvaluationEvalIdSubmissionAllWithHttpInfo}{\code{EvaluationServicesApi$getRepoV1EvaluationEvalIdSubmissionAllWithHttpInfo()}}
\item \href{#method-EvaluationServicesApi-getRepoV1EvaluationEvalIdSubmissionBundle}{\code{EvaluationServicesApi$getRepoV1EvaluationEvalIdSubmissionBundle()}}
\item \href{#method-EvaluationServicesApi-getRepoV1EvaluationEvalIdSubmissionBundleWithHttpInfo}{\code{EvaluationServicesApi$getRepoV1EvaluationEvalIdSubmissionBundleWithHttpInfo()}}
\item \href{#method-EvaluationServicesApi-getRepoV1EvaluationEvalIdSubmissionBundleAll}{\code{EvaluationServicesApi$getRepoV1EvaluationEvalIdSubmissionBundleAll()}}
\item \href{#method-EvaluationServicesApi-getRepoV1EvaluationEvalIdSubmissionBundleAllWithHttpInfo}{\code{EvaluationServicesApi$getRepoV1EvaluationEvalIdSubmissionBundleAllWithHttpInfo()}}
\item \href{#method-EvaluationServicesApi-getRepoV1EvaluationEvalIdSubmissionCount}{\code{EvaluationServicesApi$getRepoV1EvaluationEvalIdSubmissionCount()}}
\item \href{#method-EvaluationServicesApi-getRepoV1EvaluationEvalIdSubmissionCountWithHttpInfo}{\code{EvaluationServicesApi$getRepoV1EvaluationEvalIdSubmissionCountWithHttpInfo()}}
\item \href{#method-EvaluationServicesApi-getRepoV1EvaluationEvalIdSubmissionStatusAll}{\code{EvaluationServicesApi$getRepoV1EvaluationEvalIdSubmissionStatusAll()}}
\item \href{#method-EvaluationServicesApi-getRepoV1EvaluationEvalIdSubmissionStatusAllWithHttpInfo}{\code{EvaluationServicesApi$getRepoV1EvaluationEvalIdSubmissionStatusAllWithHttpInfo()}}
\item \href{#method-EvaluationServicesApi-getRepoV1EvaluationEvalIdTeamIdSubmissionEligibility}{\code{EvaluationServicesApi$getRepoV1EvaluationEvalIdTeamIdSubmissionEligibility()}}
\item \href{#method-EvaluationServicesApi-getRepoV1EvaluationEvalIdTeamIdSubmissionEligibilityWithHttpInfo}{\code{EvaluationServicesApi$getRepoV1EvaluationEvalIdTeamIdSubmissionEligibilityWithHttpInfo()}}
\item \href{#method-EvaluationServicesApi-getRepoV1EvaluationNameName}{\code{EvaluationServicesApi$getRepoV1EvaluationNameName()}}
\item \href{#method-EvaluationServicesApi-getRepoV1EvaluationNameNameWithHttpInfo}{\code{EvaluationServicesApi$getRepoV1EvaluationNameNameWithHttpInfo()}}
\item \href{#method-EvaluationServicesApi-getRepoV1EvaluationSubmissionSubId}{\code{EvaluationServicesApi$getRepoV1EvaluationSubmissionSubId()}}
\item \href{#method-EvaluationServicesApi-getRepoV1EvaluationSubmissionSubIdWithHttpInfo}{\code{EvaluationServicesApi$getRepoV1EvaluationSubmissionSubIdWithHttpInfo()}}
\item \href{#method-EvaluationServicesApi-getRepoV1EvaluationSubmissionSubIdFileFileHandleId}{\code{EvaluationServicesApi$getRepoV1EvaluationSubmissionSubIdFileFileHandleId()}}
\item \href{#method-EvaluationServicesApi-getRepoV1EvaluationSubmissionSubIdFileFileHandleIdWithHttpInfo}{\code{EvaluationServicesApi$getRepoV1EvaluationSubmissionSubIdFileFileHandleIdWithHttpInfo()}}
\item \href{#method-EvaluationServicesApi-getRepoV1EvaluationSubmissionSubIdStatus}{\code{EvaluationServicesApi$getRepoV1EvaluationSubmissionSubIdStatus()}}
\item \href{#method-EvaluationServicesApi-getRepoV1EvaluationSubmissionSubIdStatusWithHttpInfo}{\code{EvaluationServicesApi$getRepoV1EvaluationSubmissionSubIdStatusWithHttpInfo()}}
\item \href{#method-EvaluationServicesApi-postRepoV1AdminEvaluationSubmissionSubIdContributor}{\code{EvaluationServicesApi$postRepoV1AdminEvaluationSubmissionSubIdContributor()}}
\item \href{#method-EvaluationServicesApi-postRepoV1AdminEvaluationSubmissionSubIdContributorWithHttpInfo}{\code{EvaluationServicesApi$postRepoV1AdminEvaluationSubmissionSubIdContributorWithHttpInfo()}}
\item \href{#method-EvaluationServicesApi-postRepoV1Evaluation}{\code{EvaluationServicesApi$postRepoV1Evaluation()}}
\item \href{#method-EvaluationServicesApi-postRepoV1EvaluationWithHttpInfo}{\code{EvaluationServicesApi$postRepoV1EvaluationWithHttpInfo()}}
\item \href{#method-EvaluationServicesApi-postRepoV1EvaluationEvalIdMigratequota}{\code{EvaluationServicesApi$postRepoV1EvaluationEvalIdMigratequota()}}
\item \href{#method-EvaluationServicesApi-postRepoV1EvaluationEvalIdMigratequotaWithHttpInfo}{\code{EvaluationServicesApi$postRepoV1EvaluationEvalIdMigratequotaWithHttpInfo()}}
\item \href{#method-EvaluationServicesApi-postRepoV1EvaluationEvalIdRound}{\code{EvaluationServicesApi$postRepoV1EvaluationEvalIdRound()}}
\item \href{#method-EvaluationServicesApi-postRepoV1EvaluationEvalIdRoundWithHttpInfo}{\code{EvaluationServicesApi$postRepoV1EvaluationEvalIdRoundWithHttpInfo()}}
\item \href{#method-EvaluationServicesApi-postRepoV1EvaluationEvalIdRoundList}{\code{EvaluationServicesApi$postRepoV1EvaluationEvalIdRoundList()}}
\item \href{#method-EvaluationServicesApi-postRepoV1EvaluationEvalIdRoundListWithHttpInfo}{\code{EvaluationServicesApi$postRepoV1EvaluationEvalIdRoundListWithHttpInfo()}}
\item \href{#method-EvaluationServicesApi-postRepoV1EvaluationSubmission}{\code{EvaluationServicesApi$postRepoV1EvaluationSubmission()}}
\item \href{#method-EvaluationServicesApi-postRepoV1EvaluationSubmissionWithHttpInfo}{\code{EvaluationServicesApi$postRepoV1EvaluationSubmissionWithHttpInfo()}}
\item \href{#method-EvaluationServicesApi-putRepoV1EvaluationAcl}{\code{EvaluationServicesApi$putRepoV1EvaluationAcl()}}
\item \href{#method-EvaluationServicesApi-putRepoV1EvaluationAclWithHttpInfo}{\code{EvaluationServicesApi$putRepoV1EvaluationAclWithHttpInfo()}}
\item \href{#method-EvaluationServicesApi-putRepoV1EvaluationEvalId}{\code{EvaluationServicesApi$putRepoV1EvaluationEvalId()}}
\item \href{#method-EvaluationServicesApi-putRepoV1EvaluationEvalIdWithHttpInfo}{\code{EvaluationServicesApi$putRepoV1EvaluationEvalIdWithHttpInfo()}}
\item \href{#method-EvaluationServicesApi-putRepoV1EvaluationEvalIdRoundRoundId}{\code{EvaluationServicesApi$putRepoV1EvaluationEvalIdRoundRoundId()}}
\item \href{#method-EvaluationServicesApi-putRepoV1EvaluationEvalIdRoundRoundIdWithHttpInfo}{\code{EvaluationServicesApi$putRepoV1EvaluationEvalIdRoundRoundIdWithHttpInfo()}}
\item \href{#method-EvaluationServicesApi-putRepoV1EvaluationEvalIdStatusBatch}{\code{EvaluationServicesApi$putRepoV1EvaluationEvalIdStatusBatch()}}
\item \href{#method-EvaluationServicesApi-putRepoV1EvaluationEvalIdStatusBatchWithHttpInfo}{\code{EvaluationServicesApi$putRepoV1EvaluationEvalIdStatusBatchWithHttpInfo()}}
\item \href{#method-EvaluationServicesApi-putRepoV1EvaluationSubmissionSubIdCancellation}{\code{EvaluationServicesApi$putRepoV1EvaluationSubmissionSubIdCancellation()}}
\item \href{#method-EvaluationServicesApi-putRepoV1EvaluationSubmissionSubIdCancellationWithHttpInfo}{\code{EvaluationServicesApi$putRepoV1EvaluationSubmissionSubIdCancellationWithHttpInfo()}}
\item \href{#method-EvaluationServicesApi-putRepoV1EvaluationSubmissionSubIdStatus}{\code{EvaluationServicesApi$putRepoV1EvaluationSubmissionSubIdStatus()}}
\item \href{#method-EvaluationServicesApi-putRepoV1EvaluationSubmissionSubIdStatusWithHttpInfo}{\code{EvaluationServicesApi$putRepoV1EvaluationSubmissionSubIdStatusWithHttpInfo()}}
\item \href{#method-EvaluationServicesApi-clone}{\code{EvaluationServicesApi$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EvaluationServicesApi-new"></a>}}
\if{latex}{\out{\hypertarget{method-EvaluationServicesApi-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new EvaluationServicesApi.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EvaluationServicesApi$new(api_client)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{api_client}}{An instance of API client.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EvaluationServicesApi-deleteRepoV1EvaluationEvalId"></a>}}
\if{latex}{\out{\hypertarget{method-EvaluationServicesApi-deleteRepoV1EvaluationEvalId}{}}}
\subsection{Method \code{deleteRepoV1EvaluationEvalId()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EvaluationServicesApi$deleteRepoV1EvaluationEvalId(eval_id, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{eval_id}}{- the ID of the requested Evaluation}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
void
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EvaluationServicesApi-deleteRepoV1EvaluationEvalIdWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EvaluationServicesApi-deleteRepoV1EvaluationEvalIdWithHttpInfo}{}}}
\subsection{Method \code{deleteRepoV1EvaluationEvalIdWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EvaluationServicesApi$deleteRepoV1EvaluationEvalIdWithHttpInfo(eval_id, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{eval_id}}{- the ID of the requested Evaluation}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (void) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EvaluationServicesApi-deleteRepoV1EvaluationEvalIdRoundRoundId"></a>}}
\if{latex}{\out{\hypertarget{method-EvaluationServicesApi-deleteRepoV1EvaluationEvalIdRoundRoundId}{}}}
\subsection{Method \code{deleteRepoV1EvaluationEvalIdRoundRoundId()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EvaluationServicesApi$deleteRepoV1EvaluationEvalIdRoundRoundId(
  eval_id,
  round_id,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{eval_id}}{}

\item{\code{round_id}}{}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
void
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EvaluationServicesApi-deleteRepoV1EvaluationEvalIdRoundRoundIdWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EvaluationServicesApi-deleteRepoV1EvaluationEvalIdRoundRoundIdWithHttpInfo}{}}}
\subsection{Method \code{deleteRepoV1EvaluationEvalIdRoundRoundIdWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EvaluationServicesApi$deleteRepoV1EvaluationEvalIdRoundRoundIdWithHttpInfo(
  eval_id,
  round_id,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{eval_id}}{}

\item{\code{round_id}}{}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (void) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EvaluationServicesApi-deleteRepoV1EvaluationSubmissionSubId"></a>}}
\if{latex}{\out{\hypertarget{method-EvaluationServicesApi-deleteRepoV1EvaluationSubmissionSubId}{}}}
\subsection{Method \code{deleteRepoV1EvaluationSubmissionSubId()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EvaluationServicesApi$deleteRepoV1EvaluationSubmissionSubId(sub_id, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sub_id}}{- the ID of the Submission to be deleted.}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
void
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EvaluationServicesApi-deleteRepoV1EvaluationSubmissionSubIdWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EvaluationServicesApi-deleteRepoV1EvaluationSubmissionSubIdWithHttpInfo}{}}}
\subsection{Method \code{deleteRepoV1EvaluationSubmissionSubIdWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EvaluationServicesApi$deleteRepoV1EvaluationSubmissionSubIdWithHttpInfo(
  sub_id,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sub_id}}{- the ID of the Submission to be deleted.}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (void) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EvaluationServicesApi-getRepoV1EntityIdEvaluation"></a>}}
\if{latex}{\out{\hypertarget{method-EvaluationServicesApi-getRepoV1EntityIdEvaluation}{}}}
\subsection{Method \code{getRepoV1EntityIdEvaluation()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EvaluationServicesApi$getRepoV1EntityIdEvaluation(
  id,
  access_type = NULL,
  active_only = NULL,
  evaluation_ids = NULL,
  offset = NULL,
  limit = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{the ID of the project}

\item{\code{access_type}}{(optional) The type of access for the user to filter for, optional and defaults to ,<a href=\"${org.sagebionetworks.repo.model.ACCESS_TYPE}\">,ACCESS_TYPE.READ,</a>}

\item{\code{active_only}}{(optional) If 'true' then return only those evaluations with rounds defined and for which the current time is in one of the rounds.}

\item{\code{evaluation_ids}}{(optional) an optional, comma-delimited list of evaluation IDs to which the response is limited}

\item{\code{offset}}{(optional) The offset index determines where this page will start from.             An index of 0 is the first entity. When null it will default             to 0.}

\item{\code{limit}}{(optional) Limits the number of entities that will be fetched for this             page. When null it will default to 10.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
PaginatedResultsOfEvaluation
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EvaluationServicesApi-getRepoV1EntityIdEvaluationWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EvaluationServicesApi-getRepoV1EntityIdEvaluationWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1EntityIdEvaluationWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EvaluationServicesApi$getRepoV1EntityIdEvaluationWithHttpInfo(
  id,
  access_type = NULL,
  active_only = NULL,
  evaluation_ids = NULL,
  offset = NULL,
  limit = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{the ID of the project}

\item{\code{access_type}}{(optional) The type of access for the user to filter for, optional and defaults to ,<a href=\"${org.sagebionetworks.repo.model.ACCESS_TYPE}\">,ACCESS_TYPE.READ,</a>}

\item{\code{active_only}}{(optional) If 'true' then return only those evaluations with rounds defined and for which the current time is in one of the rounds.}

\item{\code{evaluation_ids}}{(optional) an optional, comma-delimited list of evaluation IDs to which the response is limited}

\item{\code{offset}}{(optional) The offset index determines where this page will start from.             An index of 0 is the first entity. When null it will default             to 0.}

\item{\code{limit}}{(optional) Limits the number of entities that will be fetched for this             page. When null it will default to 10.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (PaginatedResultsOfEvaluation) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EvaluationServicesApi-getRepoV1Evaluation"></a>}}
\if{latex}{\out{\hypertarget{method-EvaluationServicesApi-getRepoV1Evaluation}{}}}
\subsection{Method \code{getRepoV1Evaluation()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EvaluationServicesApi$getRepoV1Evaluation(
  access_type = NULL,
  active_only = NULL,
  evaluation_ids = NULL,
  offset = NULL,
  limit = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{access_type}}{(optional) The type of access for the user to filter for, optional and defaults to ,<a href=\"${org.sagebionetworks.repo.model.ACCESS_TYPE}\">,ACCESS_TYPE.READ,</a>}

\item{\code{active_only}}{(optional) If 'true' then return only those evaluations with rounds defined and for which the current time is in one of the rounds.}

\item{\code{evaluation_ids}}{(optional) an optional, comma-delimited list of evaluation IDs to which the response is limited}

\item{\code{offset}}{(optional) The offset index determines where this page will start from.             An index of 0 is the first entity. When null it will default             to 0.}

\item{\code{limit}}{(optional) Limits the number of entities that will be fetched for this             page. When null it will default to 10.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
PaginatedResultsOfEvaluation
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EvaluationServicesApi-getRepoV1EvaluationWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EvaluationServicesApi-getRepoV1EvaluationWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1EvaluationWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EvaluationServicesApi$getRepoV1EvaluationWithHttpInfo(
  access_type = NULL,
  active_only = NULL,
  evaluation_ids = NULL,
  offset = NULL,
  limit = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{access_type}}{(optional) The type of access for the user to filter for, optional and defaults to ,<a href=\"${org.sagebionetworks.repo.model.ACCESS_TYPE}\">,ACCESS_TYPE.READ,</a>}

\item{\code{active_only}}{(optional) If 'true' then return only those evaluations with rounds defined and for which the current time is in one of the rounds.}

\item{\code{evaluation_ids}}{(optional) an optional, comma-delimited list of evaluation IDs to which the response is limited}

\item{\code{offset}}{(optional) The offset index determines where this page will start from.             An index of 0 is the first entity. When null it will default             to 0.}

\item{\code{limit}}{(optional) Limits the number of entities that will be fetched for this             page. When null it will default to 10.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (PaginatedResultsOfEvaluation) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EvaluationServicesApi-getRepoV1EvaluationAvailable"></a>}}
\if{latex}{\out{\hypertarget{method-EvaluationServicesApi-getRepoV1EvaluationAvailable}{}}}
\subsection{Method \code{getRepoV1EvaluationAvailable()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EvaluationServicesApi$getRepoV1EvaluationAvailable(
  active_only = NULL,
  evaluation_ids = NULL,
  offset = NULL,
  limit = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{active_only}}{(optional) No description}

\item{\code{evaluation_ids}}{(optional) an optional, comma-delimited list of evaluation IDs to which the response is limited}

\item{\code{offset}}{(optional) The offset index determines where this page will start from.             An index of 0 is the first evaluation. When null it will default             to 0.}

\item{\code{limit}}{(optional) Limits the number of entities that will be fetched for this             page. When null it will default to 10.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
PaginatedResultsOfEvaluation
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EvaluationServicesApi-getRepoV1EvaluationAvailableWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EvaluationServicesApi-getRepoV1EvaluationAvailableWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1EvaluationAvailableWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EvaluationServicesApi$getRepoV1EvaluationAvailableWithHttpInfo(
  active_only = NULL,
  evaluation_ids = NULL,
  offset = NULL,
  limit = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{active_only}}{(optional) No description}

\item{\code{evaluation_ids}}{(optional) an optional, comma-delimited list of evaluation IDs to which the response is limited}

\item{\code{offset}}{(optional) The offset index determines where this page will start from.             An index of 0 is the first evaluation. When null it will default             to 0.}

\item{\code{limit}}{(optional) Limits the number of entities that will be fetched for this             page. When null it will default to 10.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (PaginatedResultsOfEvaluation) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EvaluationServicesApi-getRepoV1EvaluationEvalId"></a>}}
\if{latex}{\out{\hypertarget{method-EvaluationServicesApi-getRepoV1EvaluationEvalId}{}}}
\subsection{Method \code{getRepoV1EvaluationEvalId()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EvaluationServicesApi$getRepoV1EvaluationEvalId(eval_id, data_file = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{eval_id}}{- the ID of the desired Evaluation}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksEvaluationModelEvaluation
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EvaluationServicesApi-getRepoV1EvaluationEvalIdWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EvaluationServicesApi-getRepoV1EvaluationEvalIdWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1EvaluationEvalIdWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EvaluationServicesApi$getRepoV1EvaluationEvalIdWithHttpInfo(
  eval_id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{eval_id}}{- the ID of the desired Evaluation}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksEvaluationModelEvaluation) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EvaluationServicesApi-getRepoV1EvaluationEvalIdAccess"></a>}}
\if{latex}{\out{\hypertarget{method-EvaluationServicesApi-getRepoV1EvaluationEvalIdAccess}{}}}
\subsection{Method \code{getRepoV1EvaluationEvalIdAccess()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EvaluationServicesApi$getRepoV1EvaluationEvalIdAccess(
  eval_id,
  access_type,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{eval_id}}{}

\item{\code{access_type}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
character
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EvaluationServicesApi-getRepoV1EvaluationEvalIdAccessWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EvaluationServicesApi-getRepoV1EvaluationEvalIdAccessWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1EvaluationEvalIdAccessWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EvaluationServicesApi$getRepoV1EvaluationEvalIdAccessWithHttpInfo(
  eval_id,
  access_type,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{eval_id}}{}

\item{\code{access_type}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (character) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EvaluationServicesApi-getRepoV1EvaluationEvalIdAcl"></a>}}
\if{latex}{\out{\hypertarget{method-EvaluationServicesApi-getRepoV1EvaluationEvalIdAcl}{}}}
\subsection{Method \code{getRepoV1EvaluationEvalIdAcl()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EvaluationServicesApi$getRepoV1EvaluationEvalIdAcl(
  eval_id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{eval_id}}{The ID of the evaluation whose ACL is being retrieved.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelAccessControlList
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EvaluationServicesApi-getRepoV1EvaluationEvalIdAclWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EvaluationServicesApi-getRepoV1EvaluationEvalIdAclWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1EvaluationEvalIdAclWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EvaluationServicesApi$getRepoV1EvaluationEvalIdAclWithHttpInfo(
  eval_id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{eval_id}}{The ID of the evaluation whose ACL is being retrieved.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelAccessControlList) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EvaluationServicesApi-getRepoV1EvaluationEvalIdPermissions"></a>}}
\if{latex}{\out{\hypertarget{method-EvaluationServicesApi-getRepoV1EvaluationEvalIdPermissions}{}}}
\subsection{Method \code{getRepoV1EvaluationEvalIdPermissions()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EvaluationServicesApi$getRepoV1EvaluationEvalIdPermissions(
  eval_id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{eval_id}}{The ID of the evaluation over which the user permission are being retrieved.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksEvaluationModelUserEvaluationPermissions
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EvaluationServicesApi-getRepoV1EvaluationEvalIdPermissionsWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EvaluationServicesApi-getRepoV1EvaluationEvalIdPermissionsWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1EvaluationEvalIdPermissionsWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EvaluationServicesApi$getRepoV1EvaluationEvalIdPermissionsWithHttpInfo(
  eval_id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{eval_id}}{The ID of the evaluation over which the user permission are being retrieved.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksEvaluationModelUserEvaluationPermissions) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EvaluationServicesApi-getRepoV1EvaluationEvalIdRoundRoundId"></a>}}
\if{latex}{\out{\hypertarget{method-EvaluationServicesApi-getRepoV1EvaluationEvalIdRoundRoundId}{}}}
\subsection{Method \code{getRepoV1EvaluationEvalIdRoundRoundId()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EvaluationServicesApi$getRepoV1EvaluationEvalIdRoundRoundId(
  eval_id,
  round_id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{eval_id}}{}

\item{\code{round_id}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksEvaluationModelEvaluationRound
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EvaluationServicesApi-getRepoV1EvaluationEvalIdRoundRoundIdWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EvaluationServicesApi-getRepoV1EvaluationEvalIdRoundRoundIdWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1EvaluationEvalIdRoundRoundIdWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EvaluationServicesApi$getRepoV1EvaluationEvalIdRoundRoundIdWithHttpInfo(
  eval_id,
  round_id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{eval_id}}{}

\item{\code{round_id}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksEvaluationModelEvaluationRound) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EvaluationServicesApi-getRepoV1EvaluationEvalIdSubmission"></a>}}
\if{latex}{\out{\hypertarget{method-EvaluationServicesApi-getRepoV1EvaluationEvalIdSubmission}{}}}
\subsection{Method \code{getRepoV1EvaluationEvalIdSubmission()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EvaluationServicesApi$getRepoV1EvaluationEvalIdSubmission(
  eval_id,
  offset = NULL,
  limit = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{eval_id}}{- the ID of the specified Evaluation.}

\item{\code{offset}}{(optional) The offset index determines where this page will start from.             An index of 0 is the first entity. When null it will default             to 0.}

\item{\code{limit}}{(optional) Limits the number of entities that will be fetched for this             page. When null it will default to 10.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
PaginatedResultsOfSubmission
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EvaluationServicesApi-getRepoV1EvaluationEvalIdSubmissionWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EvaluationServicesApi-getRepoV1EvaluationEvalIdSubmissionWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1EvaluationEvalIdSubmissionWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EvaluationServicesApi$getRepoV1EvaluationEvalIdSubmissionWithHttpInfo(
  eval_id,
  offset = NULL,
  limit = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{eval_id}}{- the ID of the specified Evaluation.}

\item{\code{offset}}{(optional) The offset index determines where this page will start from.             An index of 0 is the first entity. When null it will default             to 0.}

\item{\code{limit}}{(optional) Limits the number of entities that will be fetched for this             page. When null it will default to 10.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (PaginatedResultsOfSubmission) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EvaluationServicesApi-getRepoV1EvaluationEvalIdSubmissionAll"></a>}}
\if{latex}{\out{\hypertarget{method-EvaluationServicesApi-getRepoV1EvaluationEvalIdSubmissionAll}{}}}
\subsection{Method \code{getRepoV1EvaluationEvalIdSubmissionAll()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EvaluationServicesApi$getRepoV1EvaluationEvalIdSubmissionAll(
  eval_id,
  status,
  offset = NULL,
  limit = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{eval_id}}{- the ID of the specified Evaluation.}

\item{\code{status}}{}

\item{\code{offset}}{(optional) The offset index determines where this page will start from.             An index of 0 is the first entity. When null it will default             to 0.}

\item{\code{limit}}{(optional) Limits the number of entities that will be fetched for this             page. When null it will default to 10, max value 100.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
PaginatedResultsOfSubmission
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EvaluationServicesApi-getRepoV1EvaluationEvalIdSubmissionAllWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EvaluationServicesApi-getRepoV1EvaluationEvalIdSubmissionAllWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1EvaluationEvalIdSubmissionAllWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EvaluationServicesApi$getRepoV1EvaluationEvalIdSubmissionAllWithHttpInfo(
  eval_id,
  status,
  offset = NULL,
  limit = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{eval_id}}{- the ID of the specified Evaluation.}

\item{\code{status}}{}

\item{\code{offset}}{(optional) The offset index determines where this page will start from.             An index of 0 is the first entity. When null it will default             to 0.}

\item{\code{limit}}{(optional) Limits the number of entities that will be fetched for this             page. When null it will default to 10, max value 100.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (PaginatedResultsOfSubmission) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EvaluationServicesApi-getRepoV1EvaluationEvalIdSubmissionBundle"></a>}}
\if{latex}{\out{\hypertarget{method-EvaluationServicesApi-getRepoV1EvaluationEvalIdSubmissionBundle}{}}}
\subsection{Method \code{getRepoV1EvaluationEvalIdSubmissionBundle()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EvaluationServicesApi$getRepoV1EvaluationEvalIdSubmissionBundle(
  eval_id,
  offset = NULL,
  limit = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{eval_id}}{- the ID of the specified Evaluation.}

\item{\code{offset}}{(optional) The offset index determines where this page will start from.             An index of 0 is the first entity. When null it will default             to 0.}

\item{\code{limit}}{(optional) Limits the number of entities that will be fetched for this             page. When null it will default to 10.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
PaginatedResultsOfSubmissionBundle
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EvaluationServicesApi-getRepoV1EvaluationEvalIdSubmissionBundleWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EvaluationServicesApi-getRepoV1EvaluationEvalIdSubmissionBundleWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1EvaluationEvalIdSubmissionBundleWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EvaluationServicesApi$getRepoV1EvaluationEvalIdSubmissionBundleWithHttpInfo(
  eval_id,
  offset = NULL,
  limit = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{eval_id}}{- the ID of the specified Evaluation.}

\item{\code{offset}}{(optional) The offset index determines where this page will start from.             An index of 0 is the first entity. When null it will default             to 0.}

\item{\code{limit}}{(optional) Limits the number of entities that will be fetched for this             page. When null it will default to 10.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (PaginatedResultsOfSubmissionBundle) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EvaluationServicesApi-getRepoV1EvaluationEvalIdSubmissionBundleAll"></a>}}
\if{latex}{\out{\hypertarget{method-EvaluationServicesApi-getRepoV1EvaluationEvalIdSubmissionBundleAll}{}}}
\subsection{Method \code{getRepoV1EvaluationEvalIdSubmissionBundleAll()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EvaluationServicesApi$getRepoV1EvaluationEvalIdSubmissionBundleAll(
  eval_id,
  status,
  offset = NULL,
  limit = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{eval_id}}{- the ID of the specified Evaluation.}

\item{\code{status}}{}

\item{\code{offset}}{(optional) The offset index determines where this page will start from.             An index of 0 is the first entity. When null it will default             to 0.}

\item{\code{limit}}{(optional) Limits the number of entities that will be fetched for this             page. When null it will default to 10, max value 100.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
PaginatedResultsOfSubmissionBundle
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EvaluationServicesApi-getRepoV1EvaluationEvalIdSubmissionBundleAllWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EvaluationServicesApi-getRepoV1EvaluationEvalIdSubmissionBundleAllWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1EvaluationEvalIdSubmissionBundleAllWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EvaluationServicesApi$getRepoV1EvaluationEvalIdSubmissionBundleAllWithHttpInfo(
  eval_id,
  status,
  offset = NULL,
  limit = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{eval_id}}{- the ID of the specified Evaluation.}

\item{\code{status}}{}

\item{\code{offset}}{(optional) The offset index determines where this page will start from.             An index of 0 is the first entity. When null it will default             to 0.}

\item{\code{limit}}{(optional) Limits the number of entities that will be fetched for this             page. When null it will default to 10, max value 100.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (PaginatedResultsOfSubmissionBundle) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EvaluationServicesApi-getRepoV1EvaluationEvalIdSubmissionCount"></a>}}
\if{latex}{\out{\hypertarget{method-EvaluationServicesApi-getRepoV1EvaluationEvalIdSubmissionCount}{}}}
\subsection{Method \code{getRepoV1EvaluationEvalIdSubmissionCount()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EvaluationServicesApi$getRepoV1EvaluationEvalIdSubmissionCount(
  eval_id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{eval_id}}{- the ID of the specified Evaluation.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
numeric
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EvaluationServicesApi-getRepoV1EvaluationEvalIdSubmissionCountWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EvaluationServicesApi-getRepoV1EvaluationEvalIdSubmissionCountWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1EvaluationEvalIdSubmissionCountWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EvaluationServicesApi$getRepoV1EvaluationEvalIdSubmissionCountWithHttpInfo(
  eval_id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{eval_id}}{- the ID of the specified Evaluation.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (numeric) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EvaluationServicesApi-getRepoV1EvaluationEvalIdSubmissionStatusAll"></a>}}
\if{latex}{\out{\hypertarget{method-EvaluationServicesApi-getRepoV1EvaluationEvalIdSubmissionStatusAll}{}}}
\subsection{Method \code{getRepoV1EvaluationEvalIdSubmissionStatusAll()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EvaluationServicesApi$getRepoV1EvaluationEvalIdSubmissionStatusAll(
  eval_id,
  status,
  offset = NULL,
  limit = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{eval_id}}{- the ID of the specified Evaluation.}

\item{\code{status}}{}

\item{\code{offset}}{(optional) The offset index determines where this page will start from.             An index of 0 is the first entity. When null it will default             to 0.}

\item{\code{limit}}{(optional) Limits the number of entities that will be fetched for this             page. When null it will default to 10, max value 100.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
PaginatedResultsOfSubmissionStatus
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EvaluationServicesApi-getRepoV1EvaluationEvalIdSubmissionStatusAllWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EvaluationServicesApi-getRepoV1EvaluationEvalIdSubmissionStatusAllWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1EvaluationEvalIdSubmissionStatusAllWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EvaluationServicesApi$getRepoV1EvaluationEvalIdSubmissionStatusAllWithHttpInfo(
  eval_id,
  status,
  offset = NULL,
  limit = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{eval_id}}{- the ID of the specified Evaluation.}

\item{\code{status}}{}

\item{\code{offset}}{(optional) The offset index determines where this page will start from.             An index of 0 is the first entity. When null it will default             to 0.}

\item{\code{limit}}{(optional) Limits the number of entities that will be fetched for this             page. When null it will default to 10, max value 100.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (PaginatedResultsOfSubmissionStatus) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EvaluationServicesApi-getRepoV1EvaluationEvalIdTeamIdSubmissionEligibility"></a>}}
\if{latex}{\out{\hypertarget{method-EvaluationServicesApi-getRepoV1EvaluationEvalIdTeamIdSubmissionEligibility}{}}}
\subsection{Method \code{getRepoV1EvaluationEvalIdTeamIdSubmissionEligibility()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EvaluationServicesApi$getRepoV1EvaluationEvalIdTeamIdSubmissionEligibility(
  eval_id,
  id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{eval_id}}{}

\item{\code{id}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksEvaluationModelTeamSubmissionEligibility
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EvaluationServicesApi-getRepoV1EvaluationEvalIdTeamIdSubmissionEligibilityWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EvaluationServicesApi-getRepoV1EvaluationEvalIdTeamIdSubmissionEligibilityWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1EvaluationEvalIdTeamIdSubmissionEligibilityWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EvaluationServicesApi$getRepoV1EvaluationEvalIdTeamIdSubmissionEligibilityWithHttpInfo(
  eval_id,
  id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{eval_id}}{}

\item{\code{id}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksEvaluationModelTeamSubmissionEligibility) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EvaluationServicesApi-getRepoV1EvaluationNameName"></a>}}
\if{latex}{\out{\hypertarget{method-EvaluationServicesApi-getRepoV1EvaluationNameName}{}}}
\subsection{Method \code{getRepoV1EvaluationNameName()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EvaluationServicesApi$getRepoV1EvaluationNameName(name, data_file = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{- the name of the desired Evaluation.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksEvaluationModelEvaluation
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EvaluationServicesApi-getRepoV1EvaluationNameNameWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EvaluationServicesApi-getRepoV1EvaluationNameNameWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1EvaluationNameNameWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EvaluationServicesApi$getRepoV1EvaluationNameNameWithHttpInfo(
  name,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{- the name of the desired Evaluation.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksEvaluationModelEvaluation) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EvaluationServicesApi-getRepoV1EvaluationSubmissionSubId"></a>}}
\if{latex}{\out{\hypertarget{method-EvaluationServicesApi-getRepoV1EvaluationSubmissionSubId}{}}}
\subsection{Method \code{getRepoV1EvaluationSubmissionSubId()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EvaluationServicesApi$getRepoV1EvaluationSubmissionSubId(
  sub_id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sub_id}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksEvaluationModelSubmission
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EvaluationServicesApi-getRepoV1EvaluationSubmissionSubIdWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EvaluationServicesApi-getRepoV1EvaluationSubmissionSubIdWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1EvaluationSubmissionSubIdWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EvaluationServicesApi$getRepoV1EvaluationSubmissionSubIdWithHttpInfo(
  sub_id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sub_id}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksEvaluationModelSubmission) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EvaluationServicesApi-getRepoV1EvaluationSubmissionSubIdFileFileHandleId"></a>}}
\if{latex}{\out{\hypertarget{method-EvaluationServicesApi-getRepoV1EvaluationSubmissionSubIdFileFileHandleId}{}}}
\subsection{Method \code{getRepoV1EvaluationSubmissionSubIdFileFileHandleId()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EvaluationServicesApi$getRepoV1EvaluationSubmissionSubIdFileFileHandleId(
  sub_id,
  file_handle_id,
  redirect = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sub_id}}{}

\item{\code{file_handle_id}}{- the ID of the requested FileHandle contained in the Submission.}

\item{\code{redirect}}{(optional) No description}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
AnyType
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EvaluationServicesApi-getRepoV1EvaluationSubmissionSubIdFileFileHandleIdWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EvaluationServicesApi-getRepoV1EvaluationSubmissionSubIdFileFileHandleIdWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1EvaluationSubmissionSubIdFileFileHandleIdWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EvaluationServicesApi$getRepoV1EvaluationSubmissionSubIdFileFileHandleIdWithHttpInfo(
  sub_id,
  file_handle_id,
  redirect = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sub_id}}{}

\item{\code{file_handle_id}}{- the ID of the requested FileHandle contained in the Submission.}

\item{\code{redirect}}{(optional) No description}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (AnyType) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EvaluationServicesApi-getRepoV1EvaluationSubmissionSubIdStatus"></a>}}
\if{latex}{\out{\hypertarget{method-EvaluationServicesApi-getRepoV1EvaluationSubmissionSubIdStatus}{}}}
\subsection{Method \code{getRepoV1EvaluationSubmissionSubIdStatus()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EvaluationServicesApi$getRepoV1EvaluationSubmissionSubIdStatus(
  sub_id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sub_id}}{- the ID of the requested SubmissionStatus.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksEvaluationModelSubmissionStatus
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EvaluationServicesApi-getRepoV1EvaluationSubmissionSubIdStatusWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EvaluationServicesApi-getRepoV1EvaluationSubmissionSubIdStatusWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1EvaluationSubmissionSubIdStatusWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EvaluationServicesApi$getRepoV1EvaluationSubmissionSubIdStatusWithHttpInfo(
  sub_id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sub_id}}{- the ID of the requested SubmissionStatus.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksEvaluationModelSubmissionStatus) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EvaluationServicesApi-postRepoV1AdminEvaluationSubmissionSubIdContributor"></a>}}
\if{latex}{\out{\hypertarget{method-EvaluationServicesApi-postRepoV1AdminEvaluationSubmissionSubIdContributor}{}}}
\subsection{Method \code{postRepoV1AdminEvaluationSubmissionSubIdContributor()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EvaluationServicesApi$postRepoV1AdminEvaluationSubmissionSubIdContributor(
  sub_id,
  org_sagebionetworks_evaluation_model_submission_contributor,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sub_id}}{}

\item{\code{org_sagebionetworks_evaluation_model_submission_contributor}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksEvaluationModelSubmissionContributor
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EvaluationServicesApi-postRepoV1AdminEvaluationSubmissionSubIdContributorWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EvaluationServicesApi-postRepoV1AdminEvaluationSubmissionSubIdContributorWithHttpInfo}{}}}
\subsection{Method \code{postRepoV1AdminEvaluationSubmissionSubIdContributorWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EvaluationServicesApi$postRepoV1AdminEvaluationSubmissionSubIdContributorWithHttpInfo(
  sub_id,
  org_sagebionetworks_evaluation_model_submission_contributor,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sub_id}}{}

\item{\code{org_sagebionetworks_evaluation_model_submission_contributor}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksEvaluationModelSubmissionContributor) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EvaluationServicesApi-postRepoV1Evaluation"></a>}}
\if{latex}{\out{\hypertarget{method-EvaluationServicesApi-postRepoV1Evaluation}{}}}
\subsection{Method \code{postRepoV1Evaluation()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EvaluationServicesApi$postRepoV1Evaluation(
  org_sagebionetworks_evaluation_model_evaluation,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org_sagebionetworks_evaluation_model_evaluation}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksEvaluationModelEvaluation
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EvaluationServicesApi-postRepoV1EvaluationWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EvaluationServicesApi-postRepoV1EvaluationWithHttpInfo}{}}}
\subsection{Method \code{postRepoV1EvaluationWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EvaluationServicesApi$postRepoV1EvaluationWithHttpInfo(
  org_sagebionetworks_evaluation_model_evaluation,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org_sagebionetworks_evaluation_model_evaluation}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksEvaluationModelEvaluation) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EvaluationServicesApi-postRepoV1EvaluationEvalIdMigratequota"></a>}}
\if{latex}{\out{\hypertarget{method-EvaluationServicesApi-postRepoV1EvaluationEvalIdMigratequota}{}}}
\subsection{Method \code{postRepoV1EvaluationEvalIdMigratequota()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EvaluationServicesApi$postRepoV1EvaluationEvalIdMigratequota(eval_id, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{eval_id}}{}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
void
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EvaluationServicesApi-postRepoV1EvaluationEvalIdMigratequotaWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EvaluationServicesApi-postRepoV1EvaluationEvalIdMigratequotaWithHttpInfo}{}}}
\subsection{Method \code{postRepoV1EvaluationEvalIdMigratequotaWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EvaluationServicesApi$postRepoV1EvaluationEvalIdMigratequotaWithHttpInfo(
  eval_id,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{eval_id}}{}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (void) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EvaluationServicesApi-postRepoV1EvaluationEvalIdRound"></a>}}
\if{latex}{\out{\hypertarget{method-EvaluationServicesApi-postRepoV1EvaluationEvalIdRound}{}}}
\subsection{Method \code{postRepoV1EvaluationEvalIdRound()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EvaluationServicesApi$postRepoV1EvaluationEvalIdRound(
  eval_id,
  org_sagebionetworks_evaluation_model_evaluation_round,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{eval_id}}{}

\item{\code{org_sagebionetworks_evaluation_model_evaluation_round}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksEvaluationModelEvaluationRound
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EvaluationServicesApi-postRepoV1EvaluationEvalIdRoundWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EvaluationServicesApi-postRepoV1EvaluationEvalIdRoundWithHttpInfo}{}}}
\subsection{Method \code{postRepoV1EvaluationEvalIdRoundWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EvaluationServicesApi$postRepoV1EvaluationEvalIdRoundWithHttpInfo(
  eval_id,
  org_sagebionetworks_evaluation_model_evaluation_round,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{eval_id}}{}

\item{\code{org_sagebionetworks_evaluation_model_evaluation_round}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksEvaluationModelEvaluationRound) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EvaluationServicesApi-postRepoV1EvaluationEvalIdRoundList"></a>}}
\if{latex}{\out{\hypertarget{method-EvaluationServicesApi-postRepoV1EvaluationEvalIdRoundList}{}}}
\subsection{Method \code{postRepoV1EvaluationEvalIdRoundList()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EvaluationServicesApi$postRepoV1EvaluationEvalIdRoundList(
  eval_id,
  org_sagebionetworks_evaluation_model_evaluation_round_list_request,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{eval_id}}{}

\item{\code{org_sagebionetworks_evaluation_model_evaluation_round_list_request}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksEvaluationModelEvaluationRoundListResponse
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EvaluationServicesApi-postRepoV1EvaluationEvalIdRoundListWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EvaluationServicesApi-postRepoV1EvaluationEvalIdRoundListWithHttpInfo}{}}}
\subsection{Method \code{postRepoV1EvaluationEvalIdRoundListWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EvaluationServicesApi$postRepoV1EvaluationEvalIdRoundListWithHttpInfo(
  eval_id,
  org_sagebionetworks_evaluation_model_evaluation_round_list_request,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{eval_id}}{}

\item{\code{org_sagebionetworks_evaluation_model_evaluation_round_list_request}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksEvaluationModelEvaluationRoundListResponse) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EvaluationServicesApi-postRepoV1EvaluationSubmission"></a>}}
\if{latex}{\out{\hypertarget{method-EvaluationServicesApi-postRepoV1EvaluationSubmission}{}}}
\subsection{Method \code{postRepoV1EvaluationSubmission()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EvaluationServicesApi$postRepoV1EvaluationSubmission(
  challenge_endpoint,
  notification_unsubscribe_endpoint,
  org_sagebionetworks_evaluation_model_submission,
  etag = NULL,
  submission_eligibility_hash = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{challenge_endpoint}}{The portal endpoint prefix to the an entity/challenge page. The entity ID of the  challenge project is appended to create the complete URL. In normal operation, this parameter should be omitted.}

\item{\code{notification_unsubscribe_endpoint}}{The portal endpoint prefix for one-click email unsubscription.  A signed, serialized token is appended to create the complete URL:  ,<a href=\"${org.sagebionetworks.repo.model.message.NotificationSettingsSignedToken}\">,NotificationSettingsSignedToken,</a>,.  In normal operation, this parameter should be omitted.}

\item{\code{org_sagebionetworks_evaluation_model_submission}}{}

\item{\code{etag}}{(optional) No description}

\item{\code{submission_eligibility_hash}}{(optional) The hash provided by the  ,<a href=\"${org.sagebionetworks.evaluation.model.TeamSubmissionEligibility}\">,TeamSubmissionEligibility,</a>,  object.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksEvaluationModelSubmission
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EvaluationServicesApi-postRepoV1EvaluationSubmissionWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EvaluationServicesApi-postRepoV1EvaluationSubmissionWithHttpInfo}{}}}
\subsection{Method \code{postRepoV1EvaluationSubmissionWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EvaluationServicesApi$postRepoV1EvaluationSubmissionWithHttpInfo(
  challenge_endpoint,
  notification_unsubscribe_endpoint,
  org_sagebionetworks_evaluation_model_submission,
  etag = NULL,
  submission_eligibility_hash = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{challenge_endpoint}}{The portal endpoint prefix to the an entity/challenge page. The entity ID of the  challenge project is appended to create the complete URL. In normal operation, this parameter should be omitted.}

\item{\code{notification_unsubscribe_endpoint}}{The portal endpoint prefix for one-click email unsubscription.  A signed, serialized token is appended to create the complete URL:  ,<a href=\"${org.sagebionetworks.repo.model.message.NotificationSettingsSignedToken}\">,NotificationSettingsSignedToken,</a>,.  In normal operation, this parameter should be omitted.}

\item{\code{org_sagebionetworks_evaluation_model_submission}}{}

\item{\code{etag}}{(optional) No description}

\item{\code{submission_eligibility_hash}}{(optional) The hash provided by the  ,<a href=\"${org.sagebionetworks.evaluation.model.TeamSubmissionEligibility}\">,TeamSubmissionEligibility,</a>,  object.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksEvaluationModelSubmission) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EvaluationServicesApi-putRepoV1EvaluationAcl"></a>}}
\if{latex}{\out{\hypertarget{method-EvaluationServicesApi-putRepoV1EvaluationAcl}{}}}
\subsection{Method \code{putRepoV1EvaluationAcl()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EvaluationServicesApi$putRepoV1EvaluationAcl(
  org_sagebionetworks_repo_model_access_control_list,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org_sagebionetworks_repo_model_access_control_list}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelAccessControlList
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EvaluationServicesApi-putRepoV1EvaluationAclWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EvaluationServicesApi-putRepoV1EvaluationAclWithHttpInfo}{}}}
\subsection{Method \code{putRepoV1EvaluationAclWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EvaluationServicesApi$putRepoV1EvaluationAclWithHttpInfo(
  org_sagebionetworks_repo_model_access_control_list,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{org_sagebionetworks_repo_model_access_control_list}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelAccessControlList) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EvaluationServicesApi-putRepoV1EvaluationEvalId"></a>}}
\if{latex}{\out{\hypertarget{method-EvaluationServicesApi-putRepoV1EvaluationEvalId}{}}}
\subsection{Method \code{putRepoV1EvaluationEvalId()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EvaluationServicesApi$putRepoV1EvaluationEvalId(
  eval_id,
  org_sagebionetworks_evaluation_model_evaluation,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{eval_id}}{- the ID of the Evaluation being updated}

\item{\code{org_sagebionetworks_evaluation_model_evaluation}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksEvaluationModelEvaluation
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EvaluationServicesApi-putRepoV1EvaluationEvalIdWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EvaluationServicesApi-putRepoV1EvaluationEvalIdWithHttpInfo}{}}}
\subsection{Method \code{putRepoV1EvaluationEvalIdWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EvaluationServicesApi$putRepoV1EvaluationEvalIdWithHttpInfo(
  eval_id,
  org_sagebionetworks_evaluation_model_evaluation,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{eval_id}}{- the ID of the Evaluation being updated}

\item{\code{org_sagebionetworks_evaluation_model_evaluation}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksEvaluationModelEvaluation) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EvaluationServicesApi-putRepoV1EvaluationEvalIdRoundRoundId"></a>}}
\if{latex}{\out{\hypertarget{method-EvaluationServicesApi-putRepoV1EvaluationEvalIdRoundRoundId}{}}}
\subsection{Method \code{putRepoV1EvaluationEvalIdRoundRoundId()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EvaluationServicesApi$putRepoV1EvaluationEvalIdRoundRoundId(
  eval_id,
  round_id,
  org_sagebionetworks_evaluation_model_evaluation_round,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{eval_id}}{}

\item{\code{round_id}}{}

\item{\code{org_sagebionetworks_evaluation_model_evaluation_round}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksEvaluationModelEvaluationRound
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EvaluationServicesApi-putRepoV1EvaluationEvalIdRoundRoundIdWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EvaluationServicesApi-putRepoV1EvaluationEvalIdRoundRoundIdWithHttpInfo}{}}}
\subsection{Method \code{putRepoV1EvaluationEvalIdRoundRoundIdWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EvaluationServicesApi$putRepoV1EvaluationEvalIdRoundRoundIdWithHttpInfo(
  eval_id,
  round_id,
  org_sagebionetworks_evaluation_model_evaluation_round,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{eval_id}}{}

\item{\code{round_id}}{}

\item{\code{org_sagebionetworks_evaluation_model_evaluation_round}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksEvaluationModelEvaluationRound) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EvaluationServicesApi-putRepoV1EvaluationEvalIdStatusBatch"></a>}}
\if{latex}{\out{\hypertarget{method-EvaluationServicesApi-putRepoV1EvaluationEvalIdStatusBatch}{}}}
\subsection{Method \code{putRepoV1EvaluationEvalIdStatusBatch()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EvaluationServicesApi$putRepoV1EvaluationEvalIdStatusBatch(
  eval_id,
  org_sagebionetworks_evaluation_model_submission_status_batch,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{eval_id}}{the ID of the Evaluation to which the SubmissionSatus objects belong.}

\item{\code{org_sagebionetworks_evaluation_model_submission_status_batch}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksEvaluationModelBatchUploadResponse
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EvaluationServicesApi-putRepoV1EvaluationEvalIdStatusBatchWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EvaluationServicesApi-putRepoV1EvaluationEvalIdStatusBatchWithHttpInfo}{}}}
\subsection{Method \code{putRepoV1EvaluationEvalIdStatusBatchWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EvaluationServicesApi$putRepoV1EvaluationEvalIdStatusBatchWithHttpInfo(
  eval_id,
  org_sagebionetworks_evaluation_model_submission_status_batch,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{eval_id}}{the ID of the Evaluation to which the SubmissionSatus objects belong.}

\item{\code{org_sagebionetworks_evaluation_model_submission_status_batch}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksEvaluationModelBatchUploadResponse) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EvaluationServicesApi-putRepoV1EvaluationSubmissionSubIdCancellation"></a>}}
\if{latex}{\out{\hypertarget{method-EvaluationServicesApi-putRepoV1EvaluationSubmissionSubIdCancellation}{}}}
\subsection{Method \code{putRepoV1EvaluationSubmissionSubIdCancellation()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EvaluationServicesApi$putRepoV1EvaluationSubmissionSubIdCancellation(
  sub_id,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sub_id}}{}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
void
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EvaluationServicesApi-putRepoV1EvaluationSubmissionSubIdCancellationWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EvaluationServicesApi-putRepoV1EvaluationSubmissionSubIdCancellationWithHttpInfo}{}}}
\subsection{Method \code{putRepoV1EvaluationSubmissionSubIdCancellationWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EvaluationServicesApi$putRepoV1EvaluationSubmissionSubIdCancellationWithHttpInfo(
  sub_id,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sub_id}}{}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (void) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EvaluationServicesApi-putRepoV1EvaluationSubmissionSubIdStatus"></a>}}
\if{latex}{\out{\hypertarget{method-EvaluationServicesApi-putRepoV1EvaluationSubmissionSubIdStatus}{}}}
\subsection{Method \code{putRepoV1EvaluationSubmissionSubIdStatus()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EvaluationServicesApi$putRepoV1EvaluationSubmissionSubIdStatus(
  sub_id,
  org_sagebionetworks_evaluation_model_submission_status,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sub_id}}{- the ID of the SubmissionStatus being updated.}

\item{\code{org_sagebionetworks_evaluation_model_submission_status}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksEvaluationModelSubmissionStatus
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EvaluationServicesApi-putRepoV1EvaluationSubmissionSubIdStatusWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-EvaluationServicesApi-putRepoV1EvaluationSubmissionSubIdStatusWithHttpInfo}{}}}
\subsection{Method \code{putRepoV1EvaluationSubmissionSubIdStatusWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EvaluationServicesApi$putRepoV1EvaluationSubmissionSubIdStatusWithHttpInfo(
  sub_id,
  org_sagebionetworks_evaluation_model_submission_status,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sub_id}}{- the ID of the SubmissionStatus being updated.}

\item{\code{org_sagebionetworks_evaluation_model_submission_status}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksEvaluationModelSubmissionStatus) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-EvaluationServicesApi-clone"></a>}}
\if{latex}{\out{\hypertarget{method-EvaluationServicesApi-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EvaluationServicesApi$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
