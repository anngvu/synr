% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/membership_invitation_services_api.R
\docType{class}
\name{MembershipInvitationServicesApi}
\alias{MembershipInvitationServicesApi}
\title{MembershipInvitationServices operations}
\format{
An \code{R6Class} generator object
}
\description{
MembershipInvitationServicesApi
}
\details{
Synapse REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: v1
Generated by: https://openapi-generator.tech
}
\section{Methods}{

\describe{
\strong{ deleteRepoV1MembershipInvitationId } \emph{  }

\itemize{
\item \emph{ @param } id character


\item status code : 204 | Void


\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1MembershipInvitationId } \emph{  }

\itemize{
\item \emph{ @param } id character
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelMembershipInvitation} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelMembershipInvitation
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1MembershipInvitationIdInviteeVerificationSignedToken } \emph{  }

\itemize{
\item \emph{ @param } id character
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelInviteeVerificationSignedToken} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelInviteeVerificationSignedToken
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1MembershipInvitationOpenInvitationCount } \emph{  }

\itemize{
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelCount} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelCount
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1TeamIdOpenInvitation } \emph{  }

\itemize{
\item \emph{ @param } id character
\item \emph{ @param } invitee_id character
\item \emph{ @param } limit integer
\item \emph{ @param } offset integer
\item \emph{ @returnType } \link{PaginatedResultsOfMembershipInvitation} \cr


\item status code : 200 | Auto-generated description

\item return type : PaginatedResultsOfMembershipInvitation
\item response headers :

\tabular{ll}{
}
}

\strong{ getRepoV1UserIdOpenInvitation } \emph{  }

\itemize{
\item \emph{ @param } id character
\item \emph{ @param } team_id character
\item \emph{ @param } limit integer
\item \emph{ @param } offset integer
\item \emph{ @returnType } \link{PaginatedResultsOfMembershipInvitation} \cr


\item status code : 200 | Auto-generated description

\item return type : PaginatedResultsOfMembershipInvitation
\item response headers :

\tabular{ll}{
}
}

\strong{ postRepoV1MembershipInvitation } \emph{  }

\itemize{
\item \emph{ @param } notification_unsubscribe_endpoint character
\item \emph{ @param } org_sagebionetworks_repo_model_membership_invitation \link{OrgSagebionetworksRepoModelMembershipInvitation}
\item \emph{ @param } accept_invitation_endpoint character
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelMembershipInvitation} \cr


\item status code : 201 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelMembershipInvitation
\item response headers :

\tabular{ll}{
}
}

\strong{ postRepoV1MembershipInvitationId } \emph{  }

\itemize{
\item \emph{ @param } id character
\item \emph{ @param } org_sagebionetworks_repo_model_membership_invtn_signed_token \link{OrgSagebionetworksRepoModelMembershipInvtnSignedToken}
\item \emph{ @returnType } \link{OrgSagebionetworksRepoModelMembershipInvitation} \cr


\item status code : 200 | Auto-generated description

\item return type : OrgSagebionetworksRepoModelMembershipInvitation
\item response headers :

\tabular{ll}{
}
}

\strong{ putRepoV1MembershipInvitationIdInviteeId } \emph{  }

\itemize{
\item \emph{ @param } id character
\item \emph{ @param } org_sagebionetworks_repo_model_invitee_verification_signed_token \link{OrgSagebionetworksRepoModelInviteeVerificationSignedToken}


\item status code : 200 | Void


\item response headers :

\tabular{ll}{
}
}

}
}

\examples{
\dontrun{
####################  deleteRepoV1MembershipInvitationId  ####################

library(synr)
var_id <- "id_example" # character | the ID of the invitation to be deleted

api_instance <- MembershipInvitationServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

api_instance$deleteRepoV1MembershipInvitationId(var_id)


####################  getRepoV1MembershipInvitationId  ####################

library(synr)
var_id <- "id_example" # character | the ID of the invitation

api_instance <- MembershipInvitationServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1MembershipInvitationId(var_iddata_file = "result.txt")
result <- api_instance$getRepoV1MembershipInvitationId(var_id)
dput(result)


####################  getRepoV1MembershipInvitationIdInviteeVerificationSignedToken  ####################

library(synr)
var_id <- "id_example" # character | 

api_instance <- MembershipInvitationServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1MembershipInvitationIdInviteeVerificationSignedToken(var_iddata_file = "result.txt")
result <- api_instance$getRepoV1MembershipInvitationIdInviteeVerificationSignedToken(var_id)
dput(result)


####################  getRepoV1MembershipInvitationOpenInvitationCount  ####################

library(synr)

api_instance <- MembershipInvitationServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1MembershipInvitationOpenInvitationCount(data_file = "result.txt")
result <- api_instance$getRepoV1MembershipInvitationOpenInvitationCount()
dput(result)


####################  getRepoV1TeamIdOpenInvitation  ####################

library(synr)
var_id <- "id_example" # character | the ID of the Team extending the invitations
var_invitee_id <- "invitee_id_example" # character | the ID of the Synapse user to which invitations have been extended (optional) (Optional)
var_limit <- 56 # integer | the maximum number of invitations to return (default 10) (Optional)
var_offset <- 56 # integer | the starting index of the returned results (default 0) (Optional)

api_instance <- MembershipInvitationServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1TeamIdOpenInvitation(var_id, invitee_id = var_invitee_id, limit = var_limit, offset = var_offsetdata_file = "result.txt")
result <- api_instance$getRepoV1TeamIdOpenInvitation(var_id, invitee_id = var_invitee_id, limit = var_limit, offset = var_offset)
dput(result)


####################  getRepoV1UserIdOpenInvitation  ####################

library(synr)
var_id <- "id_example" # character | the ID of the Synapse user to which invitations have been extended.
var_team_id <- "team_id_example" # character | the ID of the Team extending the invitations (optional) (Optional)
var_limit <- 56 # integer | the maximum number of invitations to return (default 10) (Optional)
var_offset <- 56 # integer | the starting index of the returned results (default 0) (Optional)

api_instance <- MembershipInvitationServicesApi$new()

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$getRepoV1UserIdOpenInvitation(var_id, team_id = var_team_id, limit = var_limit, offset = var_offsetdata_file = "result.txt")
result <- api_instance$getRepoV1UserIdOpenInvitation(var_id, team_id = var_team_id, limit = var_limit, offset = var_offset)
dput(result)


####################  postRepoV1MembershipInvitation  ####################

library(synr)
var_notification_unsubscribe_endpoint <- "notification_unsubscribe_endpoint_example" # character | The portal endpoint prefix for one-click email unsubscription.  A signed, serialized token is appended to create the complete URL:  ,<a href=\"${org.sagebionetworks.repo.model.message.NotificationSettingsSignedToken}\">,NotificationSettingsSignedToken,</a>,.  In normal operation, this parameter should be omitted.
var_org_sagebionetworks_repo_model_membership_invitation <- org.sagebionetworks.repo.model.MembershipInvitation$new("id_example", "teamId_example", "inviteeId_example", "inviteeEmail_example", "message_example", "expiresOn_example", "createdOn_example", "createdBy_example") # OrgSagebionetworksRepoModelMembershipInvitation | 
var_accept_invitation_endpoint <- "accept_invitation_endpoint_example" # character | The portal endpoint prefix for one-click acceptance of the membership invitation.  A signed, serialized token is appended to create the complete URL:  ,<a href=\"${org.sagebionetworks.repo.model.JoinTeamSignedToken}\">,JoinTeamSignedToken,</a>,  if an inviteeId is specified, or  ,<a href=\"${org.sagebionetworks.repo.model.MembershipInvtnSignedToken}\">,MembershipInvtnSignedToken,</a>,  if an inviteeEmail is specified.  In normal operation, this parameter should be omitted. (Optional)

api_instance <- MembershipInvitationServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$postRepoV1MembershipInvitation(var_notification_unsubscribe_endpoint, var_org_sagebionetworks_repo_model_membership_invitation, accept_invitation_endpoint = var_accept_invitation_endpointdata_file = "result.txt")
result <- api_instance$postRepoV1MembershipInvitation(var_notification_unsubscribe_endpoint, var_org_sagebionetworks_repo_model_membership_invitation, accept_invitation_endpoint = var_accept_invitation_endpoint)
dput(result)


####################  postRepoV1MembershipInvitationId  ####################

library(synr)
var_id <- "id_example" # character | 
var_org_sagebionetworks_repo_model_membership_invtn_signed_token <- org.sagebionetworks.repo.model.MembershipInvtnSignedToken$new("org.sagebionetworks.repo.model.MembershipInvtnSignedToken", "hmac_example", 123, "expiresOn_example", "createdOn_example", "membershipInvitationId_example") # OrgSagebionetworksRepoModelMembershipInvtnSignedToken | 

api_instance <- MembershipInvitationServicesApi$new()

# to save the result into a file, simply add the optional `data_file` parameter, e.g.
# result <- api_instance$postRepoV1MembershipInvitationId(var_id, var_org_sagebionetworks_repo_model_membership_invtn_signed_tokendata_file = "result.txt")
result <- api_instance$postRepoV1MembershipInvitationId(var_id, var_org_sagebionetworks_repo_model_membership_invtn_signed_token)
dput(result)


####################  putRepoV1MembershipInvitationIdInviteeId  ####################

library(synr)
var_id <- "id_example" # character | 
var_org_sagebionetworks_repo_model_invitee_verification_signed_token <- org.sagebionetworks.repo.model.InviteeVerificationSignedToken$new("org.sagebionetworks.repo.model.InviteeVerificationSignedToken", "hmac_example", 123, "expiresOn_example", "createdOn_example", "inviteeId_example", "membershipInvitationId_example") # OrgSagebionetworksRepoModelInviteeVerificationSignedToken | 

api_instance <- MembershipInvitationServicesApi$new()

# Configure HTTP bearer authorization: bearerAuth
api_instance$api_client$bearer_token <- Sys.getenv("BEARER_TOKEN")

api_instance$putRepoV1MembershipInvitationIdInviteeId(var_id, var_org_sagebionetworks_repo_model_invitee_verification_signed_token)


}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{api_client}}{Handles the client-server communication.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-MembershipInvitationServicesApi-new}{\code{MembershipInvitationServicesApi$new()}}
\item \href{#method-MembershipInvitationServicesApi-deleteRepoV1MembershipInvitationId}{\code{MembershipInvitationServicesApi$deleteRepoV1MembershipInvitationId()}}
\item \href{#method-MembershipInvitationServicesApi-deleteRepoV1MembershipInvitationIdWithHttpInfo}{\code{MembershipInvitationServicesApi$deleteRepoV1MembershipInvitationIdWithHttpInfo()}}
\item \href{#method-MembershipInvitationServicesApi-getRepoV1MembershipInvitationId}{\code{MembershipInvitationServicesApi$getRepoV1MembershipInvitationId()}}
\item \href{#method-MembershipInvitationServicesApi-getRepoV1MembershipInvitationIdWithHttpInfo}{\code{MembershipInvitationServicesApi$getRepoV1MembershipInvitationIdWithHttpInfo()}}
\item \href{#method-MembershipInvitationServicesApi-getRepoV1MembershipInvitationIdInviteeVerificationSignedToken}{\code{MembershipInvitationServicesApi$getRepoV1MembershipInvitationIdInviteeVerificationSignedToken()}}
\item \href{#method-MembershipInvitationServicesApi-getRepoV1MembershipInvitationIdInviteeVerificationSignedTokenWithHttpInfo}{\code{MembershipInvitationServicesApi$getRepoV1MembershipInvitationIdInviteeVerificationSignedTokenWithHttpInfo()}}
\item \href{#method-MembershipInvitationServicesApi-getRepoV1MembershipInvitationOpenInvitationCount}{\code{MembershipInvitationServicesApi$getRepoV1MembershipInvitationOpenInvitationCount()}}
\item \href{#method-MembershipInvitationServicesApi-getRepoV1MembershipInvitationOpenInvitationCountWithHttpInfo}{\code{MembershipInvitationServicesApi$getRepoV1MembershipInvitationOpenInvitationCountWithHttpInfo()}}
\item \href{#method-MembershipInvitationServicesApi-getRepoV1TeamIdOpenInvitation}{\code{MembershipInvitationServicesApi$getRepoV1TeamIdOpenInvitation()}}
\item \href{#method-MembershipInvitationServicesApi-getRepoV1TeamIdOpenInvitationWithHttpInfo}{\code{MembershipInvitationServicesApi$getRepoV1TeamIdOpenInvitationWithHttpInfo()}}
\item \href{#method-MembershipInvitationServicesApi-getRepoV1UserIdOpenInvitation}{\code{MembershipInvitationServicesApi$getRepoV1UserIdOpenInvitation()}}
\item \href{#method-MembershipInvitationServicesApi-getRepoV1UserIdOpenInvitationWithHttpInfo}{\code{MembershipInvitationServicesApi$getRepoV1UserIdOpenInvitationWithHttpInfo()}}
\item \href{#method-MembershipInvitationServicesApi-postRepoV1MembershipInvitation}{\code{MembershipInvitationServicesApi$postRepoV1MembershipInvitation()}}
\item \href{#method-MembershipInvitationServicesApi-postRepoV1MembershipInvitationWithHttpInfo}{\code{MembershipInvitationServicesApi$postRepoV1MembershipInvitationWithHttpInfo()}}
\item \href{#method-MembershipInvitationServicesApi-postRepoV1MembershipInvitationId}{\code{MembershipInvitationServicesApi$postRepoV1MembershipInvitationId()}}
\item \href{#method-MembershipInvitationServicesApi-postRepoV1MembershipInvitationIdWithHttpInfo}{\code{MembershipInvitationServicesApi$postRepoV1MembershipInvitationIdWithHttpInfo()}}
\item \href{#method-MembershipInvitationServicesApi-putRepoV1MembershipInvitationIdInviteeId}{\code{MembershipInvitationServicesApi$putRepoV1MembershipInvitationIdInviteeId()}}
\item \href{#method-MembershipInvitationServicesApi-putRepoV1MembershipInvitationIdInviteeIdWithHttpInfo}{\code{MembershipInvitationServicesApi$putRepoV1MembershipInvitationIdInviteeIdWithHttpInfo()}}
\item \href{#method-MembershipInvitationServicesApi-clone}{\code{MembershipInvitationServicesApi$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MembershipInvitationServicesApi-new"></a>}}
\if{latex}{\out{\hypertarget{method-MembershipInvitationServicesApi-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new MembershipInvitationServicesApi.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MembershipInvitationServicesApi$new(api_client)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{api_client}}{An instance of API client.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MembershipInvitationServicesApi-deleteRepoV1MembershipInvitationId"></a>}}
\if{latex}{\out{\hypertarget{method-MembershipInvitationServicesApi-deleteRepoV1MembershipInvitationId}{}}}
\subsection{Method \code{deleteRepoV1MembershipInvitationId()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MembershipInvitationServicesApi$deleteRepoV1MembershipInvitationId(id, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{the ID of the invitation to be deleted}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
void
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MembershipInvitationServicesApi-deleteRepoV1MembershipInvitationIdWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-MembershipInvitationServicesApi-deleteRepoV1MembershipInvitationIdWithHttpInfo}{}}}
\subsection{Method \code{deleteRepoV1MembershipInvitationIdWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MembershipInvitationServicesApi$deleteRepoV1MembershipInvitationIdWithHttpInfo(
  id,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{the ID of the invitation to be deleted}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (void) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MembershipInvitationServicesApi-getRepoV1MembershipInvitationId"></a>}}
\if{latex}{\out{\hypertarget{method-MembershipInvitationServicesApi-getRepoV1MembershipInvitationId}{}}}
\subsection{Method \code{getRepoV1MembershipInvitationId()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MembershipInvitationServicesApi$getRepoV1MembershipInvitationId(
  id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{the ID of the invitation}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelMembershipInvitation
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MembershipInvitationServicesApi-getRepoV1MembershipInvitationIdWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-MembershipInvitationServicesApi-getRepoV1MembershipInvitationIdWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1MembershipInvitationIdWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MembershipInvitationServicesApi$getRepoV1MembershipInvitationIdWithHttpInfo(
  id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{the ID of the invitation}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelMembershipInvitation) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MembershipInvitationServicesApi-getRepoV1MembershipInvitationIdInviteeVerificationSignedToken"></a>}}
\if{latex}{\out{\hypertarget{method-MembershipInvitationServicesApi-getRepoV1MembershipInvitationIdInviteeVerificationSignedToken}{}}}
\subsection{Method \code{getRepoV1MembershipInvitationIdInviteeVerificationSignedToken()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MembershipInvitationServicesApi$getRepoV1MembershipInvitationIdInviteeVerificationSignedToken(
  id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelInviteeVerificationSignedToken
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MembershipInvitationServicesApi-getRepoV1MembershipInvitationIdInviteeVerificationSignedTokenWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-MembershipInvitationServicesApi-getRepoV1MembershipInvitationIdInviteeVerificationSignedTokenWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1MembershipInvitationIdInviteeVerificationSignedTokenWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MembershipInvitationServicesApi$getRepoV1MembershipInvitationIdInviteeVerificationSignedTokenWithHttpInfo(
  id,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelInviteeVerificationSignedToken) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MembershipInvitationServicesApi-getRepoV1MembershipInvitationOpenInvitationCount"></a>}}
\if{latex}{\out{\hypertarget{method-MembershipInvitationServicesApi-getRepoV1MembershipInvitationOpenInvitationCount}{}}}
\subsection{Method \code{getRepoV1MembershipInvitationOpenInvitationCount()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MembershipInvitationServicesApi$getRepoV1MembershipInvitationOpenInvitationCount(
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelCount
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MembershipInvitationServicesApi-getRepoV1MembershipInvitationOpenInvitationCountWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-MembershipInvitationServicesApi-getRepoV1MembershipInvitationOpenInvitationCountWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1MembershipInvitationOpenInvitationCountWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MembershipInvitationServicesApi$getRepoV1MembershipInvitationOpenInvitationCountWithHttpInfo(
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelCount) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MembershipInvitationServicesApi-getRepoV1TeamIdOpenInvitation"></a>}}
\if{latex}{\out{\hypertarget{method-MembershipInvitationServicesApi-getRepoV1TeamIdOpenInvitation}{}}}
\subsection{Method \code{getRepoV1TeamIdOpenInvitation()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MembershipInvitationServicesApi$getRepoV1TeamIdOpenInvitation(
  id,
  invitee_id = NULL,
  limit = NULL,
  offset = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{the ID of the Team extending the invitations}

\item{\code{invitee_id}}{(optional) the ID of the Synapse user to which invitations have been extended (optional)}

\item{\code{limit}}{(optional) the maximum number of invitations to return (default 10)}

\item{\code{offset}}{(optional) the starting index of the returned results (default 0)}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
PaginatedResultsOfMembershipInvitation
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MembershipInvitationServicesApi-getRepoV1TeamIdOpenInvitationWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-MembershipInvitationServicesApi-getRepoV1TeamIdOpenInvitationWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1TeamIdOpenInvitationWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MembershipInvitationServicesApi$getRepoV1TeamIdOpenInvitationWithHttpInfo(
  id,
  invitee_id = NULL,
  limit = NULL,
  offset = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{the ID of the Team extending the invitations}

\item{\code{invitee_id}}{(optional) the ID of the Synapse user to which invitations have been extended (optional)}

\item{\code{limit}}{(optional) the maximum number of invitations to return (default 10)}

\item{\code{offset}}{(optional) the starting index of the returned results (default 0)}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (PaginatedResultsOfMembershipInvitation) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MembershipInvitationServicesApi-getRepoV1UserIdOpenInvitation"></a>}}
\if{latex}{\out{\hypertarget{method-MembershipInvitationServicesApi-getRepoV1UserIdOpenInvitation}{}}}
\subsection{Method \code{getRepoV1UserIdOpenInvitation()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MembershipInvitationServicesApi$getRepoV1UserIdOpenInvitation(
  id,
  team_id = NULL,
  limit = NULL,
  offset = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{the ID of the Synapse user to which invitations have been extended.}

\item{\code{team_id}}{(optional) the ID of the Team extending the invitations (optional)}

\item{\code{limit}}{(optional) the maximum number of invitations to return (default 10)}

\item{\code{offset}}{(optional) the starting index of the returned results (default 0)}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
PaginatedResultsOfMembershipInvitation
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MembershipInvitationServicesApi-getRepoV1UserIdOpenInvitationWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-MembershipInvitationServicesApi-getRepoV1UserIdOpenInvitationWithHttpInfo}{}}}
\subsection{Method \code{getRepoV1UserIdOpenInvitationWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MembershipInvitationServicesApi$getRepoV1UserIdOpenInvitationWithHttpInfo(
  id,
  team_id = NULL,
  limit = NULL,
  offset = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{the ID of the Synapse user to which invitations have been extended.}

\item{\code{team_id}}{(optional) the ID of the Team extending the invitations (optional)}

\item{\code{limit}}{(optional) the maximum number of invitations to return (default 10)}

\item{\code{offset}}{(optional) the starting index of the returned results (default 0)}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (PaginatedResultsOfMembershipInvitation) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MembershipInvitationServicesApi-postRepoV1MembershipInvitation"></a>}}
\if{latex}{\out{\hypertarget{method-MembershipInvitationServicesApi-postRepoV1MembershipInvitation}{}}}
\subsection{Method \code{postRepoV1MembershipInvitation()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MembershipInvitationServicesApi$postRepoV1MembershipInvitation(
  notification_unsubscribe_endpoint,
  org_sagebionetworks_repo_model_membership_invitation,
  accept_invitation_endpoint = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{notification_unsubscribe_endpoint}}{The portal endpoint prefix for one-click email unsubscription.  A signed, serialized token is appended to create the complete URL:  ,<a href=\"${org.sagebionetworks.repo.model.message.NotificationSettingsSignedToken}\">,NotificationSettingsSignedToken,</a>,.  In normal operation, this parameter should be omitted.}

\item{\code{org_sagebionetworks_repo_model_membership_invitation}}{}

\item{\code{accept_invitation_endpoint}}{(optional) The portal endpoint prefix for one-click acceptance of the membership invitation.  A signed, serialized token is appended to create the complete URL:  ,<a href=\"${org.sagebionetworks.repo.model.JoinTeamSignedToken}\">,JoinTeamSignedToken,</a>,  if an inviteeId is specified, or  ,<a href=\"${org.sagebionetworks.repo.model.MembershipInvtnSignedToken}\">,MembershipInvtnSignedToken,</a>,  if an inviteeEmail is specified.  In normal operation, this parameter should be omitted.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelMembershipInvitation
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MembershipInvitationServicesApi-postRepoV1MembershipInvitationWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-MembershipInvitationServicesApi-postRepoV1MembershipInvitationWithHttpInfo}{}}}
\subsection{Method \code{postRepoV1MembershipInvitationWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MembershipInvitationServicesApi$postRepoV1MembershipInvitationWithHttpInfo(
  notification_unsubscribe_endpoint,
  org_sagebionetworks_repo_model_membership_invitation,
  accept_invitation_endpoint = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{notification_unsubscribe_endpoint}}{The portal endpoint prefix for one-click email unsubscription.  A signed, serialized token is appended to create the complete URL:  ,<a href=\"${org.sagebionetworks.repo.model.message.NotificationSettingsSignedToken}\">,NotificationSettingsSignedToken,</a>,.  In normal operation, this parameter should be omitted.}

\item{\code{org_sagebionetworks_repo_model_membership_invitation}}{}

\item{\code{accept_invitation_endpoint}}{(optional) The portal endpoint prefix for one-click acceptance of the membership invitation.  A signed, serialized token is appended to create the complete URL:  ,<a href=\"${org.sagebionetworks.repo.model.JoinTeamSignedToken}\">,JoinTeamSignedToken,</a>,  if an inviteeId is specified, or  ,<a href=\"${org.sagebionetworks.repo.model.MembershipInvtnSignedToken}\">,MembershipInvtnSignedToken,</a>,  if an inviteeEmail is specified.  In normal operation, this parameter should be omitted.}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelMembershipInvitation) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MembershipInvitationServicesApi-postRepoV1MembershipInvitationId"></a>}}
\if{latex}{\out{\hypertarget{method-MembershipInvitationServicesApi-postRepoV1MembershipInvitationId}{}}}
\subsection{Method \code{postRepoV1MembershipInvitationId()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MembershipInvitationServicesApi$postRepoV1MembershipInvitationId(
  id,
  org_sagebionetworks_repo_model_membership_invtn_signed_token,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{}

\item{\code{org_sagebionetworks_repo_model_membership_invtn_signed_token}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
OrgSagebionetworksRepoModelMembershipInvitation
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MembershipInvitationServicesApi-postRepoV1MembershipInvitationIdWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-MembershipInvitationServicesApi-postRepoV1MembershipInvitationIdWithHttpInfo}{}}}
\subsection{Method \code{postRepoV1MembershipInvitationIdWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MembershipInvitationServicesApi$postRepoV1MembershipInvitationIdWithHttpInfo(
  id,
  org_sagebionetworks_repo_model_membership_invtn_signed_token,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{}

\item{\code{org_sagebionetworks_repo_model_membership_invtn_signed_token}}{}

\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (OrgSagebionetworksRepoModelMembershipInvitation) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MembershipInvitationServicesApi-putRepoV1MembershipInvitationIdInviteeId"></a>}}
\if{latex}{\out{\hypertarget{method-MembershipInvitationServicesApi-putRepoV1MembershipInvitationIdInviteeId}{}}}
\subsection{Method \code{putRepoV1MembershipInvitationIdInviteeId()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MembershipInvitationServicesApi$putRepoV1MembershipInvitationIdInviteeId(
  id,
  org_sagebionetworks_repo_model_invitee_verification_signed_token,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{}

\item{\code{org_sagebionetworks_repo_model_invitee_verification_signed_token}}{}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
void
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MembershipInvitationServicesApi-putRepoV1MembershipInvitationIdInviteeIdWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-MembershipInvitationServicesApi-putRepoV1MembershipInvitationIdInviteeIdWithHttpInfo}{}}}
\subsection{Method \code{putRepoV1MembershipInvitationIdInviteeIdWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MembershipInvitationServicesApi$putRepoV1MembershipInvitationIdInviteeIdWithHttpInfo(
  id,
  org_sagebionetworks_repo_model_invitee_verification_signed_token,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{}

\item{\code{org_sagebionetworks_repo_model_invitee_verification_signed_token}}{}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (void) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-MembershipInvitationServicesApi-clone"></a>}}
\if{latex}{\out{\hypertarget{method-MembershipInvitationServicesApi-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MembershipInvitationServicesApi$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
