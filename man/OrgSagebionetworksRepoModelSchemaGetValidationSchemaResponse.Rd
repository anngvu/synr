% Generated by roxygen2: do not edit by hand
% Please edit documentation in
%   R/org_sagebionetworks_repo_model_schema_get_validation_schema_response.R
\docType{class}
\name{OrgSagebionetworksRepoModelSchemaGetValidationSchemaResponse}
\alias{OrgSagebionetworksRepoModelSchemaGetValidationSchemaResponse}
\title{OrgSagebionetworksRepoModelSchemaGetValidationSchemaResponse}
\format{
An \code{R6Class} generator object
}
\description{
Response body containing the resulting compiled validation schema.

OrgSagebionetworksRepoModelSchemaGetValidationSchemaResponse Class
}
\details{
Create a new OrgSagebionetworksRepoModelSchemaGetValidationSchemaResponse
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{concreteType}}{character}

\item{\code{validationSchema}}{\link{OrgSagebionetworksRepoModelSchemaJsonSchema} [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-OrgSagebionetworksRepoModelSchemaGetValidationSchemaResponse-new}{\code{OrgSagebionetworksRepoModelSchemaGetValidationSchemaResponse$new()}}
\item \href{#method-OrgSagebionetworksRepoModelSchemaGetValidationSchemaResponse-toJSON}{\code{OrgSagebionetworksRepoModelSchemaGetValidationSchemaResponse$toJSON()}}
\item \href{#method-OrgSagebionetworksRepoModelSchemaGetValidationSchemaResponse-fromJSON}{\code{OrgSagebionetworksRepoModelSchemaGetValidationSchemaResponse$fromJSON()}}
\item \href{#method-OrgSagebionetworksRepoModelSchemaGetValidationSchemaResponse-toJSONString}{\code{OrgSagebionetworksRepoModelSchemaGetValidationSchemaResponse$toJSONString()}}
\item \href{#method-OrgSagebionetworksRepoModelSchemaGetValidationSchemaResponse-fromJSONString}{\code{OrgSagebionetworksRepoModelSchemaGetValidationSchemaResponse$fromJSONString()}}
\item \href{#method-OrgSagebionetworksRepoModelSchemaGetValidationSchemaResponse-validateJSON}{\code{OrgSagebionetworksRepoModelSchemaGetValidationSchemaResponse$validateJSON()}}
\item \href{#method-OrgSagebionetworksRepoModelSchemaGetValidationSchemaResponse-toString}{\code{OrgSagebionetworksRepoModelSchemaGetValidationSchemaResponse$toString()}}
\item \href{#method-OrgSagebionetworksRepoModelSchemaGetValidationSchemaResponse-isValid}{\code{OrgSagebionetworksRepoModelSchemaGetValidationSchemaResponse$isValid()}}
\item \href{#method-OrgSagebionetworksRepoModelSchemaGetValidationSchemaResponse-getInvalidFields}{\code{OrgSagebionetworksRepoModelSchemaGetValidationSchemaResponse$getInvalidFields()}}
\item \href{#method-OrgSagebionetworksRepoModelSchemaGetValidationSchemaResponse-print}{\code{OrgSagebionetworksRepoModelSchemaGetValidationSchemaResponse$print()}}
\item \href{#method-OrgSagebionetworksRepoModelSchemaGetValidationSchemaResponse-clone}{\code{OrgSagebionetworksRepoModelSchemaGetValidationSchemaResponse$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelSchemaGetValidationSchemaResponse-new"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelSchemaGetValidationSchemaResponse-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new OrgSagebionetworksRepoModelSchemaGetValidationSchemaResponse class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelSchemaGetValidationSchemaResponse$new(
  concreteType,
  validationSchema = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{concreteType}}{concreteType}

\item{\code{validationSchema}}{validationSchema}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelSchemaGetValidationSchemaResponse-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelSchemaGetValidationSchemaResponse-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelSchemaGetValidationSchemaResponse$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
OrgSagebionetworksRepoModelSchemaGetValidationSchemaResponse in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelSchemaGetValidationSchemaResponse-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelSchemaGetValidationSchemaResponse-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of OrgSagebionetworksRepoModelSchemaGetValidationSchemaResponse
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelSchemaGetValidationSchemaResponse$fromJSON(
  input_json
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of OrgSagebionetworksRepoModelSchemaGetValidationSchemaResponse
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelSchemaGetValidationSchemaResponse-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelSchemaGetValidationSchemaResponse-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelSchemaGetValidationSchemaResponse$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
OrgSagebionetworksRepoModelSchemaGetValidationSchemaResponse in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelSchemaGetValidationSchemaResponse-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelSchemaGetValidationSchemaResponse-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of OrgSagebionetworksRepoModelSchemaGetValidationSchemaResponse
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelSchemaGetValidationSchemaResponse$fromJSONString(
  input_json
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of OrgSagebionetworksRepoModelSchemaGetValidationSchemaResponse
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelSchemaGetValidationSchemaResponse-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelSchemaGetValidationSchemaResponse-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to OrgSagebionetworksRepoModelSchemaGetValidationSchemaResponse and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelSchemaGetValidationSchemaResponse$validateJSON(
  input
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelSchemaGetValidationSchemaResponse-toString"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelSchemaGetValidationSchemaResponse-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelSchemaGetValidationSchemaResponse$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of OrgSagebionetworksRepoModelSchemaGetValidationSchemaResponse
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelSchemaGetValidationSchemaResponse-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelSchemaGetValidationSchemaResponse-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelSchemaGetValidationSchemaResponse$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelSchemaGetValidationSchemaResponse-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelSchemaGetValidationSchemaResponse-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelSchemaGetValidationSchemaResponse$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelSchemaGetValidationSchemaResponse-print"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelSchemaGetValidationSchemaResponse-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelSchemaGetValidationSchemaResponse$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelSchemaGetValidationSchemaResponse-clone"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelSchemaGetValidationSchemaResponse-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelSchemaGetValidationSchemaResponse$clone(
  deep = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
