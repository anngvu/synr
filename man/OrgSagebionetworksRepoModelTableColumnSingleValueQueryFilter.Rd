% Generated by roxygen2: do not edit by hand
% Please edit documentation in
%   R/org_sagebionetworks_repo_model_table_column_single_value_query_filter.R
\docType{class}
\name{OrgSagebionetworksRepoModelTableColumnSingleValueQueryFilter}
\alias{OrgSagebionetworksRepoModelTableColumnSingleValueQueryFilter}
\title{OrgSagebionetworksRepoModelTableColumnSingleValueQueryFilter}
\format{
An \code{R6Class} generator object
}
\description{
A filter using a single value against a column. Values within the values list have an OR relationship

OrgSagebionetworksRepoModelTableColumnSingleValueQueryFilter Class
}
\details{
Create a new OrgSagebionetworksRepoModelTableColumnSingleValueQueryFilter
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{concreteType}}{character}

\item{\code{isDefiningCondition}}{character [optional]}

\item{\code{values}}{Values to be used with the filter. list(character) [optional]}

\item{\code{columnName}}{character [optional]}

\item{\code{operator}}{character [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-OrgSagebionetworksRepoModelTableColumnSingleValueQueryFilter-new}{\code{OrgSagebionetworksRepoModelTableColumnSingleValueQueryFilter$new()}}
\item \href{#method-OrgSagebionetworksRepoModelTableColumnSingleValueQueryFilter-toJSON}{\code{OrgSagebionetworksRepoModelTableColumnSingleValueQueryFilter$toJSON()}}
\item \href{#method-OrgSagebionetworksRepoModelTableColumnSingleValueQueryFilter-fromJSON}{\code{OrgSagebionetworksRepoModelTableColumnSingleValueQueryFilter$fromJSON()}}
\item \href{#method-OrgSagebionetworksRepoModelTableColumnSingleValueQueryFilter-toJSONString}{\code{OrgSagebionetworksRepoModelTableColumnSingleValueQueryFilter$toJSONString()}}
\item \href{#method-OrgSagebionetworksRepoModelTableColumnSingleValueQueryFilter-fromJSONString}{\code{OrgSagebionetworksRepoModelTableColumnSingleValueQueryFilter$fromJSONString()}}
\item \href{#method-OrgSagebionetworksRepoModelTableColumnSingleValueQueryFilter-validateJSON}{\code{OrgSagebionetworksRepoModelTableColumnSingleValueQueryFilter$validateJSON()}}
\item \href{#method-OrgSagebionetworksRepoModelTableColumnSingleValueQueryFilter-toString}{\code{OrgSagebionetworksRepoModelTableColumnSingleValueQueryFilter$toString()}}
\item \href{#method-OrgSagebionetworksRepoModelTableColumnSingleValueQueryFilter-isValid}{\code{OrgSagebionetworksRepoModelTableColumnSingleValueQueryFilter$isValid()}}
\item \href{#method-OrgSagebionetworksRepoModelTableColumnSingleValueQueryFilter-getInvalidFields}{\code{OrgSagebionetworksRepoModelTableColumnSingleValueQueryFilter$getInvalidFields()}}
\item \href{#method-OrgSagebionetworksRepoModelTableColumnSingleValueQueryFilter-print}{\code{OrgSagebionetworksRepoModelTableColumnSingleValueQueryFilter$print()}}
\item \href{#method-OrgSagebionetworksRepoModelTableColumnSingleValueQueryFilter-clone}{\code{OrgSagebionetworksRepoModelTableColumnSingleValueQueryFilter$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableColumnSingleValueQueryFilter-new"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableColumnSingleValueQueryFilter-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new OrgSagebionetworksRepoModelTableColumnSingleValueQueryFilter class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableColumnSingleValueQueryFilter$new(
  concreteType,
  isDefiningCondition = NULL,
  values = NULL,
  columnName = NULL,
  operator = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{concreteType}}{concreteType}

\item{\code{isDefiningCondition}}{isDefiningCondition}

\item{\code{values}}{Values to be used with the filter.}

\item{\code{columnName}}{columnName}

\item{\code{operator}}{operator}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableColumnSingleValueQueryFilter-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableColumnSingleValueQueryFilter-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableColumnSingleValueQueryFilter$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
OrgSagebionetworksRepoModelTableColumnSingleValueQueryFilter in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableColumnSingleValueQueryFilter-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableColumnSingleValueQueryFilter-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of OrgSagebionetworksRepoModelTableColumnSingleValueQueryFilter
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableColumnSingleValueQueryFilter$fromJSON(
  input_json
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of OrgSagebionetworksRepoModelTableColumnSingleValueQueryFilter
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableColumnSingleValueQueryFilter-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableColumnSingleValueQueryFilter-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableColumnSingleValueQueryFilter$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
OrgSagebionetworksRepoModelTableColumnSingleValueQueryFilter in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableColumnSingleValueQueryFilter-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableColumnSingleValueQueryFilter-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of OrgSagebionetworksRepoModelTableColumnSingleValueQueryFilter
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableColumnSingleValueQueryFilter$fromJSONString(
  input_json
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of OrgSagebionetworksRepoModelTableColumnSingleValueQueryFilter
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableColumnSingleValueQueryFilter-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableColumnSingleValueQueryFilter-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to OrgSagebionetworksRepoModelTableColumnSingleValueQueryFilter and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableColumnSingleValueQueryFilter$validateJSON(
  input
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableColumnSingleValueQueryFilter-toString"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableColumnSingleValueQueryFilter-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableColumnSingleValueQueryFilter$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of OrgSagebionetworksRepoModelTableColumnSingleValueQueryFilter
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableColumnSingleValueQueryFilter-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableColumnSingleValueQueryFilter-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableColumnSingleValueQueryFilter$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableColumnSingleValueQueryFilter-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableColumnSingleValueQueryFilter-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableColumnSingleValueQueryFilter$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableColumnSingleValueQueryFilter-print"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableColumnSingleValueQueryFilter-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableColumnSingleValueQueryFilter$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableColumnSingleValueQueryFilter-clone"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableColumnSingleValueQueryFilter-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableColumnSingleValueQueryFilter$clone(
  deep = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
