% Generated by roxygen2: do not edit by hand
% Please edit documentation in
%   R/org_sagebionetworks_repo_model_file_multipart_upload_status.R
\docType{class}
\name{OrgSagebionetworksRepoModelFileMultipartUploadStatus}
\alias{OrgSagebionetworksRepoModelFileMultipartUploadStatus}
\title{OrgSagebionetworksRepoModelFileMultipartUploadStatus}
\format{
An \code{R6Class} generator object
}
\description{
Describes the status of a multi-part file upload.

OrgSagebionetworksRepoModelFileMultipartUploadStatus Class
}
\details{
Create a new OrgSagebionetworksRepoModelFileMultipartUploadStatus
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{uploadId}}{character [optional]}

\item{\code{startedBy}}{character [optional]}

\item{\code{startedOn}}{character [optional]}

\item{\code{updatedOn}}{character [optional]}

\item{\code{partsState}}{character [optional]}

\item{\code{state}}{character [optional]}

\item{\code{resultFileHandleId}}{character [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-OrgSagebionetworksRepoModelFileMultipartUploadStatus-new}{\code{OrgSagebionetworksRepoModelFileMultipartUploadStatus$new()}}
\item \href{#method-OrgSagebionetworksRepoModelFileMultipartUploadStatus-toJSON}{\code{OrgSagebionetworksRepoModelFileMultipartUploadStatus$toJSON()}}
\item \href{#method-OrgSagebionetworksRepoModelFileMultipartUploadStatus-fromJSON}{\code{OrgSagebionetworksRepoModelFileMultipartUploadStatus$fromJSON()}}
\item \href{#method-OrgSagebionetworksRepoModelFileMultipartUploadStatus-toJSONString}{\code{OrgSagebionetworksRepoModelFileMultipartUploadStatus$toJSONString()}}
\item \href{#method-OrgSagebionetworksRepoModelFileMultipartUploadStatus-fromJSONString}{\code{OrgSagebionetworksRepoModelFileMultipartUploadStatus$fromJSONString()}}
\item \href{#method-OrgSagebionetworksRepoModelFileMultipartUploadStatus-validateJSON}{\code{OrgSagebionetworksRepoModelFileMultipartUploadStatus$validateJSON()}}
\item \href{#method-OrgSagebionetworksRepoModelFileMultipartUploadStatus-toString}{\code{OrgSagebionetworksRepoModelFileMultipartUploadStatus$toString()}}
\item \href{#method-OrgSagebionetworksRepoModelFileMultipartUploadStatus-isValid}{\code{OrgSagebionetworksRepoModelFileMultipartUploadStatus$isValid()}}
\item \href{#method-OrgSagebionetworksRepoModelFileMultipartUploadStatus-getInvalidFields}{\code{OrgSagebionetworksRepoModelFileMultipartUploadStatus$getInvalidFields()}}
\item \href{#method-OrgSagebionetworksRepoModelFileMultipartUploadStatus-print}{\code{OrgSagebionetworksRepoModelFileMultipartUploadStatus$print()}}
\item \href{#method-OrgSagebionetworksRepoModelFileMultipartUploadStatus-clone}{\code{OrgSagebionetworksRepoModelFileMultipartUploadStatus$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelFileMultipartUploadStatus-new"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelFileMultipartUploadStatus-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new OrgSagebionetworksRepoModelFileMultipartUploadStatus class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelFileMultipartUploadStatus$new(
  uploadId = NULL,
  startedBy = NULL,
  startedOn = NULL,
  updatedOn = NULL,
  partsState = NULL,
  state = NULL,
  resultFileHandleId = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{uploadId}}{uploadId}

\item{\code{startedBy}}{startedBy}

\item{\code{startedOn}}{startedOn}

\item{\code{updatedOn}}{updatedOn}

\item{\code{partsState}}{partsState}

\item{\code{state}}{state}

\item{\code{resultFileHandleId}}{resultFileHandleId}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelFileMultipartUploadStatus-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelFileMultipartUploadStatus-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelFileMultipartUploadStatus$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
OrgSagebionetworksRepoModelFileMultipartUploadStatus in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelFileMultipartUploadStatus-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelFileMultipartUploadStatus-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of OrgSagebionetworksRepoModelFileMultipartUploadStatus
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelFileMultipartUploadStatus$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of OrgSagebionetworksRepoModelFileMultipartUploadStatus
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelFileMultipartUploadStatus-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelFileMultipartUploadStatus-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelFileMultipartUploadStatus$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
OrgSagebionetworksRepoModelFileMultipartUploadStatus in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelFileMultipartUploadStatus-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelFileMultipartUploadStatus-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of OrgSagebionetworksRepoModelFileMultipartUploadStatus
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelFileMultipartUploadStatus$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of OrgSagebionetworksRepoModelFileMultipartUploadStatus
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelFileMultipartUploadStatus-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelFileMultipartUploadStatus-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to OrgSagebionetworksRepoModelFileMultipartUploadStatus and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelFileMultipartUploadStatus$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelFileMultipartUploadStatus-toString"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelFileMultipartUploadStatus-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelFileMultipartUploadStatus$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of OrgSagebionetworksRepoModelFileMultipartUploadStatus
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelFileMultipartUploadStatus-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelFileMultipartUploadStatus-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelFileMultipartUploadStatus$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelFileMultipartUploadStatus-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelFileMultipartUploadStatus-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelFileMultipartUploadStatus$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelFileMultipartUploadStatus-print"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelFileMultipartUploadStatus-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelFileMultipartUploadStatus$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelFileMultipartUploadStatus-clone"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelFileMultipartUploadStatus-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelFileMultipartUploadStatus$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
