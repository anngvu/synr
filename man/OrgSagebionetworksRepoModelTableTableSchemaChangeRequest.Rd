% Generated by roxygen2: do not edit by hand
% Please edit documentation in
%   R/org_sagebionetworks_repo_model_table_table_schema_change_request.R
\docType{class}
\name{OrgSagebionetworksRepoModelTableTableSchemaChangeRequest}
\alias{OrgSagebionetworksRepoModelTableTableSchemaChangeRequest}
\title{OrgSagebionetworksRepoModelTableTableSchemaChangeRequest}
\format{
An \code{R6Class} generator object
}
\description{
An AsynchronousRequestBody to change the schema of a table.

OrgSagebionetworksRepoModelTableTableSchemaChangeRequest Class
}
\details{
Create a new OrgSagebionetworksRepoModelTableTableSchemaChangeRequest
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{concreteType}}{character}

\item{\code{entityId}}{character [optional]}

\item{\code{changes}}{List of changes that describes column additions, deletions, and updates list(\link{OrgSagebionetworksRepoModelTableColumnChange}) [optional]}

\item{\code{orderedColumnIds}}{Optional: Used to set the order of columns for this table. If this list is provided it must include the IDs of each column that will be in the schema after the changes of this request are applied. list(character) [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-OrgSagebionetworksRepoModelTableTableSchemaChangeRequest-new}{\code{OrgSagebionetworksRepoModelTableTableSchemaChangeRequest$new()}}
\item \href{#method-OrgSagebionetworksRepoModelTableTableSchemaChangeRequest-toJSON}{\code{OrgSagebionetworksRepoModelTableTableSchemaChangeRequest$toJSON()}}
\item \href{#method-OrgSagebionetworksRepoModelTableTableSchemaChangeRequest-fromJSON}{\code{OrgSagebionetworksRepoModelTableTableSchemaChangeRequest$fromJSON()}}
\item \href{#method-OrgSagebionetworksRepoModelTableTableSchemaChangeRequest-toJSONString}{\code{OrgSagebionetworksRepoModelTableTableSchemaChangeRequest$toJSONString()}}
\item \href{#method-OrgSagebionetworksRepoModelTableTableSchemaChangeRequest-fromJSONString}{\code{OrgSagebionetworksRepoModelTableTableSchemaChangeRequest$fromJSONString()}}
\item \href{#method-OrgSagebionetworksRepoModelTableTableSchemaChangeRequest-validateJSON}{\code{OrgSagebionetworksRepoModelTableTableSchemaChangeRequest$validateJSON()}}
\item \href{#method-OrgSagebionetworksRepoModelTableTableSchemaChangeRequest-toString}{\code{OrgSagebionetworksRepoModelTableTableSchemaChangeRequest$toString()}}
\item \href{#method-OrgSagebionetworksRepoModelTableTableSchemaChangeRequest-isValid}{\code{OrgSagebionetworksRepoModelTableTableSchemaChangeRequest$isValid()}}
\item \href{#method-OrgSagebionetworksRepoModelTableTableSchemaChangeRequest-getInvalidFields}{\code{OrgSagebionetworksRepoModelTableTableSchemaChangeRequest$getInvalidFields()}}
\item \href{#method-OrgSagebionetworksRepoModelTableTableSchemaChangeRequest-print}{\code{OrgSagebionetworksRepoModelTableTableSchemaChangeRequest$print()}}
\item \href{#method-OrgSagebionetworksRepoModelTableTableSchemaChangeRequest-clone}{\code{OrgSagebionetworksRepoModelTableTableSchemaChangeRequest$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableTableSchemaChangeRequest-new"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableTableSchemaChangeRequest-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new OrgSagebionetworksRepoModelTableTableSchemaChangeRequest class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableTableSchemaChangeRequest$new(
  concreteType,
  entityId = NULL,
  changes = NULL,
  orderedColumnIds = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{concreteType}}{concreteType}

\item{\code{entityId}}{entityId}

\item{\code{changes}}{List of changes that describes column additions, deletions, and updates}

\item{\code{orderedColumnIds}}{Optional: Used to set the order of columns for this table. If this list is provided it must include the IDs of each column that will be in the schema after the changes of this request are applied.}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableTableSchemaChangeRequest-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableTableSchemaChangeRequest-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableTableSchemaChangeRequest$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
OrgSagebionetworksRepoModelTableTableSchemaChangeRequest in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableTableSchemaChangeRequest-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableTableSchemaChangeRequest-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of OrgSagebionetworksRepoModelTableTableSchemaChangeRequest
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableTableSchemaChangeRequest$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of OrgSagebionetworksRepoModelTableTableSchemaChangeRequest
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableTableSchemaChangeRequest-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableTableSchemaChangeRequest-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableTableSchemaChangeRequest$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
OrgSagebionetworksRepoModelTableTableSchemaChangeRequest in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableTableSchemaChangeRequest-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableTableSchemaChangeRequest-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of OrgSagebionetworksRepoModelTableTableSchemaChangeRequest
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableTableSchemaChangeRequest$fromJSONString(
  input_json
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of OrgSagebionetworksRepoModelTableTableSchemaChangeRequest
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableTableSchemaChangeRequest-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableTableSchemaChangeRequest-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to OrgSagebionetworksRepoModelTableTableSchemaChangeRequest and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableTableSchemaChangeRequest$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableTableSchemaChangeRequest-toString"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableTableSchemaChangeRequest-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableTableSchemaChangeRequest$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of OrgSagebionetworksRepoModelTableTableSchemaChangeRequest
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableTableSchemaChangeRequest-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableTableSchemaChangeRequest-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableTableSchemaChangeRequest$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableTableSchemaChangeRequest-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableTableSchemaChangeRequest-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableTableSchemaChangeRequest$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableTableSchemaChangeRequest-print"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableTableSchemaChangeRequest-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableTableSchemaChangeRequest$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-OrgSagebionetworksRepoModelTableTableSchemaChangeRequest-clone"></a>}}
\if{latex}{\out{\hypertarget{method-OrgSagebionetworksRepoModelTableTableSchemaChangeRequest-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{OrgSagebionetworksRepoModelTableTableSchemaChangeRequest$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
